(function(){try{var e=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},t=new e.Error().stack;t&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[t]="89b23ab3-451c-441c-a08c-ccf5d5bcba1d",e._sentryDebugIdIdentifier="sentry-dbid-89b23ab3-451c-441c-a08c-ccf5d5bcba1d")}catch{}})();var v_=Object.defineProperty,k_=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,r)=>(typeof require<"u"?require:t)[r]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')}),Vm=(e,t)=>{for(var r in t)v_(e,r,{get:t[r],enumerable:!0})},I_={};Vm(I_,{Abs:()=>Qo,Acos:()=>Vs,Acosh:()=>Us,AdadeltaOptimizer:()=>ly,AdagradOptimizer:()=>uy,AdamOptimizer:()=>py,AdamaxOptimizer:()=>dy,Add:()=>Ga,AddN:()=>Gs,All:()=>el,Any:()=>tl,ArgMax:()=>rl,ArgMin:()=>nl,Asin:()=>Hs,Asinh:()=>js,Atan:()=>qs,Atan2:()=>Xs,Atanh:()=>Ks,AvgPool:()=>Zs,AvgPool3D:()=>al,AvgPool3DGrad:()=>fp,AvgPoolGrad:()=>Lh,BackendWasm:()=>bC,BatchMatMul:()=>Js,BatchToSpaceND:()=>sl,Bincount:()=>il,BroadcastArgs:()=>mp,BroadcastTo:()=>r0,Callback:()=>TI,CallbackList:()=>$k,Cast:()=>Ys,Ceil:()=>Qs,ClipByValue:()=>Ha,Complex:()=>Ph,ComplexAbs:()=>gp,Concat:()=>ol,Conv2D:()=>ei,Conv2DBackpropFilter:()=>Bh,Conv2DBackpropInput:()=>ti,Conv3D:()=>ri,Conv3DBackpropFilterV2:()=>ll,Conv3DBackpropInputV2:()=>ul,Cos:()=>ni,Cosh:()=>ai,CropAndResize:()=>dl,Cumprod:()=>pl,Cumsum:()=>si,CustomCallback:()=>Fk,DataStorage:()=>Mh,DenseBincount:()=>yp,DepthToSpace:()=>hl,DepthwiseConv2dNative:()=>ii,DepthwiseConv2dNativeBackpropFilter:()=>Wh,DepthwiseConv2dNativeBackpropInput:()=>Vh,Diag:()=>bp,Dilation2D:()=>oi,Dilation2DBackpropFilter:()=>Ao,Dilation2DBackpropInput:()=>$o,ENV:()=>qm,EarlyStopping:()=>CI,Einsum:()=>Uh,Elu:()=>ui,EluGrad:()=>cl,Environment:()=>e0,Equal:()=>ml,Erf:()=>fl,Exp:()=>pi,ExpandDims:()=>gl,Expm1:()=>di,FFT:()=>Gh,Fill:()=>xp,FlipLeftRight:()=>yl,Floor:()=>hi,FloorDiv:()=>ci,FromPixels:()=>sh,FusedBatchNorm:()=>fi,FusedConv2D:()=>Ss,FusedDepthwiseConv2D:()=>Ns,GPGPUContext:()=>eh,GatherNd:()=>xl,GatherV2:()=>bl,GraphModel:()=>Xb,Greater:()=>wl,GreaterEqual:()=>mi,History:()=>Ak,IFFT:()=>Hh,Identity:()=>gi,Imag:()=>jh,InputSpec:()=>Et,IsFinite:()=>yi,IsInf:()=>bi,IsNan:()=>xi,KernelBackend:()=>hp,LRN:()=>Ii,LRNGrad:()=>Cl,LayerVariable:()=>Ik,LayersModel:()=>sa,LeakyRelu:()=>wi,Less:()=>vl,LessEqual:()=>kl,LinSpace:()=>Il,Log:()=>vi,Log1p:()=>ki,LogSoftmax:()=>a0,LogicalAnd:()=>Sl,LogicalNot:()=>Nl,LogicalOr:()=>Tl,LogicalXor:()=>n0,LowerBound:()=>fE,MathBackendCPU:()=>tf,MathBackendWebGL:()=>af,MatrixBandPart:()=>mE,Max:()=>Si,MaxPool:()=>Ti,MaxPool3D:()=>_l,MaxPool3DGrad:()=>wp,MaxPoolGrad:()=>qh,MaxPoolWithArgmax:()=>Kh,Maximum:()=>Ni,Mean:()=>Ci,Min:()=>_i,Minimum:()=>Ei,MirrorPad:()=>$i,Mod:()=>El,MomentumOptimizer:()=>hy,Multinomial:()=>$l,Multiply:()=>Ai,Neg:()=>Al,NonMaxSuppressionV3:()=>Rl,NonMaxSuppressionV4:()=>Dl,NonMaxSuppressionV5:()=>Ml,NotEqual:()=>Fl,OP_SCOPE_SUFFIX:()=>Jm,OneHot:()=>Fi,OnesLike:()=>Ol,Optimizer:()=>ca,OptimizerConstructors:()=>ik,Pack:()=>zl,PadV2:()=>Ri,Pool:()=>gE,Pow:()=>Di,Prelu:()=>Mi,Prod:()=>Oi,RMSPropOptimizer:()=>cy,RNN:()=>qn,RaggedGather:()=>Xh,RaggedRange:()=>Zh,RaggedTensorToTensor:()=>Jh,Range:()=>vp,Rank:()=>Bf,Real:()=>Yh,RealDiv:()=>li,Reciprocal:()=>zi,Reduction:()=>pr,Relu:()=>Li,Relu6:()=>Wi,Reshape:()=>Ll,ResizeBilinear:()=>Bi,ResizeBilinearGrad:()=>Bl,ResizeNearestNeighbor:()=>Pi,ResizeNearestNeighborGrad:()=>Pl,Reverse:()=>Vi,RotateWithOffset:()=>ru,Round:()=>Ui,Rsqrt:()=>Gi,SGDOptimizer:()=>Dc,ScatterNd:()=>Wl,SearchSorted:()=>Ul,Select:()=>Gl,Selu:()=>Hi,Sequential:()=>Uo,Sigmoid:()=>Ki,Sign:()=>qi,Sin:()=>ji,Sinh:()=>jl,Slice:()=>Hl,Softmax:()=>Yi,Softplus:()=>Xi,SpaceToBatchND:()=>ql,SparseFillEmptyRows:()=>kp,SparseReshape:()=>Xl,SparseSegmentMean:()=>Ip,SparseSegmentSum:()=>Sp,SparseToDense:()=>Zl,SplitV:()=>Kl,Sqrt:()=>Zi,Square:()=>Np,SquaredDifference:()=>Qi,StaticRegexReplace:()=>Tp,Step:()=>qa,StridedSlice:()=>Jl,StringNGrams:()=>Cp,StringSplit:()=>_p,StringToHashBucketFast:()=>Ep,Sub:()=>eo,Sum:()=>Ji,SymbolicTensor:()=>vn,Tan:()=>to,Tanh:()=>ro,Tensor:()=>Ue,TensorBuffer:()=>$t,TensorScatterUpdate:()=>Vl,Tile:()=>ja,TopK:()=>Yl,Transform:()=>Ql,Transpose:()=>aa,Unique:()=>$p,Unpack:()=>eu,UnsortedSegmentSum:()=>Ap,UpperBound:()=>yE,Variable:()=>Ts,ZerosLike:()=>tu,_FusedMatMul:()=>Is,abs:()=>_t,acos:()=>rg,acosh:()=>ng,add:()=>J,addN:()=>E0,all:()=>nc,any:()=>Yu,argMax:()=>Es,argMin:()=>ag,asin:()=>sg,asinh:()=>ig,atan:()=>og,atan2:()=>lg,atanh:()=>ug,avgPool:()=>pa,avgPool3d:()=>dg,backend:()=>_0,backend_util:()=>N,basicLSTMCell:()=>R0,batchNorm:()=>no,batchNorm2d:()=>hg,batchNorm3d:()=>cg,batchNorm4d:()=>fg,batchToSpaceND:()=>Lp,bincount:()=>mg,booleanMaskAsync:()=>v1,broadcastArgs:()=>D0,broadcastTo:()=>bs,broadcast_util:()=>nu,browser:()=>Mc,buffer:()=>ze,callbacks:()=>G4,cast:()=>se,ceil:()=>gg,clipByValue:()=>ir,clone:()=>Ln,complex:()=>ia,concat:()=>at,concat1d:()=>yg,concat2d:()=>bg,concat3d:()=>xg,concat4d:()=>wg,constraints:()=>Tk,conv1d:()=>ac,conv2d:()=>cr,conv2dTranspose:()=>sc,conv3d:()=>kg,conv3dTranspose:()=>Ig,copyRegisteredKernels:()=>vE,cos:()=>Pp,cosh:()=>ic,cosineWindow:()=>Ec,cumprod:()=>tp,cumsum:()=>oc,customGrad:()=>Vn,data:()=>ZI,denseBincount:()=>ph,deprecationWarn:()=>C0,depthToSpace:()=>Sg,depthwiseConv2d:()=>ao,deregisterOp:()=>q4,device_util:()=>Mp,diag:()=>O0,dilation2d:()=>Ng,disableDeprecationWarnings:()=>E$,dispose:()=>_e,disposeVariables:()=>$$,div:()=>me,divNoNan:()=>Tg,dot:()=>Cg,dropout:()=>ny,einsum:()=>L0,elu:()=>au,enableDebugMode:()=>_$,enableProdMode:()=>C$,enclosingPowerOfTwo:()=>ay,engine:()=>pn,env:()=>H,equal:()=>Wr,erf:()=>_g,euclideanNorm:()=>Ag,exp:()=>fr,expandDims:()=>Qt,expm1:()=>Fg,eye:()=>lc,fft:()=>Xp,fill:()=>Br,findBackend:()=>z$,findBackendFactory:()=>L$,floor:()=>iu,floorDiv:()=>rc,forceHalfFloat:()=>m2,fused:()=>Po,gather:()=>ou,gatherND:()=>N1,gather_util:()=>gy,getBackend:()=>M$,getGradient:()=>Lf,getKernel:()=>ih,getKernelsForBackend:()=>oh,getThreadsCount:()=>Tle,gpgpu_util:()=>qN,grad:()=>FF,grads:()=>RF,greater:()=>br,greaterEqual:()=>da,ifft:()=>Lo,imag:()=>Bp,image:()=>xn,inTopKAsync:()=>T1,initializers:()=>Ck,input:()=>jk,io:()=>rr,irfft:()=>kc,isFinite:()=>Rg,isInf:()=>Dg,isNaN:()=>Mg,keep:()=>Dt,kernel_impls:()=>jn,layers:()=>_k,leakyRelu:()=>Wp,less:()=>Do,lessEqual:()=>Xa,linalg:()=>oy,linspace:()=>U0,loadGraphModel:()=>QV,loadGraphModelSync:()=>eU,loadLayersModel:()=>VB,localResponseNormalization:()=>Og,log:()=>Vr,log1p:()=>Vp,logSigmoid:()=>zg,logSoftmax:()=>pc,logSumExp:()=>dc,logicalAnd:()=>cn,logicalNot:()=>Up,logicalOr:()=>hc,logicalXor:()=>Lg,losses:()=>L1,lowerBound:()=>H0,matMul:()=>Me,math:()=>K1,max:()=>Qr,maxPool:()=>Wt,maxPool3d:()=>Pg,maxPoolWithArgmax:()=>j0,maximum:()=>Hn,mean:()=>xt,memory:()=>Zf,meshgrid:()=>q0,metrics:()=>II,min:()=>Ro,minimum:()=>Da,mirrorPad:()=>Bg,mod:()=>Wg,model:()=>HB,models:()=>SI,moments:()=>Gp,movingAverage:()=>k1,mul:()=>L,multiRNNCell:()=>K0,multinomial:()=>X0,neg:()=>ht,nextFrame:()=>yy,norm:()=>su,notEqual:()=>Rs,oneHot:()=>Mo,ones:()=>Pr,onesLike:()=>Ur,op:()=>z,outerProduct:()=>Z0,pad:()=>_n,pad1d:()=>J0,pad2d:()=>Y0,pad3d:()=>Q0,pad4d:()=>e1,pool:()=>Vg,pow:()=>oa,prelu:()=>jp,print:()=>tg,prod:()=>Ug,profile:()=>A$,raggedGather:()=>t1,raggedRange:()=>r1,raggedTensorToTensor:()=>n1,rand:()=>a1,randomGamma:()=>l1,randomNormal:()=>fc,randomStandardNormal:()=>u1,randomUniform:()=>lu,range:()=>Ds,ready:()=>D$,real:()=>Oo,reciprocal:()=>Kg,registerBackend:()=>tc,registerCallbackConstructor:()=>qB,registerGradient:()=>s0,registerKernel:()=>Fp,registerOp:()=>j4,regularizers:()=>NI,relu:()=>et,relu6:()=>mc,removeBackend:()=>O$,reshape:()=>P,reverse:()=>tn,reverse1d:()=>p1,reverse2d:()=>d1,reverse3d:()=>h1,reverse4d:()=>c1,rfft:()=>Zp,round:()=>gc,rsqrt:()=>yc,scalar:()=>ve,scatterND:()=>I1,scatter_util:()=>Nc,searchSorted:()=>cc,selu:()=>bc,separableConv2d:()=>uu,sequential:()=>jB,serialization:()=>re,setBackend:()=>R$,setPlatform:()=>P$,setThreadsCount:()=>Nle,setWasmPath:()=>Ile,setWasmPaths:()=>Sle,setWebGLContext:()=>yN,setdiff1dAsync:()=>f1,shared:()=>Qb,sigmoid:()=>hn,sign:()=>Xg,signal:()=>z1,sin:()=>xc,sinh:()=>wc,slice:()=>Ve,slice1d:()=>qp,slice2d:()=>vc,slice3d:()=>Kp,slice4d:()=>zo,slice_util:()=>zt,softmax:()=>Za,softplus:()=>so,spaceToBatchND:()=>Hp,sparse:()=>P1,sparseToDense:()=>S1,spectral:()=>O1,split:()=>Nr,sqrt:()=>nr,square:()=>nt,squaredDifference:()=>Ic,squeeze:()=>Ja,stack:()=>Ot,step:()=>io,stridedSlice:()=>Zg,string:()=>B1,sub:()=>he,sum:()=>ge,sumOutType:()=>ec,tan:()=>Jg,tanh:()=>As,tensor:()=>hr,tensor1d:()=>Qe,tensor2d:()=>Pn,tensor3d:()=>Sc,tensor4d:()=>Ma,tensor5d:()=>m1,tensor6d:()=>g1,tensorScatterUpdate:()=>b1,tensor_util:()=>kn,test_util:()=>s1,tidy:()=>W,tile:()=>Lr,time:()=>F$,topk:()=>Qg,train:()=>ps,transpose:()=>Oe,truncatedNormal:()=>Cc,unique:()=>ey,unregisterGradient:()=>wE,unregisterKernel:()=>xE,unsortedSegmentSum:()=>_c,unstack:()=>Nt,upcastType:()=>en,upperBound:()=>x1,util:()=>w,valueAndGrad:()=>DF,valueAndGrads:()=>MF,variable:()=>ty,variableGrads:()=>G0,version:()=>Rle,version_converter:()=>rU,version_core:()=>JO,version_cpu:()=>YG,version_layers:()=>Py,version_wasm:()=>Cle,version_webgl:()=>LX,webgl:()=>PX,webgl_util:()=>gN,where:()=>Gt,whereAsync:()=>ry,zeros:()=>wt,zerosLike:()=>He});var S_=Object.create,Um=Object.defineProperty,N_=Object.getOwnPropertyDescriptor,T_=Object.getOwnPropertyNames,C_=Object.getPrototypeOf,__=Object.prototype.hasOwnProperty,Ft=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),Ee=(e,t)=>{for(var r in t)Um(e,r,{get:t[r],enumerable:!0})},E_=(e,t,r,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let a of T_(t))!__.call(e,a)&&a!==r&&Um(e,a,{get:()=>t[a],enumerable:!(n=N_(t,a))||n.enumerable});return e},Va=(e,t,r)=>(r=e!=null?S_(C_(e)):{},E_(!e||!e.__esModule?Um(r,"default",{value:e,enumerable:!0}):r,e)),$_=Ft((e,t)=>{t.exports=n;var r=null;try{r=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function n(S,M,B){this.low=S|0,this.high=M|0,this.unsigned=!!B}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0});function a(S){return(S&&S.__isLong__)===!0}n.isLong=a;var s={},i={};function o(S,M){var B,U,G;return M?(S>>>=0,(G=0<=S&&S<256)&&(U=i[S],U)?U:(B=p(S,(S|0)<0?-1:0,!0),G&&(i[S]=B),B)):(S|=0,(G=-128<=S&&S<128)&&(U=s[S],U)?U:(B=p(S,S<0?-1:0,!1),G&&(s[S]=B),B))}n.fromInt=o;function u(S,M){if(isNaN(S))return M?v:x;if(M){if(S<0)return v;if(S>=g)return A}else{if(S<=-9223372036854776e3)return R;if(S+1>=y)return E}return S<0?u(-S,M).neg():p(S%m|0,S/m|0,M)}n.fromNumber=u;function p(S,M,B){return new n(S,M,B)}n.fromBits=p;var l=Math.pow;function d(S,M,B){if(S.length===0)throw Error("empty string");if(S==="NaN"||S==="Infinity"||S==="+Infinity"||S==="-Infinity")return x;if(typeof M=="number"?(B=M,M=!1):M=!!M,B=B||10,B<2||36<B)throw RangeError("radix");var U;if((U=S.indexOf("-"))>0)throw Error("interior hyphen");if(U===0)return d(S.substring(1),M,B).neg();for(var G=u(l(B,8)),K=x,j=0;j<S.length;j+=8){var X=Math.min(8,S.length-j),ee=parseInt(S.substring(j,j+X),B);if(X<8){var Z=u(l(B,X));K=K.mul(Z).add(u(ee))}else K=K.mul(G),K=K.add(u(ee))}return K.unsigned=M,K}n.fromString=d;function h(S,M){return typeof S=="number"?u(S,M):typeof S=="string"?d(S,M):p(S.low,S.high,typeof M=="boolean"?M:S.unsigned)}n.fromValue=h;var c=65536,f=1<<24,m=c*c,g=m*m,y=g/2,b=o(f),x=o(0);n.ZERO=x;var v=o(0,!0);n.UZERO=v;var I=o(1);n.ONE=I;var T=o(1,!0);n.UONE=T;var _=o(-1);n.NEG_ONE=_;var E=p(-1,2147483647,!1);n.MAX_VALUE=E;var A=p(-1,-1,!0);n.MAX_UNSIGNED_VALUE=A;var R=p(0,-2147483648,!1);n.MIN_VALUE=R;var F=n.prototype;F.toInt=function(){return this.unsigned?this.low>>>0:this.low},F.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},F.toString=function(S){if(S=S||10,S<2||36<S)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(R)){var M=u(S),B=this.div(M),U=B.mul(M).sub(this);return B.toString(S)+U.toInt().toString(S)}else return"-"+this.neg().toString(S);for(var G=u(l(S,6),this.unsigned),K=this,j="";;){var X=K.div(G),ee=K.sub(X.mul(G)).toInt()>>>0,Z=ee.toString(S);if(K=X,K.isZero())return Z+j;for(;Z.length<6;)Z="0"+Z;j=""+Z+j}},F.getHighBits=function(){return this.high},F.getHighBitsUnsigned=function(){return this.high>>>0},F.getLowBits=function(){return this.low},F.getLowBitsUnsigned=function(){return this.low>>>0},F.getNumBitsAbs=function(){if(this.isNegative())return this.eq(R)?64:this.neg().getNumBitsAbs();for(var S=this.high!=0?this.high:this.low,M=31;M>0&&!(S&1<<M);M--);return this.high!=0?M+33:M+1},F.isZero=function(){return this.high===0&&this.low===0},F.eqz=F.isZero,F.isNegative=function(){return!this.unsigned&&this.high<0},F.isPositive=function(){return this.unsigned||this.high>=0},F.isOdd=function(){return(this.low&1)===1},F.isEven=function(){return(this.low&1)===0},F.equals=function(S){return a(S)||(S=h(S)),this.unsigned!==S.unsigned&&this.high>>>31===1&&S.high>>>31===1?!1:this.high===S.high&&this.low===S.low},F.eq=F.equals,F.notEquals=function(S){return!this.eq(S)},F.neq=F.notEquals,F.ne=F.notEquals,F.lessThan=function(S){return this.comp(S)<0},F.lt=F.lessThan,F.lessThanOrEqual=function(S){return this.comp(S)<=0},F.lte=F.lessThanOrEqual,F.le=F.lessThanOrEqual,F.greaterThan=function(S){return this.comp(S)>0},F.gt=F.greaterThan,F.greaterThanOrEqual=function(S){return this.comp(S)>=0},F.gte=F.greaterThanOrEqual,F.ge=F.greaterThanOrEqual,F.compare=function(S){if(a(S)||(S=h(S)),this.eq(S))return 0;var M=this.isNegative(),B=S.isNegative();return M&&!B?-1:!M&&B?1:this.unsigned?S.high>>>0>this.high>>>0||S.high===this.high&&S.low>>>0>this.low>>>0?-1:1:this.sub(S).isNegative()?-1:1},F.comp=F.compare,F.negate=function(){return!this.unsigned&&this.eq(R)?R:this.not().add(I)},F.neg=F.negate,F.add=function(S){a(S)||(S=h(S));var M=this.high>>>16,B=this.high&65535,U=this.low>>>16,G=this.low&65535,K=S.high>>>16,j=S.high&65535,X=S.low>>>16,ee=S.low&65535,Z=0,ne=0,te=0,ae=0;return ae+=G+ee,te+=ae>>>16,ae&=65535,te+=U+X,ne+=te>>>16,te&=65535,ne+=B+j,Z+=ne>>>16,ne&=65535,Z+=M+K,Z&=65535,p(te<<16|ae,Z<<16|ne,this.unsigned)},F.subtract=function(S){return a(S)||(S=h(S)),this.add(S.neg())},F.sub=F.subtract,F.multiply=function(S){if(this.isZero())return x;if(a(S)||(S=h(S)),r){var M=r.mul(this.low,this.high,S.low,S.high);return p(M,r.get_high(),this.unsigned)}if(S.isZero())return x;if(this.eq(R))return S.isOdd()?R:x;if(S.eq(R))return this.isOdd()?R:x;if(this.isNegative())return S.isNegative()?this.neg().mul(S.neg()):this.neg().mul(S).neg();if(S.isNegative())return this.mul(S.neg()).neg();if(this.lt(b)&&S.lt(b))return u(this.toNumber()*S.toNumber(),this.unsigned);var B=this.high>>>16,U=this.high&65535,G=this.low>>>16,K=this.low&65535,j=S.high>>>16,X=S.high&65535,ee=S.low>>>16,Z=S.low&65535,ne=0,te=0,ae=0,ie=0;return ie+=K*Z,ae+=ie>>>16,ie&=65535,ae+=G*Z,te+=ae>>>16,ae&=65535,ae+=K*ee,te+=ae>>>16,ae&=65535,te+=U*Z,ne+=te>>>16,te&=65535,te+=G*ee,ne+=te>>>16,te&=65535,te+=K*X,ne+=te>>>16,te&=65535,ne+=B*Z+U*ee+G*X+K*j,ne&=65535,p(ae<<16|ie,ne<<16|te,this.unsigned)},F.mul=F.multiply,F.divide=function(S){if(a(S)||(S=h(S)),S.isZero())throw Error("division by zero");if(r){if(!this.unsigned&&this.high===-2147483648&&S.low===-1&&S.high===-1)return this;var M=(this.unsigned?r.div_u:r.div_s)(this.low,this.high,S.low,S.high);return p(M,r.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?v:x;var B,U,G;if(this.unsigned){if(S.unsigned||(S=S.toUnsigned()),S.gt(this))return v;if(S.gt(this.shru(1)))return T;G=v}else{if(this.eq(R)){if(S.eq(I)||S.eq(_))return R;if(S.eq(R))return I;var K=this.shr(1);return B=K.div(S).shl(1),B.eq(x)?S.isNegative()?I:_:(U=this.sub(S.mul(B)),G=B.add(U.div(S)),G)}else if(S.eq(R))return this.unsigned?v:x;if(this.isNegative())return S.isNegative()?this.neg().div(S.neg()):this.neg().div(S).neg();if(S.isNegative())return this.div(S.neg()).neg();G=x}for(U=this;U.gte(S);){B=Math.max(1,Math.floor(U.toNumber()/S.toNumber()));for(var j=Math.ceil(Math.log(B)/Math.LN2),X=j<=48?1:l(2,j-48),ee=u(B),Z=ee.mul(S);Z.isNegative()||Z.gt(U);)B-=X,ee=u(B,this.unsigned),Z=ee.mul(S);ee.isZero()&&(ee=I),G=G.add(ee),U=U.sub(Z)}return G},F.div=F.divide,F.modulo=function(S){if(a(S)||(S=h(S)),r){var M=(this.unsigned?r.rem_u:r.rem_s)(this.low,this.high,S.low,S.high);return p(M,r.get_high(),this.unsigned)}return this.sub(this.div(S).mul(S))},F.mod=F.modulo,F.rem=F.modulo,F.not=function(){return p(~this.low,~this.high,this.unsigned)},F.and=function(S){return a(S)||(S=h(S)),p(this.low&S.low,this.high&S.high,this.unsigned)},F.or=function(S){return a(S)||(S=h(S)),p(this.low|S.low,this.high|S.high,this.unsigned)},F.xor=function(S){return a(S)||(S=h(S)),p(this.low^S.low,this.high^S.high,this.unsigned)},F.shiftLeft=function(S){return a(S)&&(S=S.toInt()),(S&=63)===0?this:S<32?p(this.low<<S,this.high<<S|this.low>>>32-S,this.unsigned):p(0,this.low<<S-32,this.unsigned)},F.shl=F.shiftLeft,F.shiftRight=function(S){return a(S)&&(S=S.toInt()),(S&=63)===0?this:S<32?p(this.low>>>S|this.high<<32-S,this.high>>S,this.unsigned):p(this.high>>S-32,this.high>=0?0:-1,this.unsigned)},F.shr=F.shiftRight,F.shiftRightUnsigned=function(S){if(a(S)&&(S=S.toInt()),S&=63,S===0)return this;var M=this.high;if(S<32){var B=this.low;return p(B>>>S|M<<32-S,M>>>S,this.unsigned)}else return S===32?p(M,0,this.unsigned):p(M>>>S-32,0,this.unsigned)},F.shru=F.shiftRightUnsigned,F.shr_u=F.shiftRightUnsigned,F.toSigned=function(){return this.unsigned?p(this.low,this.high,!1):this},F.toUnsigned=function(){return this.unsigned?this:p(this.low,this.high,!0)},F.toBytes=function(S){return S?this.toBytesLE():this.toBytesBE()},F.toBytesLE=function(){var S=this.high,M=this.low;return[M&255,M>>>8&255,M>>>16&255,M>>>24,S&255,S>>>8&255,S>>>16&255,S>>>24]},F.toBytesBE=function(){var S=this.high,M=this.low;return[S>>>24,S>>>16&255,S>>>8&255,S&255,M>>>24,M>>>16&255,M>>>8&255,M&255]},n.fromBytes=function(S,M,B){return B?n.fromBytesLE(S,M):n.fromBytesBE(S,M)},n.fromBytesLE=function(S,M){return new n(S[0]|S[1]<<8|S[2]<<16|S[3]<<24,S[4]|S[5]<<8|S[6]<<16|S[7]<<24,M)},n.fromBytesBE=function(S,M){return new n(S[4]<<24|S[5]<<16|S[6]<<8|S[7],S[0]<<24|S[1]<<16|S[2]<<8|S[3],M)}}),A_=Ft(()=>{}),F_=Ft(()=>{}),R_=Ft((e,t)=>{(function(r,n,a){function s(p){var l=this,d=u();l.next=function(){var h=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=h-(l.c=h|0)},l.c=1,l.s0=d(" "),l.s1=d(" "),l.s2=d(" "),l.s0-=d(p),l.s0<0&&(l.s0+=1),l.s1-=d(p),l.s1<0&&(l.s1+=1),l.s2-=d(p),l.s2<0&&(l.s2+=1),d=null}function i(p,l){return l.c=p.c,l.s0=p.s0,l.s1=p.s1,l.s2=p.s2,l}function o(p,l){var d=new s(p),h=l&&l.state,c=d.next;return c.int32=function(){return d.next()*4294967296|0},c.double=function(){return c()+(c()*2097152|0)*11102230246251565e-32},c.quick=c,h&&(typeof h=="object"&&i(h,d),c.state=function(){return i(d,{})}),c}function u(){var p=4022871197,l=function(d){d=String(d);for(var h=0;h<d.length;h++){p+=d.charCodeAt(h);var c=.02519603282416938*p;p=c>>>0,c-=p,c*=p,p=c>>>0,c-=p,p+=c*4294967296}return(p>>>0)*23283064365386963e-26};return l}n&&n.exports?n.exports=o:a&&a.amd?a(function(){return o}):this.alea=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),D_=Ft((e,t)=>{(function(r,n,a){function s(u){var p=this,l="";p.x=0,p.y=0,p.z=0,p.w=0,p.next=function(){var h=p.x^p.x<<11;return p.x=p.y,p.y=p.z,p.z=p.w,p.w^=p.w>>>19^h^h>>>8},u===(u|0)?p.x=u:l+=u;for(var d=0;d<l.length+64;d++)p.x^=l.charCodeAt(d)|0,p.next()}function i(u,p){return p.x=u.x,p.y=u.y,p.z=u.z,p.w=u.w,p}function o(u,p){var l=new s(u),d=p&&p.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var c=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(c+f)/(1<<21);while(m===0);return m},h.int32=l.next,h.quick=h,d&&(typeof d=="object"&&i(d,l),h.state=function(){return i(l,{})}),h}n&&n.exports?n.exports=o:a&&a.amd?a(function(){return o}):this.xor128=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),M_=Ft((e,t)=>{(function(r,n,a){function s(u){var p=this,l="";p.next=function(){var h=p.x^p.x>>>2;return p.x=p.y,p.y=p.z,p.z=p.w,p.w=p.v,(p.d=p.d+362437|0)+(p.v=p.v^p.v<<4^(h^h<<1))|0},p.x=0,p.y=0,p.z=0,p.w=0,p.v=0,u===(u|0)?p.x=u:l+=u;for(var d=0;d<l.length+64;d++)p.x^=l.charCodeAt(d)|0,d==l.length&&(p.d=p.x<<10^p.x>>>4),p.next()}function i(u,p){return p.x=u.x,p.y=u.y,p.z=u.z,p.w=u.w,p.v=u.v,p.d=u.d,p}function o(u,p){var l=new s(u),d=p&&p.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var c=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(c+f)/(1<<21);while(m===0);return m},h.int32=l.next,h.quick=h,d&&(typeof d=="object"&&i(d,l),h.state=function(){return i(l,{})}),h}n&&n.exports?n.exports=o:a&&a.amd?a(function(){return o}):this.xorwow=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),O_=Ft((e,t)=>{(function(r,n,a){function s(u){var p=this;p.next=function(){var d=p.x,h=p.i,c,f;return c=d[h],c^=c>>>7,f=c^c<<24,c=d[h+1&7],f^=c^c>>>10,c=d[h+3&7],f^=c^c>>>3,c=d[h+4&7],f^=c^c<<7,c=d[h+7&7],c=c^c<<13,f^=c^c<<9,d[h]=f,p.i=h+1&7,f};function l(d,h){var c,f=[];if(h===(h|0))f[0]=h;else for(h=""+h,c=0;c<h.length;++c)f[c&7]=f[c&7]<<15^h.charCodeAt(c)+f[c+1&7]<<13;for(;f.length<8;)f.push(0);for(c=0;c<8&&f[c]===0;++c);for(c==8?f[7]=-1:f[c],d.x=f,d.i=0,c=256;c>0;--c)d.next()}l(p,u)}function i(u,p){return p.x=u.x.slice(),p.i=u.i,p}function o(u,p){u==null&&(u=+new Date);var l=new s(u),d=p&&p.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var c=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(c+f)/(1<<21);while(m===0);return m},h.int32=l.next,h.quick=h,d&&(d.x&&i(d,l),h.state=function(){return i(l,{})}),h}n&&n.exports?n.exports=o:a&&a.amd?a(function(){return o}):this.xorshift7=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),z_=Ft((e,t)=>{(function(r,n,a){function s(u){var p=this;p.next=function(){var d=p.w,h=p.X,c=p.i,f,m;return p.w=d=d+1640531527|0,m=h[c+34&127],f=h[c=c+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=h[c]=m^f,p.i=c,m+(d^d>>>16)|0};function l(d,h){var c,f,m,g,y,b=[],x=128;for(h===(h|0)?(f=h,h=null):(h=h+"\0",f=0,x=Math.max(x,h.length)),m=0,g=-32;g<x;++g)h&&(f^=h.charCodeAt((g+32)%h.length)),g===0&&(y=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(y=y+1640531527|0,c=b[g&127]^=f+y,m=c==0?m+1:0);for(m>=128&&(b[(h&&h.length||0)&127]=-1),m=127,g=4*128;g>0;--g)f=b[m+34&127],c=b[m=m+1&127],f^=f<<13,c^=c<<17,f^=f>>>15,c^=c>>>12,b[m]=f^c;d.w=y,d.X=b,d.i=m}l(p,u)}function i(u,p){return p.i=u.i,p.w=u.w,p.X=u.X.slice(),p}function o(u,p){u==null&&(u=+new Date);var l=new s(u),d=p&&p.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var c=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(c+f)/(1<<21);while(m===0);return m},h.int32=l.next,h.quick=h,d&&(d.X&&i(d,l),h.state=function(){return i(l,{})}),h}n&&n.exports?n.exports=o:a&&a.amd?a(function(){return o}):this.xor4096=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),L_=Ft((e,t)=>{(function(r,n,a){function s(u){var p=this,l="";p.next=function(){var h=p.b,c=p.c,f=p.d,m=p.a;return h=h<<25^h>>>7^c,c=c-f|0,f=f<<24^f>>>8^m,m=m-h|0,p.b=h=h<<20^h>>>12^c,p.c=c=c-f|0,p.d=f<<16^c>>>16^m,p.a=m-h|0},p.a=0,p.b=0,p.c=-1640531527,p.d=1367130551,u===Math.floor(u)?(p.a=u/4294967296|0,p.b=u|0):l+=u;for(var d=0;d<l.length+20;d++)p.b^=l.charCodeAt(d)|0,p.next()}function i(u,p){return p.a=u.a,p.b=u.b,p.c=u.c,p.d=u.d,p}function o(u,p){var l=new s(u),d=p&&p.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var c=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(c+f)/(1<<21);while(m===0);return m},h.int32=l.next,h.quick=h,d&&(typeof d=="object"&&i(d,l),h.state=function(){return i(l,{})}),h}n&&n.exports?n.exports=o:a&&a.amd?a(function(){return o}):this.tychei=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),P_=Ft(()=>{}),B_=Ft((e,t)=>{(function(r,n,a){var s=256,i=6,o=52,u="random",p=a.pow(s,i),l=a.pow(2,o),d=l*2,h=s-1,c;function f(I,T,_){var E=[];T=T==!0?{entropy:!0}:T||{};var A=b(y(T.entropy?[I,v(n)]:I==null?x():I,3),E),R=new m(E),F=function(){for(var S=R.g(i),M=p,B=0;S<l;)S=(S+B)*s,M*=s,B=R.g(1);for(;S>=d;)S/=2,M/=2,B>>>=1;return(S+B)/M};return F.int32=function(){return R.g(4)|0},F.quick=function(){return R.g(4)/4294967296},F.double=F,b(v(R.S),n),(T.pass||_||function(S,M,B,U){return U&&(U.S&&g(U,R),S.state=function(){return g(R,{})}),B?(a[u]=S,M):S})(F,A,"global"in T?T.global:this==a,T.state)}function m(I){var T,_=I.length,E=this,A=0,R=E.i=E.j=0,F=E.S=[];for(_||(I=[_++]);A<s;)F[A]=A++;for(A=0;A<s;A++)F[A]=F[R=h&R+I[A%_]+(T=F[A])],F[R]=T;(E.g=function(S){for(var M,B=0,U=E.i,G=E.j,K=E.S;S--;)M=K[U=h&U+1],B=B*s+K[h&(K[U]=K[G=h&G+M])+(K[G]=M)];return E.i=U,E.j=G,B})(s)}function g(I,T){return T.i=I.i,T.j=I.j,T.S=I.S.slice(),T}function y(I,T){var _=[],E=typeof I,A;if(T&&E=="object")for(A in I)try{_.push(y(I[A],T-1))}catch{}return _.length?_:E=="string"?I:I+"\0"}function b(I,T){for(var _=I+"",E,A=0;A<_.length;)T[h&A]=h&(E^=T[h&A]*19)+_.charCodeAt(A++);return v(T)}function x(){try{var I;return c&&(I=c.randomBytes)?I=I(s):(I=new Uint8Array(s),(r.crypto||r.msCrypto).getRandomValues(I)),v(I)}catch{var T=r.navigator,_=T&&T.plugins;return[+new Date,r,_,r.screen,v(n)]}}function v(I){return String.fromCharCode.apply(0,I)}if(b(a.random(),n),typeof t=="object"&&t.exports){t.exports=f;try{c=P_()}catch{}}else typeof define=="function"&&define.amd?define(function(){return f}):a["seed"+u]=f})(typeof self<"u"?self:e,[],Math)}),Dh=Ft((e,t)=>{var r=R_(),n=D_(),a=M_(),s=O_(),i=z_(),o=L_(),u=B_();u.alea=r,u.xor128=n,u.xorwow=a,u.xorshift7=s,u.xor4096=i,u.tychei=o,t.exports=u}),Uv=Ft(()=>{}),Gm=Ft(()=>{}),Gv=Ft(()=>{}),W_=Ft(()=>{}),V_=Ft(()=>{}),U_=Ft(()=>{}),G_=Ft((e,t)=>{var r=(()=>{var n=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(n=n||__filename),function(a){a=a||{};function s(){return j.buffer!=de&&Ge(j.buffer),Ie}function i(){return j.buffer!=de&&Ge(j.buffer),Te}function o(){return j.buffer!=de&&Ge(j.buffer),Fe}function u(){return j.buffer!=de&&Ge(j.buffer),Pe}function p(){return j.buffer!=de&&Ge(j.buffer),rt}var l=typeof a<"u"?a:{},d,h;l.ready=new Promise(function(D,q){d=D,h=q});var c;typeof process<"u"&&process.listeners&&(c={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var f=Object.assign({},l),m=(D,q)=>{throw q},g=typeof window=="object",y=typeof importScripts=="function",b=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",x=l.ENVIRONMENT_IS_PTHREAD||!1,v="";function I(D){return l.locateFile?l.locateFile(D,v):v+D}var T,_,E;function A(D){D instanceof Zn||U("exiting due to exception: "+D)}if(b){var R=Gm(),F=Gv();y?v=F.dirname(v)+"/":v=__dirname+"/",T=(q,le)=>(q=ga(q)?new URL(q):F.normalize(q),R.readFileSync(q,le?void 0:"utf8")),E=q=>{var le=T(q,!0);return le.buffer||(le=new Uint8Array(le)),le},_=(q,le,Ne)=>{q=ga(q)?new URL(q):F.normalize(q),R.readFile(q,function(Ae,De){Ae?Ne(Ae):le(De.buffer)})},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),process.on("uncaughtException",function(q){if(!(q instanceof Zn))throw q}),process.on("unhandledRejection",function(q){throw q}),m=(q,le)=>{if(It())throw process.exitCode=q,le;A(le),process.exit(q)},l.inspect=function(){return"[Emscripten Module object]"};let D;try{D=W_()}catch(q){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),q}globalThis.Worker=D.Worker}else(g||y)&&(y?v=self.location.href:typeof document<"u"&&document.currentScript&&(v=document.currentScript.src),typeof n<"u"&&n&&(v=n),v.indexOf("blob:")!==0?v=v.substr(0,v.replace(/[?#].*/,"").lastIndexOf("/")+1):v="",b||(T=D=>{var q=new XMLHttpRequest;return q.open("GET",D,!1),q.send(null),q.responseText},y&&(E=D=>{var q=new XMLHttpRequest;return q.open("GET",D,!1),q.responseType="arraybuffer",q.send(null),new Uint8Array(q.response)}),_=(D,q,le)=>{var Ne=new XMLHttpRequest;Ne.open("GET",D,!0),Ne.responseType="arraybuffer",Ne.onload=()=>{if(Ne.status==200||Ne.status==0&&Ne.response){q(Ne.response);return}le()},Ne.onerror=le,Ne.send(null)}));b&&typeof performance>"u"&&(globalThis.performance=V_().performance);var S=console.log.bind(console),M=console.warn.bind(console);b&&(S=D=>R.writeSync(1,D+`
`),M=D=>R.writeSync(2,D+`
`));var B=l.print||S,U=l.printErr||M;Object.assign(l,f),f=null,l.arguments&&l.arguments,l.thisProgram&&l.thisProgram,l.quit&&(m=l.quit);var G;l.wasmBinary&&(G=l.wasmBinary);var K=l.noExitRuntime||!0;typeof WebAssembly!="object"&&Xn("no native wasm support detected");var j,X,ee=!1,Z;function ne(D,q){D||Xn(q)}var te=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function ae(D,q,le){for(var Ne=q+le,Ae=q;D[Ae]&&!(Ae>=Ne);)++Ae;if(Ae-q>16&&D.buffer&&te)return te.decode(D.buffer instanceof SharedArrayBuffer?D.slice(q,Ae):D.subarray(q,Ae));for(var De="";q<Ae;){var fe=D[q++];if(!(fe&128)){De+=String.fromCharCode(fe);continue}var ke=D[q++]&63;if((fe&224)==192){De+=String.fromCharCode((fe&31)<<6|ke);continue}var bt=D[q++]&63;if((fe&240)==224?fe=(fe&15)<<12|ke<<6|bt:fe=(fe&7)<<18|ke<<12|bt<<6|D[q++]&63,fe<65536)De+=String.fromCharCode(fe);else{var Kr=fe-65536;De+=String.fromCharCode(55296|Kr>>10,56320|Kr&1023)}}return De}function ie(D,q){return D?ae(i(),D,q):""}function we(D,q,le,Ne){if(!(Ne>0))return 0;for(var Ae=le,De=le+Ne-1,fe=0;fe<D.length;++fe){var ke=D.charCodeAt(fe);if(ke>=55296&&ke<=57343){var bt=D.charCodeAt(++fe);ke=65536+((ke&1023)<<10)|bt&1023}if(ke<=127){if(le>=De)break;q[le++]=ke}else if(ke<=2047){if(le+1>=De)break;q[le++]=192|ke>>6,q[le++]=128|ke&63}else if(ke<=65535){if(le+2>=De)break;q[le++]=224|ke>>12,q[le++]=128|ke>>6&63,q[le++]=128|ke&63}else{if(le+3>=De)break;q[le++]=240|ke>>18,q[le++]=128|ke>>12&63,q[le++]=128|ke>>6&63,q[le++]=128|ke&63}}return q[le]=0,le-Ae}function be(D,q,le){return we(D,i(),q,le)}var de,Ie,Te,Fe,Pe,rt;x&&(de=l.buffer);function Ge(D){de=D,l.HEAP8=Ie=new Int8Array(D),l.HEAP16=new Int16Array(D),l.HEAP32=Fe=new Int32Array(D),l.HEAPU8=Te=new Uint8Array(D),l.HEAPU16=new Uint16Array(D),l.HEAPU32=Pe=new Uint32Array(D),l.HEAPF32=new Float32Array(D),l.HEAPF64=rt=new Float64Array(D)}var je=l.INITIAL_MEMORY||16777216;if(x)j=l.wasmMemory,de=l.buffer;else if(l.wasmMemory)j=l.wasmMemory;else if(j=new WebAssembly.Memory({initial:je/65536,maximum:32768,shared:!0}),!(j.buffer instanceof SharedArrayBuffer))throw U("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),b&&U("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");j&&(de=j.buffer),je=de.byteLength,Ge(de);var $e,Ye=[],lt=[],Fr=[];function It(){return K}function wr(){if(l.preRun)for(typeof l.preRun=="function"&&(l.preRun=[l.preRun]);l.preRun.length;)an(l.preRun.shift());ut(Ye)}function Xt(){!x&&ut(lt)}function vr(){if(!x){if(l.postRun)for(typeof l.postRun=="function"&&(l.postRun=[l.postRun]);l.postRun.length;)kr(l.postRun.shift());ut(Fr)}}function an(D){Ye.unshift(D)}function Rr(D){lt.unshift(D)}function kr(D){Fr.unshift(D)}var Zt=0,jr=null;function ma(D){Zt++,l.monitorRunDependencies&&l.monitorRunDependencies(Zt)}function Iu(D){if(Zt--,l.monitorRunDependencies&&l.monitorRunDependencies(Zt),Zt==0&&jr){var q=jr;jr=null,q()}}function Xn(D){l.onAbort&&l.onAbort(D),D="Aborted("+D+")",U(D),ee=!0,Z=1,D+=". Build with -sASSERTIONS for more info.";var q=new WebAssembly.RuntimeError(D);throw h(q),q}var Su="data:application/octet-stream;base64,";function $n(D){return D.startsWith(Su)}function ga(D){return D.startsWith("file://")}var Jt;Jt="tfjs-backend-wasm-threaded-simd.wasm",$n(Jt)||(Jt=I(Jt));function md(D){try{if(D==Jt&&G)return new Uint8Array(G);if(E)return E(D);throw"both async and sync fetching of the wasm failed"}catch(q){Xn(q)}}function gd(){if(!G&&(g||y)){if(typeof fetch=="function"&&!ga(Jt))return fetch(Jt,{credentials:"same-origin"}).then(function(D){if(!D.ok)throw"failed to load wasm binary file at '"+Jt+"'";return D.arrayBuffer()}).catch(function(){return md(Jt)});if(_)return new Promise(function(D,q){_(Jt,function(le){D(new Uint8Array(le))},q)})}return Promise.resolve().then(function(){return md(Jt)})}function yd(){var D={env:Jx,wasi_snapshot_preview1:Jx};function q(fe,ke){var bt=fe.exports;if(l.asm=bt,Jn(l.asm._emscripten_tls_init),$e=l.asm.__indirect_function_table,Rr(l.asm.__wasm_call_ctors),X=ke,!x){var Kr=ce.unusedWorkers.length;ce.unusedWorkers.forEach(function(Yn){ce.loadWasmModuleToWorker(Yn,function(){--Kr||Iu()})})}}x||ma();function le(fe){q(fe.instance,fe.module)}function Ne(fe){return gd().then(function(ke){return WebAssembly.instantiate(ke,D)}).then(function(ke){return ke}).then(fe,function(ke){U("failed to asynchronously prepare wasm: "+ke),Xn(ke)})}function Ae(){return!G&&typeof WebAssembly.instantiateStreaming=="function"&&!$n(Jt)&&!ga(Jt)&&!b&&typeof fetch=="function"?fetch(Jt,{credentials:"same-origin"}).then(function(fe){var ke=WebAssembly.instantiateStreaming(fe,D);return ke.then(le,function(bt){return U("wasm streaming compile failed: "+bt),U("falling back to ArrayBuffer instantiation"),Ne(le)})}):Ne(le)}if(l.instantiateWasm)try{var De=l.instantiateWasm(D,q);return De}catch(fe){U("Module.instantiateWasm callback failed with error: "+fe),h(fe)}return Ae().catch(h),{}}var bd={};function Zn(D){this.name="ExitStatus",this.message="Program terminated with exit("+D+")",this.status=D}function go(D){var q=ce.pthreads[D];delete ce.pthreads[D],q.terminate(),gf(D),ce.runningWorkers.splice(ce.runningWorkers.indexOf(q),1),q.pthread_ptr=0}function xd(D){var q=ce.pthreads[D];q.postMessage({cmd:"cancel"})}function ss(D){var q=ce.pthreads[D];ne(q),ce.returnWorkerToPool(q)}function is(D){var q=ce.getNewWorker();if(!q)return 6;ce.runningWorkers.push(q),ce.pthreads[D.pthread_ptr]=q,q.pthread_ptr=D.pthread_ptr;var le={cmd:"run",start_routine:D.startRoutine,arg:D.arg,pthread_ptr:D.pthread_ptr};return q.runPthread=()=>{b&&q.ref(),q.postMessage(le,D.transferList),delete q.runPthread},q.loaded&&q.runPthread(),0}function wd(D){if(x)return yo(1,1,D);Z=D,It()||(ce.terminateAllThreads(),l.onExit&&l.onExit(D),ee=!0),m(D,new Zn(D))}function Q(D,q){if(Z=D,!q&&x)throw Be(D),"unwind";wd(D)}var oe=Q;function Se(D){if(D instanceof Zn||D=="unwind")return Z;m(1,D)}var ce={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){x?ce.initWorker():ce.initMainThread()},initMainThread:function(){for(var D=8;D--;)ce.allocateUnusedWorker()},initWorker:function(){K=!1},setExitStatus:function(D){Z=D},terminateAllThreads:function(){for(var D of Object.values(ce.pthreads))ce.returnWorkerToPool(D);for(var D of ce.unusedWorkers)D.terminate();ce.unusedWorkers=[]},returnWorkerToPool:function(D){var q=D.pthread_ptr;delete ce.pthreads[q],ce.unusedWorkers.push(D),ce.runningWorkers.splice(ce.runningWorkers.indexOf(D),1),D.pthread_ptr=0,b&&D.unref(),gf(q)},receiveObjectTransfer:function(D){},threadInitTLS:function(){ce.tlsInitFunctions.forEach(D=>D())},loadWasmModuleToWorker:function(D,q){D.onmessage=De=>{var fe=De.data,ke=fe.cmd;if(D.pthread_ptr&&(ce.currentProxiedOperationCallerThread=D.pthread_ptr),fe.targetThread&&fe.targetThread!=Sd()){var bt=ce.pthreads[fe.targetThread];bt?bt.postMessage(fe,fe.transferList):U('Internal error! Worker sent a message "'+ke+'" to target pthread '+fe.targetThread+", but that thread no longer exists!"),ce.currentProxiedOperationCallerThread=void 0;return}ke==="processProxyingQueue"?cf(fe.queue):ke==="spawnThread"?is(fe):ke==="cleanupThread"?ss(fe.thread):ke==="killThread"?go(fe.thread):ke==="cancelThread"?xd(fe.thread):ke==="loaded"?(D.loaded=!0,b&&D.unref(),q&&q(D),D.runPthread&&D.runPthread()):ke==="print"?B("Thread "+fe.threadId+": "+fe.text):ke==="printErr"?U("Thread "+fe.threadId+": "+fe.text):ke==="alert"?alert("Thread "+fe.threadId+": "+fe.text):fe.target==="setimmediate"?D.postMessage(fe):ke==="callHandler"?l[fe.handler](...fe.args):ke&&U("worker sent an unknown command "+ke),ce.currentProxiedOperationCallerThread=void 0},D.onerror=De=>{var fe="worker sent an error!";throw U(fe+" "+De.filename+":"+De.lineno+": "+De.message),De},b&&(D.on("message",function(De){D.onmessage({data:De})}),D.on("error",function(De){D.onerror(De)}),D.on("detachedExit",function(){}));var le=[],Ne=["onExit","onAbort","print","printErr"];for(var Ae of Ne)l.hasOwnProperty(Ae)&&le.push(Ae);D.postMessage({cmd:"load",handlers:le,urlOrBlob:l.mainScriptUrlOrBlob||n,wasmMemory:j,wasmModule:X})},allocateUnusedWorker:function(){var D,q=I("tfjs-backend-wasm-threaded-simd.worker.js");D=new Worker(q),ce.unusedWorkers.push(D)},getNewWorker:function(){return ce.unusedWorkers.length==0&&(ce.allocateUnusedWorker(),ce.loadWasmModuleToWorker(ce.unusedWorkers[0])),ce.unusedWorkers.pop()}};l.PThread=ce;function ut(D){for(;D.length>0;)D.shift()(l)}function mt(){var D=Sd(),q=o()[D+52>>2],le=o()[D+56>>2],Ne=q-le;rw(q,Ne),Nd(q)}l.establishStackSpace=mt;function Be(D){if(x)return yo(2,0,D);try{oe(D)}catch(q){Se(q)}}var Re=[];function Ct(D){var q=Re[D];return q||(D>=Re.length&&(Re.length=D+1),Re[D]=q=$e.get(D)),q}function qr(D,q){var le=Ct(D)(q);It()?ce.setExitStatus(le):tw(le)}l.invokeEntryPoint=qr;function Jn(D){ce.tlsInitFunctions.push(D)}function vd(D){Yx(D,!y,1,!g),ce.threadInitTLS()}function Nu(D){x?postMessage({cmd:"cleanupThread",thread:D}):ss(D)}function kd(D,q,le,Ne){return x?yo(3,1,D,q,le,Ne):lr(D,q,le,Ne)}function lr(D,q,le,Ne){if(typeof SharedArrayBuffer>"u")return U("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var Ae=[],De=0;if(x&&(Ae.length===0||De))return kd(D,q,le,Ne);var fe={startRoutine:le,pthread_ptr:D,arg:Ne,transferList:Ae};return x?(fe.cmd="spawnThread",postMessage(fe,Ae),0):is(fe)}function ya(){return 65536}var Id=!0;function QC(){return Id}function cf(D){Atomics.store(o(),D>>2,1),Sd()&&ew(D),Atomics.compareExchange(o(),D>>2,1,0)}l.executeNotifiedProxyingQueue=cf;function e_(D,q,le,Ne){if(D==q)setTimeout(()=>cf(Ne));else if(x)postMessage({targetThread:D,cmd:"processProxyingQueue",queue:Ne});else{var Ae=ce.pthreads[D];if(!Ae)return;Ae.postMessage({cmd:"processProxyingQueue",queue:Ne})}return 1}function t_(D,q,le){return-1}function r_(){Xn("")}function Tu(D){Tu.shown||(Tu.shown={}),Tu.shown[D]||(Tu.shown[D]=1,b&&(D="warning: "+D),U(D))}function n_(){b||y||Tu("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function a_(){return Date.now()}function jx(){return 2147483648}function s_(){return jx()}var ff;b?ff=()=>{var D=process.hrtime();return D[0]*1e3+D[1]/1e6}:ff=()=>performance.timeOrigin+performance.now();function i_(D,q,le){i().copyWithin(D,q,q+le)}function o_(){return b?U_().cpus().length:navigator.hardwareConcurrency}function l_(D){var q=yf(),le=D();return Nd(q),le}function yo(D,q){var le=arguments.length-2,Ne=arguments;return l_(()=>{for(var Ae=le,De=Td(Ae*8),fe=De>>3,ke=0;ke<le;ke++){var bt=Ne[2+ke];p()[fe+ke]=bt}return Qx(D,Ae,De,q)})}var mf=[];function u_(D,q,le){mf.length=q;for(var Ne=le>>3,Ae=0;Ae<q;Ae++)mf[Ae]=p()[Ne+Ae];var De=D<0,fe=De?bd[-D-1]:b_[D];return fe.apply(null,mf)}function p_(D){try{return j.grow(D-de.byteLength+65535>>>16),Ge(j.buffer),1}catch{}}function d_(D){var q=i().length;if(D=D>>>0,D<=q)return!1;var le=jx();if(D>le)return!1;let Ne=(bt,Kr)=>bt+(Kr-bt%Kr)%Kr;for(var Ae=1;Ae<=4;Ae*=2){var De=q*(1+.2/Ae);De=Math.min(De,D+100663296);var fe=Math.min(le,Ne(Math.max(D,De),65536)),ke=p_(fe);if(ke)return!0}return!1}function h_(){throw"unwind"}function qx(D){return x?yo(4,1,D):52}function Kx(D,q,le,Ne,Ae){return x?yo(5,1,D,q,le,Ne,Ae):70}var c_=[null,[],[]];function f_(D,q){var le=c_[D];q===0||q===10?((D===1?B:U)(ae(le,0)),le.length=0):le.push(q)}function Xx(D,q,le,Ne){if(x)return yo(6,1,D,q,le,Ne);for(var Ae=0,De=0;De<le;De++){var fe=u()[q>>2],ke=u()[q+4>>2];q+=8;for(var bt=0;bt<ke;bt++)f_(D,i()[fe+bt]);Ae+=ke}return u()[Ne>>2]=Ae,0}function Zx(D){var q=l["_"+D];return q}function m_(D,q){s().set(D,q)}function g_(D,q,le,Ne,Ae){var De={string:Xr=>{var bo=0;if(Xr!=null&&Xr!==0){var sw=(Xr.length<<2)+1;bo=Td(sw),be(Xr,bo,sw)}return bo},array:Xr=>{var bo=Td(Xr.length);return m_(Xr,bo),bo}};function fe(Xr){return q==="string"?ie(Xr):q==="boolean"?!!Xr:Xr}var ke=Zx(D),bt=[],Kr=0;if(Ne)for(var Yn=0;Yn<Ne.length;Yn++){var aw=De[le[Yn]];aw?(Kr===0&&(Kr=yf()),bt[Yn]=aw(Ne[Yn])):bt[Yn]=Ne[Yn]}var bf=ke.apply(null,bt);function w_(Xr){return Kr!==0&&Nd(Kr),fe(Xr)}return bf=w_(bf),bf}function y_(D,q,le,Ne){le=le||[];var Ae=le.every(fe=>fe==="number"||fe==="boolean"),De=q!=="string";return De&&Ae&&!Ne?Zx(D):function(){return g_(D,q,le,arguments)}}ce.init();var b_=[null,wd,Be,kd,qx,Kx,Xx],Jx={__emscripten_init_main_thread_js:vd,__emscripten_thread_cleanup:Nu,__pthread_create_js:lr,_emscripten_default_pthread_stack_size:ya,_emscripten_get_now_is_monotonic:QC,_emscripten_notify_task_queue:e_,_emscripten_set_offscreencanvas_size:t_,abort:r_,emscripten_check_blocking_allowed:n_,emscripten_date_now:a_,emscripten_get_heap_max:s_,emscripten_get_now:ff,emscripten_memcpy_big:i_,emscripten_num_logical_cores:o_,emscripten_receive_on_main_thread_js:u_,emscripten_resize_heap:d_,emscripten_unwind_to_js_event_loop:h_,exit:oe,fd_close:qx,fd_seek:Kx,fd_write:Xx,memory:j||l.wasmMemory};yd(),l.___wasm_call_ctors=function(){return(l.___wasm_call_ctors=l.asm.__wasm_call_ctors).apply(null,arguments)},l._init=function(){return(l._init=l.asm.init).apply(null,arguments)},l._init_with_threads_count=function(){return(l._init_with_threads_count=l.asm.init_with_threads_count).apply(null,arguments)},l._get_threads_count=function(){return(l._get_threads_count=l.asm.get_threads_count).apply(null,arguments)},l._register_tensor=function(){return(l._register_tensor=l.asm.register_tensor).apply(null,arguments)},l._dispose_data=function(){return(l._dispose_data=l.asm.dispose_data).apply(null,arguments)},l._dispose=function(){return(l._dispose=l.asm.dispose).apply(null,arguments)},l._Abs=function(){return(l._Abs=l.asm.Abs).apply(null,arguments)},l._Acos=function(){return(l._Acos=l.asm.Acos).apply(null,arguments)},l._Acosh=function(){return(l._Acosh=l.asm.Acosh).apply(null,arguments)},l._Add=function(){return(l._Add=l.asm.Add).apply(null,arguments)},l._AddN=function(){return(l._AddN=l.asm.AddN).apply(null,arguments)},l._All=function(){return(l._All=l.asm.All).apply(null,arguments)},l._Any=function(){return(l._Any=l.asm.Any).apply(null,arguments)},l._ArgMax=function(){return(l._ArgMax=l.asm.ArgMax).apply(null,arguments)},l._ArgMin=function(){return(l._ArgMin=l.asm.ArgMin).apply(null,arguments)},l._Asin=function(){return(l._Asin=l.asm.Asin).apply(null,arguments)},l._Asinh=function(){return(l._Asinh=l.asm.Asinh).apply(null,arguments)},l._Atan=function(){return(l._Atan=l.asm.Atan).apply(null,arguments)},l._Atan2=function(){return(l._Atan2=l.asm.Atan2).apply(null,arguments)},l._Atanh=function(){return(l._Atanh=l.asm.Atanh).apply(null,arguments)},l._AvgPool=function(){return(l._AvgPool=l.asm.AvgPool).apply(null,arguments)},l._AvgPool3D=function(){return(l._AvgPool3D=l.asm.AvgPool3D).apply(null,arguments)},l._AvgPool3DGrad=function(){return(l._AvgPool3DGrad=l.asm.AvgPool3DGrad).apply(null,arguments)},l._BatchMatMul=function(){return(l._BatchMatMul=l.asm.BatchMatMul).apply(null,arguments)},l._Bincount=function(){return(l._Bincount=l.asm.Bincount).apply(null,arguments)},l._Ceil=function(){return(l._Ceil=l.asm.Ceil).apply(null,arguments)},l._ClipByValue=function(){return(l._ClipByValue=l.asm.ClipByValue).apply(null,arguments)},l._Conv2D=function(){return(l._Conv2D=l.asm.Conv2D).apply(null,arguments)},l._Conv2DBackpropInput=function(){return(l._Conv2DBackpropInput=l.asm.Conv2DBackpropInput).apply(null,arguments)},l._Conv3D=function(){return(l._Conv3D=l.asm.Conv3D).apply(null,arguments)},l._Conv3DBackpropFilterV2=function(){return(l._Conv3DBackpropFilterV2=l.asm.Conv3DBackpropFilterV2).apply(null,arguments)},l._Conv3DBackpropInputV2=function(){return(l._Conv3DBackpropInputV2=l.asm.Conv3DBackpropInputV2).apply(null,arguments)},l._Cos=function(){return(l._Cos=l.asm.Cos).apply(null,arguments)},l._Cosh=function(){return(l._Cosh=l.asm.Cosh).apply(null,arguments)},l._CropAndResize=function(){return(l._CropAndResize=l.asm.CropAndResize).apply(null,arguments)},l._Cumprod=function(){return(l._Cumprod=l.asm.Cumprod).apply(null,arguments)},l._Cumsum=function(){return(l._Cumsum=l.asm.Cumsum).apply(null,arguments)},l._DenseBincount=function(){return(l._DenseBincount=l.asm.DenseBincount).apply(null,arguments)},l._DepthToSpace=function(){return(l._DepthToSpace=l.asm.DepthToSpace).apply(null,arguments)},l._DepthwiseConv2dNative=function(){return(l._DepthwiseConv2dNative=l.asm.DepthwiseConv2dNative).apply(null,arguments)},l._Diag=function(){return(l._Diag=l.asm.Diag).apply(null,arguments)},l._Dilation2D=function(){return(l._Dilation2D=l.asm.Dilation2D).apply(null,arguments)},l._Dilation2DBackpropFilter=function(){return(l._Dilation2DBackpropFilter=l.asm.Dilation2DBackpropFilter).apply(null,arguments)},l._Dilation2DBackpropInput=function(){return(l._Dilation2DBackpropInput=l.asm.Dilation2DBackpropInput).apply(null,arguments)},l._Elu=function(){return(l._Elu=l.asm.Elu).apply(null,arguments)},l._EluGrad=function(){return(l._EluGrad=l.asm.EluGrad).apply(null,arguments)},l._Equal=function(){return(l._Equal=l.asm.Equal).apply(null,arguments)},l._Exp=function(){return(l._Exp=l.asm.Exp).apply(null,arguments)},l._Expm1=function(){return(l._Expm1=l.asm.Expm1).apply(null,arguments)},l._FlipLeftRight=function(){return(l._FlipLeftRight=l.asm.FlipLeftRight).apply(null,arguments)},l._Floor=function(){return(l._Floor=l.asm.Floor).apply(null,arguments)},l._FloorDiv=function(){return(l._FloorDiv=l.asm.FloorDiv).apply(null,arguments)},l._FusedBatchNorm=function(){return(l._FusedBatchNorm=l.asm.FusedBatchNorm).apply(null,arguments)},l._FusedConv2D=function(){return(l._FusedConv2D=l.asm.FusedConv2D).apply(null,arguments)},l._FusedDepthwiseConv2D=function(){return(l._FusedDepthwiseConv2D=l.asm.FusedDepthwiseConv2D).apply(null,arguments)},l._Gather=function(){return(l._Gather=l.asm.Gather).apply(null,arguments)},l._GatherNd=function(){return(l._GatherNd=l.asm.GatherNd).apply(null,arguments)},l._Greater=function(){return(l._Greater=l.asm.Greater).apply(null,arguments)},l._GreaterEqual=function(){return(l._GreaterEqual=l.asm.GreaterEqual).apply(null,arguments)},l._IsFinite=function(){return(l._IsFinite=l.asm.IsFinite).apply(null,arguments)},l._IsInf=function(){return(l._IsInf=l.asm.IsInf).apply(null,arguments)},l._IsNan=function(){return(l._IsNan=l.asm.IsNan).apply(null,arguments)},l._LRN=function(){return(l._LRN=l.asm.LRN).apply(null,arguments)},l._LRNGrad=function(){return(l._LRNGrad=l.asm.LRNGrad).apply(null,arguments)},l._LeakyRelu=function(){return(l._LeakyRelu=l.asm.LeakyRelu).apply(null,arguments)},l._Less=function(){return(l._Less=l.asm.Less).apply(null,arguments)},l._LessEqual=function(){return(l._LessEqual=l.asm.LessEqual).apply(null,arguments)},l._LinSpace=function(){return(l._LinSpace=l.asm.LinSpace).apply(null,arguments)},l._Log=function(){return(l._Log=l.asm.Log).apply(null,arguments)},l._Log1p=function(){return(l._Log1p=l.asm.Log1p).apply(null,arguments)},l._LogicalAnd=function(){return(l._LogicalAnd=l.asm.LogicalAnd).apply(null,arguments)},l._LogicalNot=function(){return(l._LogicalNot=l.asm.LogicalNot).apply(null,arguments)},l._LogicalOr=function(){return(l._LogicalOr=l.asm.LogicalOr).apply(null,arguments)},l._LogicalXor=function(){return(l._LogicalXor=l.asm.LogicalXor).apply(null,arguments)},l._Max=function(){return(l._Max=l.asm.Max).apply(null,arguments)},l._MaxPool=function(){return(l._MaxPool=l.asm.MaxPool).apply(null,arguments)},l._MaxPool3D=function(){return(l._MaxPool3D=l.asm.MaxPool3D).apply(null,arguments)},l._MaxPool3DGrad=function(){return(l._MaxPool3DGrad=l.asm.MaxPool3DGrad).apply(null,arguments)},l._Maximum=function(){return(l._Maximum=l.asm.Maximum).apply(null,arguments)},l._Mean=function(){return(l._Mean=l.asm.Mean).apply(null,arguments)},l._Min=function(){return(l._Min=l.asm.Min).apply(null,arguments)},l._Minimum=function(){return(l._Minimum=l.asm.Minimum).apply(null,arguments)},l._MirrorPad=function(){return(l._MirrorPad=l.asm.MirrorPad).apply(null,arguments)},l._Multinomial=function(){return(l._Multinomial=l.asm.Multinomial).apply(null,arguments)},l._Multiply=function(){return(l._Multiply=l.asm.Multiply).apply(null,arguments)},l._Neg=function(){return(l._Neg=l.asm.Neg).apply(null,arguments)},l._NonMaxSuppressionV3=function(){return(l._NonMaxSuppressionV3=l.asm.NonMaxSuppressionV3).apply(null,arguments)},l._NonMaxSuppressionV4=function(){return(l._NonMaxSuppressionV4=l.asm.NonMaxSuppressionV4).apply(null,arguments)},l._NonMaxSuppressionV5=function(){return(l._NonMaxSuppressionV5=l.asm.NonMaxSuppressionV5).apply(null,arguments)},l._NotEqual=function(){return(l._NotEqual=l.asm.NotEqual).apply(null,arguments)},l._OneHot=function(){return(l._OneHot=l.asm.OneHot).apply(null,arguments)},l._PadV2=function(){return(l._PadV2=l.asm.PadV2).apply(null,arguments)},l._Pow=function(){return(l._Pow=l.asm.Pow).apply(null,arguments)},l._Prelu=function(){return(l._Prelu=l.asm.Prelu).apply(null,arguments)},l._Prod=function(){return(l._Prod=l.asm.Prod).apply(null,arguments)},l._RealDiv=function(){return(l._RealDiv=l.asm.RealDiv).apply(null,arguments)},l._Reciprocal=function(){return(l._Reciprocal=l.asm.Reciprocal).apply(null,arguments)},l._Relu=function(){return(l._Relu=l.asm.Relu).apply(null,arguments)},l._Relu6=function(){return(l._Relu6=l.asm.Relu6).apply(null,arguments)},l._ResizeBilinear=function(){return(l._ResizeBilinear=l.asm.ResizeBilinear).apply(null,arguments)},l._ResizeBilinearGrad=function(){return(l._ResizeBilinearGrad=l.asm.ResizeBilinearGrad).apply(null,arguments)},l._ResizeNearestNeighbor=function(){return(l._ResizeNearestNeighbor=l.asm.ResizeNearestNeighbor).apply(null,arguments)},l._ResizeNearestNeighborGrad=function(){return(l._ResizeNearestNeighborGrad=l.asm.ResizeNearestNeighborGrad).apply(null,arguments)},l._Reverse=function(){return(l._Reverse=l.asm.Reverse).apply(null,arguments)},l._RotateWithOffset=function(){return(l._RotateWithOffset=l.asm.RotateWithOffset).apply(null,arguments)},l._Round=function(){return(l._Round=l.asm.Round).apply(null,arguments)},l._Rsqrt=function(){return(l._Rsqrt=l.asm.Rsqrt).apply(null,arguments)},l._ScatterNd=function(){return(l._ScatterNd=l.asm.ScatterNd).apply(null,arguments)},l._SearchSorted=function(){return(l._SearchSorted=l.asm.SearchSorted).apply(null,arguments)},l._SelectV2=function(){return(l._SelectV2=l.asm.SelectV2).apply(null,arguments)},l._Selu=function(){return(l._Selu=l.asm.Selu).apply(null,arguments)},l._Sigmoid=function(){return(l._Sigmoid=l.asm.Sigmoid).apply(null,arguments)},l._Sign=function(){return(l._Sign=l.asm.Sign).apply(null,arguments)},l._Sin=function(){return(l._Sin=l.asm.Sin).apply(null,arguments)},l._Softmax=function(){return(l._Softmax=l.asm.Softmax).apply(null,arguments)},l._Softplus=function(){return(l._Softplus=l.asm.Softplus).apply(null,arguments)},l._SparseFillEmptyRows=function(){return(l._SparseFillEmptyRows=l.asm.SparseFillEmptyRows).apply(null,arguments)},l._SparseReshape=function(){return(l._SparseReshape=l.asm.SparseReshape).apply(null,arguments)},l._SparseSegmentReduction=function(){return(l._SparseSegmentReduction=l.asm.SparseSegmentReduction).apply(null,arguments)},l._SparseToDense=function(){return(l._SparseToDense=l.asm.SparseToDense).apply(null,arguments)},l._Sqrt=function(){return(l._Sqrt=l.asm.Sqrt).apply(null,arguments)},l._Square=function(){return(l._Square=l.asm.Square).apply(null,arguments)},l._SquaredDifference=function(){return(l._SquaredDifference=l.asm.SquaredDifference).apply(null,arguments)},l._Step=function(){return(l._Step=l.asm.Step).apply(null,arguments)},l._StridedSlice=function(){return(l._StridedSlice=l.asm.StridedSlice).apply(null,arguments)},l._Sub=function(){return(l._Sub=l.asm.Sub).apply(null,arguments)},l._Sum=function(){return(l._Sum=l.asm.Sum).apply(null,arguments)},l._Tan=function(){return(l._Tan=l.asm.Tan).apply(null,arguments)},l._Tanh=function(){return(l._Tanh=l.asm.Tanh).apply(null,arguments)},l._TensorScatterUpdate=function(){return(l._TensorScatterUpdate=l.asm.TensorScatterUpdate).apply(null,arguments)},l._Tile=function(){return(l._Tile=l.asm.Tile).apply(null,arguments)},l._TopK=function(){return(l._TopK=l.asm.TopK).apply(null,arguments)},l._Transform=function(){return(l._Transform=l.asm.Transform).apply(null,arguments)},l._Transpose=function(){return(l._Transpose=l.asm.Transpose).apply(null,arguments)},l.__FusedMatMul=function(){return(l.__FusedMatMul=l.asm._FusedMatMul).apply(null,arguments)},l._malloc=function(){return(l._malloc=l.asm.malloc).apply(null,arguments)},l._free=function(){return(l._free=l.asm.free).apply(null,arguments)},l.__emscripten_tls_init=function(){return(l.__emscripten_tls_init=l.asm._emscripten_tls_init).apply(null,arguments)};var Sd=l._pthread_self=function(){return(Sd=l._pthread_self=l.asm.pthread_self).apply(null,arguments)};l.___errno_location=function(){return(l.___errno_location=l.asm.__errno_location).apply(null,arguments)};var Yx=l.__emscripten_thread_init=function(){return(Yx=l.__emscripten_thread_init=l.asm._emscripten_thread_init).apply(null,arguments)};l.__emscripten_thread_crashed=function(){return(l.__emscripten_thread_crashed=l.asm._emscripten_thread_crashed).apply(null,arguments)},l._emscripten_main_thread_process_queued_calls=function(){return(l._emscripten_main_thread_process_queued_calls=l.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},l._emscripten_main_browser_thread_id=function(){return(l._emscripten_main_browser_thread_id=l.asm.emscripten_main_browser_thread_id).apply(null,arguments)};var Qx=l._emscripten_run_in_main_runtime_thread_js=function(){return(Qx=l._emscripten_run_in_main_runtime_thread_js=l.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)};l._emscripten_dispatch_to_thread_=function(){return(l._emscripten_dispatch_to_thread_=l.asm.emscripten_dispatch_to_thread_).apply(null,arguments)};var ew=l.__emscripten_proxy_execute_task_queue=function(){return(ew=l.__emscripten_proxy_execute_task_queue=l.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)},gf=l.__emscripten_thread_free_data=function(){return(gf=l.__emscripten_thread_free_data=l.asm._emscripten_thread_free_data).apply(null,arguments)},tw=l.__emscripten_thread_exit=function(){return(tw=l.__emscripten_thread_exit=l.asm._emscripten_thread_exit).apply(null,arguments)},rw=l._emscripten_stack_set_limits=function(){return(rw=l._emscripten_stack_set_limits=l.asm.emscripten_stack_set_limits).apply(null,arguments)},yf=l.stackSave=function(){return(yf=l.stackSave=l.asm.stackSave).apply(null,arguments)},Nd=l.stackRestore=function(){return(Nd=l.stackRestore=l.asm.stackRestore).apply(null,arguments)},Td=l.stackAlloc=function(){return(Td=l.stackAlloc=l.asm.stackAlloc).apply(null,arguments)};l.dynCall_iijjiiii=function(){return(l.dynCall_iijjiiii=l.asm.dynCall_iijjiiii).apply(null,arguments)},l.dynCall_jiji=function(){return(l.dynCall_jiji=l.asm.dynCall_jiji).apply(null,arguments)},l.keepRuntimeAlive=It,l.wasmMemory=j,l.cwrap=y_,l.ExitStatus=Zn,l.PThread=ce;var Cd;jr=function D(){Cd||nw(),Cd||(jr=D)};function nw(D){if(Zt>0)return;if(x){d(l),Xt(),startWorker(l);return}if(wr(),Zt>0)return;function q(){Cd||(Cd=!0,l.calledRun=!0,!ee&&(Xt(),d(l),l.onRuntimeInitialized&&l.onRuntimeInitialized(),vr()))}l.setStatus?(l.setStatus("Running..."),setTimeout(function(){setTimeout(function(){l.setStatus("")},1),q()},1)):q()}if(l.preInit)for(typeof l.preInit=="function"&&(l.preInit=[l.preInit]);l.preInit.length>0;)l.preInit.pop()();nw();var _d;c&&(_d={uncaughtException:process.listeners("uncaughtException").filter(function(D){return!c.uncaughtException.indexOf(D)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(D){return!c.unhandledRejection.indexOf(D)>-1})});var Ed;if(typeof WasmBackendModule<"u")Ed=WasmBackendModule;else if(typeof a<"u")Ed=a;else throw new Error("Could not find wasm module in post.js");if(_d){var x_=Ed._dispose;Ed._dispose=function(){x_(),_d.uncaughtException.forEach(function(D){process.removeListener("uncaughtException",D)}),_d.unhandledRejection.forEach(function(D){process.removeListener("unhandledRejection",D)})}}return a.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=r:typeof define=="function"&&define.amd?define([],function(){return r}):typeof e=="object"&&(e.WasmBackendModuleThreadedSimd=r)}),H_=Ft((e,t)=>{t.exports.wasmWorkerContents=`"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",data=>onmessage({data:data}));var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8")+"//# sourceURL="+f)},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"
");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.startWorker=instance=>{Module=instance;postMessage({"cmd":"loaded"})};self.onmessage=e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;for(const handler of e.data.handlers){Module[handler]=function(){postMessage({cmd:"callHandler",handler:handler,args:[...arguments]})}}Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob=="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module)}else if(e.data.cmd==="run"){Module["__emscripten_thread_init"](e.data.pthread_ptr,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module["executeNotifiedProxyingQueue"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module["invokeEntryPoint"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processProxyingQueue"){if(initializedJS){Module["executeNotifiedProxyingQueue"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}};`}),j_=Ft((e,t)=>{var r=(()=>{var n=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(n=n||__filename),function(a){a=a||{};var s=typeof a<"u"?a:{},i,o;s.ready=new Promise(function(Q,oe){i=Q,o=oe});var u;typeof process<"u"&&process.listeners&&(u={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var p=Object.assign({},s),l=typeof window=="object",d=typeof importScripts=="function",h=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",c="";function f(Q){return s.locateFile?s.locateFile(Q,c):c+Q}var m,g,y;if(h){var b=Gm(),x=Gv();d?c=x.dirname(c)+"/":c=__dirname+"/",m=(Q,oe)=>(Q=je(Q)?new URL(Q):x.normalize(Q),b.readFileSync(Q,oe?void 0:"utf8")),y=Q=>{var oe=m(Q,!0);return oe.buffer||(oe=new Uint8Array(oe)),oe},g=(Q,oe,Se)=>{Q=je(Q)?new URL(Q):x.normalize(Q),b.readFile(Q,function(ce,ut){ce?Se(ce):oe(ut.buffer)})},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),process.on("uncaughtException",function(Q){if(!(Q instanceof It))throw Q}),process.on("unhandledRejection",function(Q){throw Q}),s.inspect=function(){return"[Emscripten Module object]"}}else(l||d)&&(d?c=self.location.href:typeof document<"u"&&document.currentScript&&(c=document.currentScript.src),n&&(c=n),c.indexOf("blob:")!==0?c=c.substr(0,c.replace(/[?#].*/,"").lastIndexOf("/")+1):c="",m=Q=>{var oe=new XMLHttpRequest;return oe.open("GET",Q,!1),oe.send(null),oe.responseText},d&&(y=Q=>{var oe=new XMLHttpRequest;return oe.open("GET",Q,!1),oe.responseType="arraybuffer",oe.send(null),new Uint8Array(oe.response)}),g=(Q,oe,Se)=>{var ce=new XMLHttpRequest;ce.open("GET",Q,!0),ce.responseType="arraybuffer",ce.onload=()=>{if(ce.status==200||ce.status==0&&ce.response){oe(ce.response);return}Se()},ce.onerror=Se,ce.send(null)});var v=s.print||console.log.bind(console),I=s.printErr||console.warn.bind(console);Object.assign(s,p),p=null,s.arguments&&s.arguments,s.thisProgram&&s.thisProgram,s.quit&&s.quit;var T;s.wasmBinary&&(T=s.wasmBinary),s.noExitRuntime,typeof WebAssembly!="object"&&Pe("no native wasm support detected");var _,E=!1,A=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function R(Q,oe,Se){for(var ce=oe+Se,ut=oe;Q[ut]&&!(ut>=ce);)++ut;if(ut-oe>16&&Q.buffer&&A)return A.decode(Q.subarray(oe,ut));for(var mt="";oe<ut;){var Be=Q[oe++];if(!(Be&128)){mt+=String.fromCharCode(Be);continue}var Re=Q[oe++]&63;if((Be&224)==192){mt+=String.fromCharCode((Be&31)<<6|Re);continue}var Ct=Q[oe++]&63;if((Be&240)==224?Be=(Be&15)<<12|Re<<6|Ct:Be=(Be&7)<<18|Re<<12|Ct<<6|Q[oe++]&63,Be<65536)mt+=String.fromCharCode(Be);else{var qr=Be-65536;mt+=String.fromCharCode(55296|qr>>10,56320|qr&1023)}}return mt}function F(Q,oe){return Q?R(G,Q,oe):""}function S(Q,oe,Se,ce){if(!(ce>0))return 0;for(var ut=Se,mt=Se+ce-1,Be=0;Be<Q.length;++Be){var Re=Q.charCodeAt(Be);if(Re>=55296&&Re<=57343){var Ct=Q.charCodeAt(++Be);Re=65536+((Re&1023)<<10)|Ct&1023}if(Re<=127){if(Se>=mt)break;oe[Se++]=Re}else if(Re<=2047){if(Se+1>=mt)break;oe[Se++]=192|Re>>6,oe[Se++]=128|Re&63}else if(Re<=65535){if(Se+2>=mt)break;oe[Se++]=224|Re>>12,oe[Se++]=128|Re>>6&63,oe[Se++]=128|Re&63}else{if(Se+3>=mt)break;oe[Se++]=240|Re>>18,oe[Se++]=128|Re>>12&63,oe[Se++]=128|Re>>6&63,oe[Se++]=128|Re&63}}return oe[Se]=0,Se-ut}function M(Q,oe,Se){return S(Q,G,oe,Se)}var B,U,G,K;function j(Q){B=Q,s.HEAP8=U=new Int8Array(Q),s.HEAP16=new Int16Array(Q),s.HEAP32=new Int32Array(Q),s.HEAPU8=G=new Uint8Array(Q),s.HEAPU16=new Uint16Array(Q),s.HEAPU32=K=new Uint32Array(Q),s.HEAPF32=new Float32Array(Q),s.HEAPF64=new Float64Array(Q)}s.INITIAL_MEMORY;var X=[],ee=[],Z=[];function ne(){if(s.preRun)for(typeof s.preRun=="function"&&(s.preRun=[s.preRun]);s.preRun.length;)ie(s.preRun.shift());wr(X)}function te(){wr(ee)}function ae(){if(s.postRun)for(typeof s.postRun=="function"&&(s.postRun=[s.postRun]);s.postRun.length;)be(s.postRun.shift());wr(Z)}function ie(Q){X.unshift(Q)}function we(Q){ee.unshift(Q)}function be(Q){Z.unshift(Q)}var de=0,Ie=null;function Te(Q){de++,s.monitorRunDependencies&&s.monitorRunDependencies(de)}function Fe(Q){if(de--,s.monitorRunDependencies&&s.monitorRunDependencies(de),de==0&&Ie){var oe=Ie;Ie=null,oe()}}function Pe(Q){s.onAbort&&s.onAbort(Q),Q="Aborted("+Q+")",I(Q),E=!0,Q+=". Build with -sASSERTIONS for more info.";var oe=new WebAssembly.RuntimeError(Q);throw o(oe),oe}var rt="data:application/octet-stream;base64,";function Ge(Q){return Q.startsWith(rt)}function je(Q){return Q.startsWith("file://")}var $e;$e="tfjs-backend-wasm.wasm",Ge($e)||($e=f($e));function Ye(Q){try{if(Q==$e&&T)return new Uint8Array(T);if(y)return y(Q);throw"both async and sync fetching of the wasm failed"}catch(oe){Pe(oe)}}function lt(){if(!T&&(l||d)){if(typeof fetch=="function"&&!je($e))return fetch($e,{credentials:"same-origin"}).then(function(Q){if(!Q.ok)throw"failed to load wasm binary file at '"+$e+"'";return Q.arrayBuffer()}).catch(function(){return Ye($e)});if(g)return new Promise(function(Q,oe){g($e,function(Se){Q(new Uint8Array(Se))},oe)})}return Promise.resolve().then(function(){return Ye($e)})}function Fr(){var Q={env:gd,wasi_snapshot_preview1:gd};function oe(Be,Re){var Ct=Be.exports;s.asm=Ct,_=s.asm.memory,j(_.buffer),s.asm.__indirect_function_table,we(s.asm.__wasm_call_ctors),Fe()}Te();function Se(Be){oe(Be.instance)}function ce(Be){return lt().then(function(Re){return WebAssembly.instantiate(Re,Q)}).then(function(Re){return Re}).then(Be,function(Re){I("failed to asynchronously prepare wasm: "+Re),Pe(Re)})}function ut(){return!T&&typeof WebAssembly.instantiateStreaming=="function"&&!Ge($e)&&!je($e)&&!h&&typeof fetch=="function"?fetch($e,{credentials:"same-origin"}).then(function(Be){var Re=WebAssembly.instantiateStreaming(Be,Q);return Re.then(Se,function(Ct){return I("wasm streaming compile failed: "+Ct),I("falling back to ArrayBuffer instantiation"),ce(Se)})}):ce(Se)}if(s.instantiateWasm)try{var mt=s.instantiateWasm(Q,oe);return mt}catch(Be){I("Module.instantiateWasm callback failed with error: "+Be),o(Be)}return ut().catch(o),{}}function It(Q){this.name="ExitStatus",this.message="Program terminated with exit("+Q+")",this.status=Q}function wr(Q){for(;Q.length>0;)Q.shift()(s)}function Xt(){Pe("")}function vr(){return 2147483648}function an(){return vr()}function Rr(Q,oe,Se){G.copyWithin(Q,oe,oe+Se)}function kr(Q){try{return _.grow(Q-B.byteLength+65535>>>16),j(_.buffer),1}catch{}}function Zt(Q){var oe=G.length;Q=Q>>>0;var Se=vr();if(Q>Se)return!1;let ce=(Ct,qr)=>Ct+(qr-Ct%qr)%qr;for(var ut=1;ut<=4;ut*=2){var mt=oe*(1+.2/ut);mt=Math.min(mt,Q+100663296);var Be=Math.min(Se,ce(Math.max(Q,mt),65536)),Re=kr(Be);if(Re)return!0}return!1}function jr(Q){return 52}function ma(Q,oe,Se,ce,ut){return 70}var Iu=[null,[],[]];function Xn(Q,oe){var Se=Iu[Q];oe===0||oe===10?((Q===1?v:I)(R(Se,0)),Se.length=0):Se.push(oe)}function Su(Q,oe,Se,ce){for(var ut=0,mt=0;mt<Se;mt++){var Be=K[oe>>2],Re=K[oe+4>>2];oe+=8;for(var Ct=0;Ct<Re;Ct++)Xn(Q,G[Be+Ct]);ut+=Re}return K[ce>>2]=ut,0}function $n(Q){var oe=s["_"+Q];return oe}function ga(Q,oe){U.set(Q,oe)}function Jt(Q,oe,Se,ce,ut){var mt={string:lr=>{var ya=0;if(lr!=null&&lr!==0){var Id=(lr.length<<2)+1;ya=Zn(Id),M(lr,ya,Id)}return ya},array:lr=>{var ya=Zn(lr.length);return ga(lr,ya),ya}};function Be(lr){return oe==="string"?F(lr):oe==="boolean"?!!lr:lr}var Re=$n(Q),Ct=[],qr=0;if(ce)for(var Jn=0;Jn<ce.length;Jn++){var vd=mt[Se[Jn]];vd?(qr===0&&(qr=yd()),Ct[Jn]=vd(ce[Jn])):Ct[Jn]=ce[Jn]}var Nu=Re.apply(null,Ct);function kd(lr){return qr!==0&&bd(qr),Be(lr)}return Nu=kd(Nu),Nu}function md(Q,oe,Se,ce){Se=Se||[];var ut=Se.every(Be=>Be==="number"||Be==="boolean"),mt=oe!=="string";return mt&&ut&&!ce?$n(Q):function(){return Jt(Q,oe,Se,arguments)}}var gd={abort:Xt,emscripten_get_heap_max:an,emscripten_memcpy_big:Rr,emscripten_resize_heap:Zt,fd_close:jr,fd_seek:ma,fd_write:Su};Fr(),s.___wasm_call_ctors=function(){return(s.___wasm_call_ctors=s.asm.__wasm_call_ctors).apply(null,arguments)},s._init=function(){return(s._init=s.asm.init).apply(null,arguments)},s._init_with_threads_count=function(){return(s._init_with_threads_count=s.asm.init_with_threads_count).apply(null,arguments)},s._get_threads_count=function(){return(s._get_threads_count=s.asm.get_threads_count).apply(null,arguments)},s._register_tensor=function(){return(s._register_tensor=s.asm.register_tensor).apply(null,arguments)},s._dispose_data=function(){return(s._dispose_data=s.asm.dispose_data).apply(null,arguments)},s._dispose=function(){return(s._dispose=s.asm.dispose).apply(null,arguments)},s._Abs=function(){return(s._Abs=s.asm.Abs).apply(null,arguments)},s._Acos=function(){return(s._Acos=s.asm.Acos).apply(null,arguments)},s._Acosh=function(){return(s._Acosh=s.asm.Acosh).apply(null,arguments)},s._Add=function(){return(s._Add=s.asm.Add).apply(null,arguments)},s._AddN=function(){return(s._AddN=s.asm.AddN).apply(null,arguments)},s._All=function(){return(s._All=s.asm.All).apply(null,arguments)},s._Any=function(){return(s._Any=s.asm.Any).apply(null,arguments)},s._ArgMax=function(){return(s._ArgMax=s.asm.ArgMax).apply(null,arguments)},s._ArgMin=function(){return(s._ArgMin=s.asm.ArgMin).apply(null,arguments)},s._Asin=function(){return(s._Asin=s.asm.Asin).apply(null,arguments)},s._Asinh=function(){return(s._Asinh=s.asm.Asinh).apply(null,arguments)},s._Atan=function(){return(s._Atan=s.asm.Atan).apply(null,arguments)},s._Atan2=function(){return(s._Atan2=s.asm.Atan2).apply(null,arguments)},s._Atanh=function(){return(s._Atanh=s.asm.Atanh).apply(null,arguments)},s._AvgPool=function(){return(s._AvgPool=s.asm.AvgPool).apply(null,arguments)},s._AvgPool3D=function(){return(s._AvgPool3D=s.asm.AvgPool3D).apply(null,arguments)},s._AvgPool3DGrad=function(){return(s._AvgPool3DGrad=s.asm.AvgPool3DGrad).apply(null,arguments)},s._BatchMatMul=function(){return(s._BatchMatMul=s.asm.BatchMatMul).apply(null,arguments)},s._Bincount=function(){return(s._Bincount=s.asm.Bincount).apply(null,arguments)},s._Ceil=function(){return(s._Ceil=s.asm.Ceil).apply(null,arguments)},s._ClipByValue=function(){return(s._ClipByValue=s.asm.ClipByValue).apply(null,arguments)},s._Conv2D=function(){return(s._Conv2D=s.asm.Conv2D).apply(null,arguments)},s._Conv2DBackpropInput=function(){return(s._Conv2DBackpropInput=s.asm.Conv2DBackpropInput).apply(null,arguments)},s._Conv3D=function(){return(s._Conv3D=s.asm.Conv3D).apply(null,arguments)},s._Conv3DBackpropFilterV2=function(){return(s._Conv3DBackpropFilterV2=s.asm.Conv3DBackpropFilterV2).apply(null,arguments)},s._Conv3DBackpropInputV2=function(){return(s._Conv3DBackpropInputV2=s.asm.Conv3DBackpropInputV2).apply(null,arguments)},s._Cos=function(){return(s._Cos=s.asm.Cos).apply(null,arguments)},s._Cosh=function(){return(s._Cosh=s.asm.Cosh).apply(null,arguments)},s._CropAndResize=function(){return(s._CropAndResize=s.asm.CropAndResize).apply(null,arguments)},s._Cumprod=function(){return(s._Cumprod=s.asm.Cumprod).apply(null,arguments)},s._Cumsum=function(){return(s._Cumsum=s.asm.Cumsum).apply(null,arguments)},s._DenseBincount=function(){return(s._DenseBincount=s.asm.DenseBincount).apply(null,arguments)},s._DepthToSpace=function(){return(s._DepthToSpace=s.asm.DepthToSpace).apply(null,arguments)},s._DepthwiseConv2dNative=function(){return(s._DepthwiseConv2dNative=s.asm.DepthwiseConv2dNative).apply(null,arguments)},s._Diag=function(){return(s._Diag=s.asm.Diag).apply(null,arguments)},s._Dilation2D=function(){return(s._Dilation2D=s.asm.Dilation2D).apply(null,arguments)},s._Dilation2DBackpropFilter=function(){return(s._Dilation2DBackpropFilter=s.asm.Dilation2DBackpropFilter).apply(null,arguments)},s._Dilation2DBackpropInput=function(){return(s._Dilation2DBackpropInput=s.asm.Dilation2DBackpropInput).apply(null,arguments)},s._Elu=function(){return(s._Elu=s.asm.Elu).apply(null,arguments)},s._EluGrad=function(){return(s._EluGrad=s.asm.EluGrad).apply(null,arguments)},s._Equal=function(){return(s._Equal=s.asm.Equal).apply(null,arguments)},s._Exp=function(){return(s._Exp=s.asm.Exp).apply(null,arguments)},s._Expm1=function(){return(s._Expm1=s.asm.Expm1).apply(null,arguments)},s._FlipLeftRight=function(){return(s._FlipLeftRight=s.asm.FlipLeftRight).apply(null,arguments)},s._Floor=function(){return(s._Floor=s.asm.Floor).apply(null,arguments)},s._FloorDiv=function(){return(s._FloorDiv=s.asm.FloorDiv).apply(null,arguments)},s._FusedBatchNorm=function(){return(s._FusedBatchNorm=s.asm.FusedBatchNorm).apply(null,arguments)},s._FusedConv2D=function(){return(s._FusedConv2D=s.asm.FusedConv2D).apply(null,arguments)},s._FusedDepthwiseConv2D=function(){return(s._FusedDepthwiseConv2D=s.asm.FusedDepthwiseConv2D).apply(null,arguments)},s._Gather=function(){return(s._Gather=s.asm.Gather).apply(null,arguments)},s._GatherNd=function(){return(s._GatherNd=s.asm.GatherNd).apply(null,arguments)},s._Greater=function(){return(s._Greater=s.asm.Greater).apply(null,arguments)},s._GreaterEqual=function(){return(s._GreaterEqual=s.asm.GreaterEqual).apply(null,arguments)},s._IsFinite=function(){return(s._IsFinite=s.asm.IsFinite).apply(null,arguments)},s._IsInf=function(){return(s._IsInf=s.asm.IsInf).apply(null,arguments)},s._IsNan=function(){return(s._IsNan=s.asm.IsNan).apply(null,arguments)},s._LRN=function(){return(s._LRN=s.asm.LRN).apply(null,arguments)},s._LRNGrad=function(){return(s._LRNGrad=s.asm.LRNGrad).apply(null,arguments)},s._LeakyRelu=function(){return(s._LeakyRelu=s.asm.LeakyRelu).apply(null,arguments)},s._Less=function(){return(s._Less=s.asm.Less).apply(null,arguments)},s._LessEqual=function(){return(s._LessEqual=s.asm.LessEqual).apply(null,arguments)},s._LinSpace=function(){return(s._LinSpace=s.asm.LinSpace).apply(null,arguments)},s._Log=function(){return(s._Log=s.asm.Log).apply(null,arguments)},s._Log1p=function(){return(s._Log1p=s.asm.Log1p).apply(null,arguments)},s._LogicalAnd=function(){return(s._LogicalAnd=s.asm.LogicalAnd).apply(null,arguments)},s._LogicalNot=function(){return(s._LogicalNot=s.asm.LogicalNot).apply(null,arguments)},s._LogicalOr=function(){return(s._LogicalOr=s.asm.LogicalOr).apply(null,arguments)},s._LogicalXor=function(){return(s._LogicalXor=s.asm.LogicalXor).apply(null,arguments)},s._Max=function(){return(s._Max=s.asm.Max).apply(null,arguments)},s._MaxPool=function(){return(s._MaxPool=s.asm.MaxPool).apply(null,arguments)},s._MaxPool3D=function(){return(s._MaxPool3D=s.asm.MaxPool3D).apply(null,arguments)},s._MaxPool3DGrad=function(){return(s._MaxPool3DGrad=s.asm.MaxPool3DGrad).apply(null,arguments)},s._Maximum=function(){return(s._Maximum=s.asm.Maximum).apply(null,arguments)},s._Mean=function(){return(s._Mean=s.asm.Mean).apply(null,arguments)},s._Min=function(){return(s._Min=s.asm.Min).apply(null,arguments)},s._Minimum=function(){return(s._Minimum=s.asm.Minimum).apply(null,arguments)},s._MirrorPad=function(){return(s._MirrorPad=s.asm.MirrorPad).apply(null,arguments)},s._Multinomial=function(){return(s._Multinomial=s.asm.Multinomial).apply(null,arguments)},s._Multiply=function(){return(s._Multiply=s.asm.Multiply).apply(null,arguments)},s._Neg=function(){return(s._Neg=s.asm.Neg).apply(null,arguments)},s._NonMaxSuppressionV3=function(){return(s._NonMaxSuppressionV3=s.asm.NonMaxSuppressionV3).apply(null,arguments)},s._NonMaxSuppressionV4=function(){return(s._NonMaxSuppressionV4=s.asm.NonMaxSuppressionV4).apply(null,arguments)},s._NonMaxSuppressionV5=function(){return(s._NonMaxSuppressionV5=s.asm.NonMaxSuppressionV5).apply(null,arguments)},s._NotEqual=function(){return(s._NotEqual=s.asm.NotEqual).apply(null,arguments)},s._OneHot=function(){return(s._OneHot=s.asm.OneHot).apply(null,arguments)},s._PadV2=function(){return(s._PadV2=s.asm.PadV2).apply(null,arguments)},s._Pow=function(){return(s._Pow=s.asm.Pow).apply(null,arguments)},s._Prelu=function(){return(s._Prelu=s.asm.Prelu).apply(null,arguments)},s._Prod=function(){return(s._Prod=s.asm.Prod).apply(null,arguments)},s._RealDiv=function(){return(s._RealDiv=s.asm.RealDiv).apply(null,arguments)},s._Reciprocal=function(){return(s._Reciprocal=s.asm.Reciprocal).apply(null,arguments)},s._Relu=function(){return(s._Relu=s.asm.Relu).apply(null,arguments)},s._Relu6=function(){return(s._Relu6=s.asm.Relu6).apply(null,arguments)},s._ResizeBilinear=function(){return(s._ResizeBilinear=s.asm.ResizeBilinear).apply(null,arguments)},s._ResizeBilinearGrad=function(){return(s._ResizeBilinearGrad=s.asm.ResizeBilinearGrad).apply(null,arguments)},s._ResizeNearestNeighbor=function(){return(s._ResizeNearestNeighbor=s.asm.ResizeNearestNeighbor).apply(null,arguments)},s._ResizeNearestNeighborGrad=function(){return(s._ResizeNearestNeighborGrad=s.asm.ResizeNearestNeighborGrad).apply(null,arguments)},s._Reverse=function(){return(s._Reverse=s.asm.Reverse).apply(null,arguments)},s._RotateWithOffset=function(){return(s._RotateWithOffset=s.asm.RotateWithOffset).apply(null,arguments)},s._Round=function(){return(s._Round=s.asm.Round).apply(null,arguments)},s._Rsqrt=function(){return(s._Rsqrt=s.asm.Rsqrt).apply(null,arguments)},s._ScatterNd=function(){return(s._ScatterNd=s.asm.ScatterNd).apply(null,arguments)},s._SearchSorted=function(){return(s._SearchSorted=s.asm.SearchSorted).apply(null,arguments)},s._SelectV2=function(){return(s._SelectV2=s.asm.SelectV2).apply(null,arguments)},s._Selu=function(){return(s._Selu=s.asm.Selu).apply(null,arguments)},s._Sigmoid=function(){return(s._Sigmoid=s.asm.Sigmoid).apply(null,arguments)},s._Sign=function(){return(s._Sign=s.asm.Sign).apply(null,arguments)},s._Sin=function(){return(s._Sin=s.asm.Sin).apply(null,arguments)},s._Softmax=function(){return(s._Softmax=s.asm.Softmax).apply(null,arguments)},s._Softplus=function(){return(s._Softplus=s.asm.Softplus).apply(null,arguments)},s._SparseFillEmptyRows=function(){return(s._SparseFillEmptyRows=s.asm.SparseFillEmptyRows).apply(null,arguments)},s._SparseReshape=function(){return(s._SparseReshape=s.asm.SparseReshape).apply(null,arguments)},s._SparseSegmentReduction=function(){return(s._SparseSegmentReduction=s.asm.SparseSegmentReduction).apply(null,arguments)},s._SparseToDense=function(){return(s._SparseToDense=s.asm.SparseToDense).apply(null,arguments)},s._Sqrt=function(){return(s._Sqrt=s.asm.Sqrt).apply(null,arguments)},s._Square=function(){return(s._Square=s.asm.Square).apply(null,arguments)},s._SquaredDifference=function(){return(s._SquaredDifference=s.asm.SquaredDifference).apply(null,arguments)},s._Step=function(){return(s._Step=s.asm.Step).apply(null,arguments)},s._StridedSlice=function(){return(s._StridedSlice=s.asm.StridedSlice).apply(null,arguments)},s._Sub=function(){return(s._Sub=s.asm.Sub).apply(null,arguments)},s._Sum=function(){return(s._Sum=s.asm.Sum).apply(null,arguments)},s._Tan=function(){return(s._Tan=s.asm.Tan).apply(null,arguments)},s._Tanh=function(){return(s._Tanh=s.asm.Tanh).apply(null,arguments)},s._TensorScatterUpdate=function(){return(s._TensorScatterUpdate=s.asm.TensorScatterUpdate).apply(null,arguments)},s._Tile=function(){return(s._Tile=s.asm.Tile).apply(null,arguments)},s._TopK=function(){return(s._TopK=s.asm.TopK).apply(null,arguments)},s._Transform=function(){return(s._Transform=s.asm.Transform).apply(null,arguments)},s._Transpose=function(){return(s._Transpose=s.asm.Transpose).apply(null,arguments)},s.__FusedMatMul=function(){return(s.__FusedMatMul=s.asm._FusedMatMul).apply(null,arguments)},s._malloc=function(){return(s._malloc=s.asm.malloc).apply(null,arguments)},s._free=function(){return(s._free=s.asm.free).apply(null,arguments)},s.___errno_location=function(){return(s.___errno_location=s.asm.__errno_location).apply(null,arguments)};var yd=s.stackSave=function(){return(yd=s.stackSave=s.asm.stackSave).apply(null,arguments)},bd=s.stackRestore=function(){return(bd=s.stackRestore=s.asm.stackRestore).apply(null,arguments)},Zn=s.stackAlloc=function(){return(Zn=s.stackAlloc=s.asm.stackAlloc).apply(null,arguments)};s.dynCall_iijjiiii=function(){return(s.dynCall_iijjiiii=s.asm.dynCall_iijjiiii).apply(null,arguments)},s.dynCall_jiji=function(){return(s.dynCall_jiji=s.asm.dynCall_jiji).apply(null,arguments)},s.cwrap=md;var go;Ie=function Q(){go||xd(),go||(Ie=Q)};function xd(Q){if(de>0||(ne(),de>0))return;function oe(){go||(go=!0,s.calledRun=!0,!E&&(te(),i(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),ae()))}s.setStatus?(s.setStatus("Running..."),setTimeout(function(){setTimeout(function(){s.setStatus("")},1),oe()},1)):oe()}if(s.preInit)for(typeof s.preInit=="function"&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();xd();var ss;u&&(ss={uncaughtException:process.listeners("uncaughtException").filter(function(Q){return!u.uncaughtException.indexOf(Q)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(Q){return!u.unhandledRejection.indexOf(Q)>-1})});var is;if(typeof a<"u")is=a;else if(typeof WasmBackendModuleThreadedSimd<"u")is=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(ss){var wd=is._dispose;is._dispose=function(){wd(),ss.uncaughtException.forEach(function(Q){process.removeListener("uncaughtException",Q)}),ss.unhandledRejection.forEach(function(Q){process.removeListener("unhandledRejection",Q)})}}return a.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=r:typeof define=="function"&&define.amd?define([],function(){return r}):typeof e=="object"&&(e.WasmBackendModule=r)}),Mh=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},hp=class{refCount(e){return Dr("refCount")}incRef(e){return Dr("incRef")}timerAvailable(){return!0}time(e){return Dr("time")}read(e){return Dr("read")}readSync(e){return Dr("readSync")}readToGPU(e,t){return Dr("readToGPU")}numDataIds(){return Dr("numDataIds")}disposeData(e,t){return Dr("disposeData")}write(e,t,r){return Dr("write")}move(e,t,r,n,a){return Dr("move")}createTensorFromGPUData(e,t,r){return Dr("createTensorFromGPUData")}memory(){return Dr("memory")}floatPrecision(){return Dr("floatPrecision")}epsilon(){return this.floatPrecision()===32?1e-7:1e-4}dispose(){return Dr("dispose")}};function Dr(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Hv(e){let t=e.length,r=0;for(;t>0;)r=Math.random()*t|0,t--,rh(e,t,r)}function q_(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let r=e.length,n=0;for(;r>0;)n=Math.random()*r|0,r--,rh(e,r,n),rh(t,r,n)}function qu(e,t,r){return Math.max(e,Math.min(t,r))}function K_(e){return e%2===0?e:e+1}function rh(e,t,r){let n=e[t];e[t]=e[r],e[r]=n}function X_(e){let t=0;for(let r=0;r<e.length;r++)t+=e[r];return t}function Z_(e,t){let r=Math.random();return t*r+(1-r)*e}function J_(e,t){let r=0;for(let n=0;n<e.length;n++){let a=Number(e[n])-Number(t[n]);r+=a*a}return r}function $(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function gr(e,t,r=""){$(Ua(e,t),()=>r+` Shapes ${e} and ${t} must match`)}function Ws(e){$(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function dt(e){if(e.length===0)return 1;let t=e[0];for(let r=1;r<e.length;r++)t*=e[r];return t}function Y_(e){return e.length===0}function Ua(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let r=0;r<e.length;r++)if(e[r]!==t[r])return!1;return!0}function Eo(e){return e%1===0}function Q_(e){if(Math.tanh!=null)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function eE(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function tE(e){let t=new Uint32Array(e);for(let r=0;r<e;++r)t[r]=r;return Hv(t),t}function Vu(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function rE(e,t=a=>0,r,n){return new Promise((a,s)=>{let i=0,o=()=>{if(e()){a();return}i++;let u=t(i);if(r!=null&&i>=r){s();return}n!=null?n(o,u):setTimeout(o,u)};o()})}function nE(e,t){let r=1,n=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)r*=e[s];else if(e[s]===-1){if(n!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${s}`);n=s}else if(e[s]<0)throw Error(`Shapes can not be < 0. Found ${e[s]} at dim ${s}`);if(n===-1){if(t>0&&t!==r)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(r===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%r!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${r}`);let a=e.slice();return a[n]=t/r,a}function fn(e,t){let r=t.length;return e=e==null?t.map((n,a)=>a):[].concat(e),$(e.every(n=>n>=-r&&n<r),()=>`All values in axis param must be in range [-${r}, ${r}) but got axis ${e}`),$(e.every(n=>Eo(n)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(n=>n<0?r+n:n)}function jv(e,t){let r=[],n=[],a=t!=null&&Array.isArray(t)&&t.length===0,s=t==null||a?null:fn(t,e).sort(),i=0;for(let o=0;o<e.length;++o){if(s!=null){if(s[i]===o&&e[o]!==1)throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(s[i]==null||s[i]>o)&&e[o]===1&&(r.push(e[o]),n.push(o)),s[i]<=o&&i++}e[o]!==1&&(r.push(e[o]),n.push(o))}return{newShape:r,keptDims:n}}function qv(e,t){return Hm(e,t)}function Hm(e,t){let r=null;if(e==null||e==="float32")r=new Float32Array(t);else if(e==="int32")r=new Int32Array(t);else if(e==="bool")r=new Uint8Array(t);else if(e==="string")r=new Array(t);else throw new Error(`Unknown data type ${e}`);return r}function Kv(e,t){for(let r=0;r<e.length;r++){let n=e[r];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${t} being uploaded contains ${n}.`)}}function Xv(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function aE(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function nh(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function Zv(e){if(e==null)return 0;let t=0;return e.forEach(r=>t+=r.length),t}function Sa(e){return typeof e=="string"||e instanceof String}function Jv(e){return typeof e=="boolean"}function Yv(e){return typeof e=="number"}function cp(e){return Array.isArray(e)?cp(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Yv(e)?"float32":Sa(e)?"string":Jv(e)?"bool":"float32"}function Aa(e){return!!(e&&e.constructor&&e.call&&e.apply)}function ah(e,t){for(let r=t;r<e;++r)if(e%r===0)return r;return e}function Yo(e){let t=e.length;if(t<2)return[];let r=new Array(t-1);r[t-2]=e[t-1];for(let n=t-3;n>=0;--n)r[n]=r[n+1]*e[n+1];return r}function Qv(e,t,r,n=!1){let a=new Array;if(t.length===1){let s=t[0]*(n?2:1);for(let i=0;i<s;i++)a[i]=r[e+i]}else{let s=t[0],i=t.slice(1),o=i.reduce((u,p)=>u*p)*(n?2:1);for(let u=0;u<s;u++)a[u]=Qv(e+u*o,i,r,n)}return a}function No(e,t,r=!1){if(e.length===0)return t[0];let n=e.reduce((a,s)=>a*s)*(r?2:1);if(n===0)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${r?" for a complex tensor":""}.`);return Qv(0,e,t,r)}function sE(e,t){if(Array.isArray(e))return e;if(t==="float32")return e instanceof Float32Array?e:new Float32Array(e);if(t==="int32")return e instanceof Int32Array?e:new Int32Array(e);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function jm(e,t){let r=Oh(e,t);for(let n=0;n<r.length;n++)r[n]=1;return r}function Oh(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function iE(e,t){let r=e.reduce((n,a)=>n*a,1);if(t==null||t==="float32")return No(e,new Float32Array(r));if(t==="int32")return No(e,new Int32Array(r));if(t==="bool")return No(e,new Uint8Array(r));throw new Error(`Unknown data type ${t}`)}function Hr(e){e.forEach(t=>{$(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function oE(e,t,r){if(t===0)return 0;if(t===1)return e[0];let n=e[e.length-1];for(let a=0;a<e.length-1;++a)n+=r[a]*e[a];return n}function lE(e,t,r){if(t===0)return[];if(t===1)return[e];let n=new Array(t);for(let a=0;a<n.length-1;++a)n[a]=Math.floor(e/r[a]),e-=n[a]*r[a];return n[n.length-1]=e,n}function zh(e){return e&&e.then&&typeof e.then=="function"}var iw="tfjsflags",e0=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=uE,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(H().getBool("IS_TEST")||H().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,r){if(this.flagRegistry[e]={evaluationFn:t,setHook:r},this.urlFlags[e]!=null){let n=this.urlFlags[e];H().getBool("IS_TEST")||H().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${n}.`),this.set(e,n)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(zh(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let e=this.getQueryParams(this.global.location.search);iw in e&&e[iw].split(",").forEach(t=>{let[r,n]=t.split(":");this.urlFlags[r]=dE(r,n)})}};function uE(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(r,...n)=>(pE(t,n[0],n[1]),n.join("="))),t}function pE(e,t,r){e[decodeURIComponent(t)]=decodeURIComponent(r||"")}function dE(e,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function H(){return qm}var qm=null;function hE(e){qm=e}var xf;function t0(){if(xf==null){let e;if(typeof window<"u")e=window;else if(typeof globalThis<"u")e=globalThis;else if(typeof process<"u")e=process;else if(typeof self<"u")e=self;else throw new Error("Could not find a global object");xf=e}return xf}function cE(){let e=t0();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function Km(e,t){let r=cE();if(r.has(e))return r.get(e);{let n=t();return r.set(e,n),r.get(e)}}var Qo="Abs",Vs="Acos",Us="Acosh",Ga="Add",Gs="AddN",el="All",tl="Any",rl="ArgMax",nl="ArgMin",Hs="Asin",js="Asinh",qs="Atan",Ks="Atanh",Xs="Atan2",Zs="AvgPool",Lh="AvgPoolGrad",al="AvgPool3D",fp="AvgPool3DGrad",Js="BatchMatMul",sl="BatchToSpaceND",il="Bincount",r0="BroadcastTo",mp="BroadcastArgs",Ys="Cast",Qs="Ceil",Ha="ClipByValue",Ph="Complex",gp="ComplexAbs",ol="Concat",ei="Conv2D",Bh="Conv2DBackpropFilter",ti="Conv2DBackpropInput",ri="Conv3D",ll="Conv3DBackpropFilterV2",ul="Conv3DBackpropInputV2",ni="Cos",ai="Cosh",pl="Cumprod",si="Cumsum",dl="CropAndResize",yp="DenseBincount",hl="DepthToSpace",ii="DepthwiseConv2dNative",Wh="DepthwiseConv2dNativeBackpropFilter",Vh="DepthwiseConv2dNativeBackpropInput",bp="Diag",oi="Dilation2D",$o="Dilation2DBackpropInput",Ao="Dilation2DBackpropFilter",li="RealDiv",Uh="Einsum",ui="Elu",cl="EluGrad",fl="Erf",ml="Equal",pi="Exp",gl="ExpandDims",di="Expm1",Gh="FFT",xp="Fill",yl="FlipLeftRight",hi="Floor",ci="FloorDiv",fi="FusedBatchNorm",bl="GatherV2",xl="GatherNd",wl="Greater",mi="GreaterEqual",gi="Identity",Hh="IFFT",jh="Imag",yi="IsFinite",bi="IsInf",xi="IsNan",wi="LeakyRelu",vl="Less",kl="LessEqual",Il="LinSpace",vi="Log",ki="Log1p",Sl="LogicalAnd",Nl="LogicalNot",Tl="LogicalOr",n0="LogicalXor",a0="LogSoftmax",fE="LowerBound",Ii="LRN",Cl="LRNGrad",mE="MatrixBandPart",Si="Max",Ni="Maximum",Ti="MaxPool",qh="MaxPoolGrad",_l="MaxPool3D",wp="MaxPool3DGrad",Kh="MaxPoolWithArgmax",Ci="Mean",_i="Min",Ei="Minimum",$i="MirrorPad",El="Mod",$l="Multinomial",Ai="Multiply",Al="Neg",Fl="NotEqual",Rl="NonMaxSuppressionV3",Dl="NonMaxSuppressionV4",Ml="NonMaxSuppressionV5",Ol="OnesLike",Fi="OneHot",zl="Pack",Ri="PadV2",gE="Pool",Di="Pow",Mi="Prelu",Oi="Prod",Xh="RaggedGather",Zh="RaggedRange",Jh="RaggedTensorToTensor",vp="Range",Yh="Real",zi="Reciprocal",Li="Relu",Ll="Reshape",Pi="ResizeNearestNeighbor",Pl="ResizeNearestNeighborGrad",Bi="ResizeBilinear",Bl="ResizeBilinearGrad",Wi="Relu6",Vi="Reverse",Ui="Round",Gi="Rsqrt",Wl="ScatterNd",Vl="TensorScatterUpdate",Ul="SearchSorted",Gl="Select",Hi="Selu",Hl="Slice",ji="Sin",jl="Sinh",qi="Sign",Ki="Sigmoid",Xi="Softplus",Zi="Sqrt",Ji="Sum",ql="SpaceToBatchND",Kl="SplitV",Yi="Softmax",kp="SparseFillEmptyRows",Xl="SparseReshape",Ip="SparseSegmentMean",Sp="SparseSegmentSum",Zl="SparseToDense",Qi="SquaredDifference",Np="Square",Tp="StaticRegexReplace",Jl="StridedSlice",Cp="StringNGrams",_p="StringSplit",Ep="StringToHashBucketFast",eo="Sub",to="Tan",ro="Tanh",ja="Tile",Yl="TopK",Ql="Transform",aa="Transpose",$p="Unique",eu="Unpack",Ap="UnsortedSegmentSum",yE="UpperBound",tu="ZerosLike",qa="Step",sh="FromPixels",ru="RotateWithOffset",Is="_FusedMatMul",Ss="FusedConv2D",Ns="FusedDepthwiseConv2D";function Ia(...e){H().getBool("IS_TEST")||H().getBool("PROD")||console.warn(...e)}function bE(...e){H().getBool("IS_TEST")||H().getBool("PROD")||console.log(...e)}var Fo=Km("kernelRegistry",()=>new Map),Ku=Km("gradRegistry",()=>new Map);function ih(e,t){let r=Xm(e,t);return Fo.get(r)}function Lf(e){return Ku.get(e)}function oh(e){let t=Fo.entries(),r=[];for(;;){let{done:n,value:a}=t.next();if(n)break;let[s,i]=a,[o]=s.split("_");o===e&&r.push(i)}return r}function Fp(e){let{kernelName:t,backendName:r}=e,n=Xm(t,r);Fo.has(n)&&Ia(`The kernel '${t}' for backend '${r}' is already registered`),Fo.set(n,e)}function s0(e){let{kernelName:t}=e;Ku.has(t)&&H().getBool("DEBUG")&&Ia(`Overriding the gradient for '${t}'`),Ku.set(t,e)}function xE(e,t){let r=Xm(e,t);if(!Fo.has(r))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);Fo.delete(r)}function wE(e){if(!Ku.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);Ku.delete(e)}function vE(e,t){oh(e).forEach(r=>{let n=Object.assign({},r,{backendName:t});Fp(n)})}function Xm(e,t){return`${t}_${e}`}var w={};Ee(w,{arraysEqual:()=>Ua,assert:()=>$,assertNonNegativeIntegerDimensions:()=>Hr,assertNonNull:()=>Ws,assertShapesMatch:()=>gr,bytesFromStringArray:()=>Zv,bytesPerElement:()=>nh,checkConversionForErrors:()=>Kv,clamp:()=>qu,computeStrides:()=>Yo,convertBackendValuesAndArrayBuffer:()=>sE,createScalarValue:()=>CE,createShuffledIndices:()=>tE,decodeString:()=>lh,distSquared:()=>J_,encodeString:()=>Dp,fetch:()=>EE,fingerPrint64:()=>TE,flatten:()=>Fa,getArrayFromDType:()=>Hm,getTypedArrayFromDType:()=>qv,hasEncodingLoss:()=>aE,hexToLong:()=>Rp,indexToLoc:()=>lE,inferDtype:()=>cp,inferFromImplicitShape:()=>nE,isBoolean:()=>Jv,isFunction:()=>Aa,isInt:()=>Eo,isNumber:()=>Yv,isPromise:()=>zh,isScalarShape:()=>Y_,isString:()=>Sa,isTypedArray:()=>Yt,isValidDtype:()=>Xv,locToIndex:()=>oE,makeOnesTypedArray:()=>jm,makeZerosNestedTypedArray:()=>iE,makeZerosTypedArray:()=>Oh,nearestDivisor:()=>ah,nearestLargerEven:()=>K_,now:()=>Xu,parseAxisParam:()=>fn,randUniform:()=>Z_,repeatedTry:()=>rE,rightPad:()=>Vu,shuffle:()=>Hv,shuffleCombo:()=>q_,sizeFromShape:()=>dt,sizeToSquarishShape:()=>eE,squeezeShape:()=>jv,sum:()=>X_,swap:()=>rh,tanh:()=>Q_,toNestedArray:()=>No,toTypedArray:()=>Qh});var ow=Va($_()),ds=ow.default||ow;function Rp(e){return ds.fromString(e,!0,16)}var i0=Rp("c3a5c85c97cb3127"),us=Rp("b492b66fbe98f273"),ur=Rp("9ae16a3b2f90404f");function Pf(e){return e.xor(e.shru(47))}function o0(e,t,r){let n=e.slice(t,t+r);return ds.fromBytes(Array.from(n),!0,!0)}function pt(e,t){return o0(e,t,8)}function lw(e,t){return o0(e,t,4)}function Vt(e,t){return t===0?e:e.shru(t).or(e.shl(64-t))}function _a(e,t,r=Rp("9ddfea08eb382d69")){let n=e.xor(t).mul(r);n=n.xor(n.shru(47));let a=t.xor(n).mul(r);return a=a.xor(a.shru(47)),a=a.mul(r),a}function kE(e,t,r,n,a,s){a=a.add(e),s=Vt(s.add(a).add(n),21);let i=a;return a=a.add(t),a=a.add(r),s=s.add(Vt(a,44)),[a.add(n),s.add(i)]}function $d(e,t,r,n){return kE(pt(e,t),pt(e,t+8),pt(e,t+16),pt(e,t+24),r,n)}function IE(e,t=e.length){if(t>=8){let r=ur.add(t*2),n=pt(e,0).add(ur),a=pt(e,t-8),s=Vt(a,37).mul(r).add(n),i=Vt(n,25).add(a).mul(r);return _a(s,i,r)}if(t>=4){let r=ur.add(t*2),n=lw(e,0);return _a(n.shl(3).add(t),lw(e,t-4),r)}if(t>0){let r=e[0],n=e[t>>1],a=e[t-1],s=r+(n<<8),i=t+(a<<2);return Pf(ur.mul(s).xor(i0.mul(i))).mul(ur)}return ur}function SE(e,t=e.length){let r=ur.add(t*2),n=pt(e,0).mul(us),a=pt(e,8),s=pt(e,t-8).mul(r),i=pt(e,t-16).mul(ur);return _a(Vt(n.add(a),43).add(Vt(s,30)).add(i),n.add(Vt(a.add(ur),18)).add(s),r)}function NE(e,t=e.length){let r=ur.add(t*2),n=pt(e,0).mul(ur),a=pt(e,8),s=pt(e,t-8).mul(r),i=pt(e,t-16).mul(ur),o=Vt(n.add(a),43).add(Vt(s,30)).add(i),u=_a(o,n.add(Vt(a.add(ur),18)).add(s),r),p=pt(e,16).mul(r),l=pt(e,24),d=o.add(pt(e,t-32)).mul(r),h=u.add(pt(e,t-24)).mul(r);return _a(Vt(p.add(l),43).add(Vt(d,30)).add(h),p.add(Vt(l.add(n),18)).add(d),r)}function TE(e,t=e.length){let r=ds.fromNumber(81,!0);if(t<=32)return t<=16?IE(e,t):SE(e,t);if(t<=64)return NE(e,t);let n=r,a=r.mul(us).add(113),s=Pf(a.mul(ur).add(113)).mul(ur),i=[ds.UZERO,ds.UZERO],o=[ds.UZERO,ds.UZERO];n=n.mul(ur).add(pt(e,0));let u=0,p=(t-1>>6)*64,l=p+(t-1&63)-63;do n=Vt(n.add(a).add(i[0]).add(pt(e,u+8)),37).mul(us),a=Vt(a.add(i[1]).add(pt(e,u+48)),42).mul(us),n=n.xor(o[1]),a=a.add(i[0]).add(pt(e,u+40)),s=Vt(s.add(o[0]),33).mul(us),i=$d(e,u,i[1].mul(us),n.add(o[0])),o=$d(e,u+32,s.add(o[1]),a.add(pt(e,u+16))),[s,n]=[n,s],u+=64;while(u!==p);let d=us.add(s.and(255).shl(1));return u=l,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),n=Vt(n.add(a).add(i[0]).add(pt(e,u+8)),37).mul(d),a=Vt(a.add(i[1]).add(pt(e,u+48)),42).mul(d),n=n.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(pt(e,u+40))),s=Vt(s.add(o[0]),33).mul(d),i=$d(e,u,i[1].mul(d),n.add(o[0])),o=$d(e,u+32,s.add(o[1]),a.add(pt(e,u+16))),[s,n]=[n,s],_a(_a(i[0],o[0],d).add(Pf(a).mul(i0)).add(s),_a(i[1],o[1],d).add(n),d)}function CE(e,t){return t==="string"?Dp(e):Qh([e],t)}function _E(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function Qh(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Fa(e)),H().getBool("DEBUG")&&Kv(e,t),_E(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){let r=new Uint8Array(e.length);for(let n=0;n<r.length;++n)Math.round(e[n])!==0&&(r[n]=1);return r}else throw new Error(`Unknown data type ${t}`)}function Xu(){return H().platform.now()}function EE(e,t){return H().platform.fetch(e,t)}function Dp(e,t="utf-8"){return t=t||"utf-8",H().platform.encode(e,t)}function lh(e,t="utf-8"){return t=t||"utf-8",H().platform.decode(e,t)}function Yt(e){return H().platform.isTypedArray(e)}function Fa(e,t=[],r=!1){if(t==null&&(t=[]),typeof e=="boolean"||typeof e=="number"||typeof e=="string"||zh(e)||e==null||Yt(e)&&r)t.push(e);else if(Array.isArray(e)||Yt(e))for(let n=0;n<e.length;++n)Fa(e[n],t,r);else{let n=-1;for(let a of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(a)&&(n=Math.max(n,Number(a)));for(let a=0;a<=n;a++)Fa(e[a],t,r)}return t}var $E=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new FE)}profileKernel(e,t,r){let n,a=()=>{n=r()},s,i=Xu();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(a);else{a();for(let o of n)o.dataSync();s=Promise.resolve({kernelMs:Xu()-i})}if(H().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let o=0;o<n.length;o++){let u=n[o];u.data().then(p=>{AE(p,u.dtype,e)})}return{kernelName:e,outputs:n,inputs:t,timeMs:s.then(o=>o.kernelMs),extraInfo:s.then(o=>o.getExtraProfileInfo!=null?o.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:r,timeMs:n,inputs:a,extraInfo:s}=e;r.forEach(i=>{Promise.all([i.data(),n,s]).then(o=>{this.logger.logKernelProfile(t,i,o[0],o[1],a,o[2])})})}};function AE(e,t,r){if(t!=="float32")return!1;for(let n=0;n<e.length;n++){let a=e[n];if(isNaN(a)||!isFinite(a))return console.warn(`Found ${a} in the result of '${r}'`),!0}return!1}var FE=class{logKernelProfile(e,t,r,n,a,s){let i=typeof n=="number"?Vu(`${n}ms`,9):n.error,o=Vu(e,25),u=t.rank,p=t.size,l=Vu(t.shape.toString(),14),d="";for(let h in a){let c=a[h];if(c!=null){let f=c.shape||t.shape,m=f.length;d+=`${h}: ${m}D ${m>0?f:""} `}}console.log(`%c${o}	%c${i}	%c${u}D ${l}	%c${p}	%c${d}	%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function RE(e,t,r){let n={},a={};for(let u=0;u<t.length;u++)n[t[u].id]=!0;for(let u=0;u<e.length;u++){let p=e[u],l=p.inputs;for(let d in l){let h=l[d],c=!1;for(let f=0;f<t.length;f++)if(n[h.id]){p.outputs.forEach(m=>n[m.id]=!0),c=!0,a[p.id]=!0;break}if(c)break}}let s={};s[r.id]=!0;let i={};for(let u=e.length-1;u>=0;u--){let p=e[u],l=p.inputs;for(let d=0;d<p.outputs.length;d++)if(s[p.outputs[d].id]){for(let h in l)s[l[h].id]=!0,i[p.id]=!0;break}}let o=[];for(let u=0;u<e.length;u++){let p=e[u];if(a[p.id]&&i[p.id]){let l={};for(let h in p.inputs){let c=p.inputs[h];n[c.id]&&(l[h]=c)}let d=Object.assign({},p);d.inputs=l,d.outputs=p.outputs,o.push(d)}}return o}function DE(e,t,r,n){for(let a=t.length-1;a>=0;a--){let s=t[a],i=[];if(s.outputs.forEach(u=>{let p=e[u.id];p!=null?i.push(p):i.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let u in s.inputs){if(!(u in o))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(o)}.`);let p=r(()=>o[u]());if(p.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${p.dtype}'`);let l=s.inputs[u];if(!Ua(p.shape,l.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${u}' has shape '${p.shape}', which does not match the shape of the input '${l.shape}'`);if(e[l.id]==null)e[l.id]=p;else{let d=e[l.id];e[l.id]=n(d,p),d.dispose()}}}}var uw=20,Cu=3,wf=7;function ME(e,t,r,n){let a=Yo(t),s=OE(e,t,r,a),i=t.length,o=qd(e,t,r,a,s),u=["Tensor"];return n&&(u.push(`  dtype: ${r}`),u.push(`  rank: ${i}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map(p=>"    "+p).join(`
`)),u.join(`
`)}function OE(e,t,r,n){let a=dt(t),s=n[n.length-1],i=new Array(s).fill(0),o=t.length,u=r==="complex64"?Ru(e):e;if(o>1)for(let p=0;p<a/s;p++){let l=p*s;for(let d=0;d<s;d++)i[d]=Math.max(i[d],Fu(u[l+d],0,r).length)}return i}function Fu(e,t,r){let n;return Array.isArray(e)?n=`${parseFloat(e[0].toFixed(wf))} + ${parseFloat(e[1].toFixed(wf))}j`:Sa(e)?n=`'${e}'`:r==="bool"?n=l0(e):n=parseFloat(e.toFixed(wf)).toString(),Vu(n,t)}function l0(e){return e===0?"false":"true"}function qd(e,t,r,n,a,s=!0){let i=r==="complex64"?2:1,o=t[0],u=t.length;if(u===0){if(r==="complex64"){let m=Ru(e);return[Fu(m[0],0,r)]}return r==="bool"?[l0(e[0])]:[e[0].toString()]}if(u===1){if(o>uw){let m=Cu*i,g=Array.from(e.slice(0,m)),y=Array.from(e.slice((o-Cu)*i,o*i));return r==="complex64"&&(g=Ru(g),y=Ru(y)),["["+g.map((b,x)=>Fu(b,a[x],r)).join(", ")+", ..., "+y.map((b,x)=>Fu(b,a[o-Cu+x],r)).join(", ")+"]"]}return["["+(r==="complex64"?Ru(e):Array.from(e)).map((m,g)=>Fu(m,a[g],r)).join(", ")+"]"]}let p=t.slice(1),l=n.slice(1),d=n[0]*i,h=[];if(o>uw){for(let m=0;m<Cu;m++){let g=m*d,y=g+d;h.push(...qd(e.slice(g,y),p,r,l,a,!1))}h.push("...");for(let m=o-Cu;m<o;m++){let g=m*d,y=g+d;h.push(...qd(e.slice(g,y),p,r,l,a,m===o-1))}}else for(let m=0;m<o;m++){let g=m*d,y=g+d;h.push(...qd(e.slice(g,y),p,r,l,a,m===o-1))}let c=u===2?",":"";h[0]="["+(o>0?h[0]+c:"");for(let m=1;m<h.length-1;m++)h[m]=" "+h[m]+c;let f=`,
`;for(let m=2;m<u;m++)f+=`
`;return h[h.length-1]=" "+h[h.length-1]+"]"+(s?"":f),h}function Ru(e){let t=[];for(let r=0;r<e.length;r+=2)t.push([e[r],e[r+1]]);return t}var $t=class{constructor(e,t,r){if(this.dtype=t,this.shape=e.slice(),this.size=dt(e),r!=null){let n=r.length;$(n===this.size,()=>`Length of values '${n}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=r||Hm(t,this.size),this.strides=Yo(e)}set(e,...t){t.length===0&&(t=[0]),$(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let r=this.locToIndex(t);this.values[r]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let n of e){if(n<0||n>=this.shape[t]){let a=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(a)}t++}let r=e[e.length-1];for(let n=0;n<e.length-1;++n)r+=this.strides[n]*e[n];return this.values[r]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let r=0;r<e.length-1;++r)t+=this.strides[r]*e[r];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let r=0;r<t.length-1;++r)t[r]=Math.floor(e/this.strides[r]),e-=t[r]*this.strides[r];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return bn().makeTensor(this.values,this.shape,this.dtype)}},bn=null,ko=null;function zE(e){bn=e}function LE(e){ko=e}var Ue=class{constructor(e,t,r,n){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=dt(e),this.strides=Yo(e),this.dataId=r,this.id=n,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return ko.buffer(this.shape,this.dtype,e)}bufferSync(){return ko.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return No(this.shape,e,this.dtype==="complex64")}arraySync(){return No(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=bn().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(r=>lh(r))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),bn().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=bn().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>lh(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await bn().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(bn().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return ko.print(this,e)}clone(){return this.throwIfDisposed(),ko.clone(this)}toString(e=!1){let t=this.dataSync();return ME(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),ko.cast(this,e)}variable(e=!0,t,r){return this.throwIfDisposed(),bn().makeVariable(this,e,t,r)}};Object.defineProperty(Ue,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});function Y(){return Km("Tensor",()=>Ue)}Y();var Ts=class extends Ue{constructor(e,t,r,n){super(e.shape,e.dtype,e.dataId,n),this.trainable=t,this.name=r}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Ua(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);bn().disposeTensor(this),this.dataId=e.dataId,bn().incRef(this,null)}dispose(){bn().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Ts,Symbol.hasInstance,{value:e=>e instanceof Ue&&e.assign!=null&&e.assign instanceof Function});var kn={};Ee(kn,{assertTypesMatch:()=>d0,getTensorsInContainer:()=>Zm,isTensorInList:()=>BE,makeTypesMatch:()=>kt});var Bf;(function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"})(Bf||(Bf={}));var Wf;(function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"})(Wf||(Wf={}));var Vf;(function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"})(Vf||(Vf={}));var Uf;(function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"})(Uf||(Uf={}));var Gf;(function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"})(Gf||(Gf={}));var PE={float32:Uf,int32:Wf,bool:Vf,complex64:Gf};function en(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return PE[e][t]}function ec(e){return en(e,"int32")}function u0(e){return e!=null&&typeof e=="object"&&"texture"in e&&e.texture instanceof WebGLTexture}function p0(e){return typeof GPUBuffer<"u"&&e!=null&&typeof e=="object"&&"buffer"in e&&e.buffer instanceof GPUBuffer}function kt(e,t){if(e.dtype===t.dtype)return[e,t];let r=en(e.dtype,t.dtype);return[e.cast(r),t.cast(r)]}function d0(e,t){$(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function BE(e,t){return t.some(r=>r.id===e.id)}function Zm(e){let t=[];return h0(e,t,new Set),t}function h0(e,t,r){if(e==null)return;if(e instanceof Ue){t.push(e);return}if(!WE(e))return;let n=e;for(let a in n){let s=n[a];r.has(s)||(r.add(s),h0(s,t,r))}}function WE(e){return Array.isArray(e)||typeof e=="object"}function vf(e){return e.kernelName!=null}var pw=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},Zu=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new pw}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let r=e[t];if(await this.initializeBackend(r).success){await this.setBackend(r);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,r=1){return e in this.registryFactory?(Ia(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:r},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:r}=this.initializeBackend(e);if(!(r?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new $E(this.backendInstance),!0}setupRegisteredKernels(){oh(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){oh(e).forEach(t=>{t.disposeFunc!=null&&t.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let r=t.factory();if(r&&!(r instanceof hp)&&typeof r.then=="function"){let n=++this.pendingBackendInitId,a=r.then(s=>n<this.pendingBackendInitId?!1:(this.registry[e]=s,this.pendingBackendInit=null,!0)).catch(s=>(n<this.pendingBackendInitId||(this.pendingBackendInit=null,Ia(`Initialization of backend ${e} failed`),Ia(s.stack||s.message)),!1));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}else return this.registry[e]=r,{success:!0,asyncInit:!1}}catch(r){return Ia(`Initialization of backend ${e} failed`),Ia(r.stack||r.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let r=e[t],{success:n,asyncInit:a}=this.initializeBackend(r);if(a||n)return{name:r,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let r=this.state.tensorInfo.get(t),n=r.backend,a=this.readSync(t),s=n.refCount(t);n.disposeData(t,!0),r.backend=e,e.move(t,a,r.shape,r.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let r=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}let n;return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,r){e();try{let n=r();return t(),n}catch(n){throw t(),n}}nextTensorId(){return Zu.nextTensorId++}nextVariableId(){return Zu.nextVariableId++}clone(e){let t=O.runKernel(gi,{x:e}),r={x:e},n=s=>({x:()=>{let i="float32",o={x:s},u={dtype:i};return O.runKernel(Ys,o,u)}}),a=[];return this.addTapeNode(this.state.activeScope.name,r,[t],n,a,{}),t}runKernel(e,t,r){if(this.backendName==null&&this.backend,ih(e,this.backendName)==null)throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:r})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,r){let n=this.backend.numDataIds(),a=0;r.forEach(o=>{a+=o.dtype==="complex64"?3:1});let s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=n-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,r=[],n=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let o,u=vf(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(vf(e)){let{kernelName:c,inputs:f,attrs:m}=e;this.backendName==null&&this.backend;let g=ih(c,this.backendName);$(g!=null,()=>`Cannot find registered kernel '${c}' for backend '${this.backendName}'`),i=()=>{let y=this.backend.numDataIds();o=g.kernelFunc({inputs:f,attrs:m,backend:this.backend});let b=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,y,b);let x=b.map(v=>v.rank!=null?v:this.makeTensorFromTensorInfo(v));if(n){let v=this.getTensorsForGradient(c,f,x);r=this.saveTensorsForBackwardMode(v)}return x}}else{let{forwardFunc:c}=e,f=m=>{n&&(r=m.map(g=>this.keep(this.clone(g))))};i=()=>{let m=this.backend.numDataIds();o=this.tidy(()=>c(this.backend,f));let g=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,m,g),g}}let{inputs:p,attrs:l}=e,d=vf(e)?null:e.backwardsFunc,h;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=i():(h=this.profiler.profileKernel(u,p,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(h),t=h.outputs)}),n&&this.addTapeNode(u,p,t,d,r,l),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(p).map(c=>p[c]!=null?p[c].shape:null),outputShapes:t.map(c=>c.shape),kernelTimeMs:h.timeMs,extraInfo:h.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(t=>this.keep(this.clone(t)))}getTensorsForGradient(e,t,r){let n=Lf(e);if(n!=null){let a=n.inputsToSave||[],s=n.outputsToSave||[],i;n.saveAllInputs?($(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(u=>t[u])):i=a.map(u=>t[u]);let o=r.filter((u,p)=>s[p]);return i.concat(o)}return[]}makeTensor(e,t,r,n){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");r=r||"float32",n=n||this.backend;let a=e;r==="string"&&Sa(e[0])&&(a=e.map(o=>Dp(o)));let s=n.write(a,t,r),i=new Ue(t,r,s,this.nextTensorId());if(this.trackTensor(i,n),r==="string"){let o=this.state.tensorInfo.get(s),u=Zv(a);this.state.numBytes+=u-o.bytes,o.bytes=u}return i}makeTensorFromDataId(e,t,r,n){r=r||"float32";let a={dataId:e,shape:t,dtype:r};return this.makeTensorFromTensorInfo(a,n)}makeTensorFromTensorInfo(e,t){let{dataId:r,shape:n,dtype:a}=e,s=new Ue(n,a,r,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e,t=!0,r,n){r=r||this.nextVariableId().toString(),n!=null&&n!==e.dtype&&(e=e.cast(n));let a=new Ts(e,t,r,this.nextTensorId());if(this.state.registeredVariables[a.name]!=null)throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let r=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(r=e.size*nh(e.dtype)),this.state.numBytes+=r,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:r})),e instanceof Ts||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let r=e.size*nh(e.dtype);this.state.numBytes-=r}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,r=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(n=>n.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-r;for(let n of this.state.activeProfile.kernels)n.kernelTimeMs=await n.kernelTimeMs,n.extraInfo=await n.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,r,n,a,s){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:r,saved:a},o=Lf(e);o!=null&&(n=o.gradFunc),n!=null&&(i.gradient=u=>(u=u.map((p,l)=>{if(p==null){let d=r[l],h=Oh(d.size,d.dtype);return this.makeTensor(h,d.shape,d.dtype)}return p}),n(u.length>1?u:u[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=Zm(e),r=new Set(t.map(a=>a.id));for(let a=0;a<this.state.activeScope.track.length;a++){let s=this.state.activeScope.track[a];!s.kept&&!r.has(s.id)&&s.dispose()}let n=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(a=>{!a.kept&&a.scopeId===n.id&&this.track(a)})}gradients(e,t,r,n=!1){if($(t.length>0,()=>"gradients() received an empty list of xs."),r!=null&&r.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);let a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));$(a instanceof Ue,()=>"The result y returned by f() must be a tensor.");let s=RE(this.state.activeTape,t,a);if(!n&&s.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let i={};i[a.id]=r==null?VE(a.shape):r,DE(i,s,u=>this.tidy(u),UE);let o=t.map(u=>i[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(let p of u.saved)p.dispose()}),this.state.activeTape=null),{value:a,grads:o}})}customGrad(e){return $(Aa(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{$(t.every(i=>i instanceof Ue),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let r,n={};t.forEach((i,o)=>{n[o]=i});let a=(i,o)=>(r=e(...t,o),$(r.value instanceof Ue,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),$(Aa(r.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),r.value),s=(i,o)=>{let u=r.gradFunc(i,o),p=Array.isArray(u)?u:[u];$(p.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),$(p.every(d=>d instanceof Ue),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let l={};return p.forEach((d,h)=>{l[h]=()=>d}),l};return this.runKernelFunc({forwardFunc:a,backwardsFunc:s,inputs:n})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=Xu(),r=await this.backend.time(e);return r.wallMs=Xu()-t,r}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new pw;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};Zu.nextTensorId=0;Zu.nextVariableId=0;function VE(e){let t=jm(dt(e),"float32");return O.makeTensor(t,e,"float32")}function c0(){let e=t0();if(e._tfengine==null){let t=new e0(e);e._tfengine=new Zu(t)}return hE(e._tfengine.ENV),zE(()=>e._tfengine),e._tfengine}var O=c0();function UE(e,t){let r={a:e,b:t};return O.runKernel(Ga,r)}var Mp={};Ee(Mp,{isBrowser:()=>f0,isMobile:()=>jE,mockIsMobile:()=>HE});function GE(){return typeof navigator<"u"&&navigator!=null}var Hf;function HE(e){Hf=e}function jE(e){if(Hf!==void 0)return Hf;if(e||GE()){if(e||(e=navigator),e.product==="ReactNative")return!0;let t=e.userAgent||e.vendor||(typeof window<"u"?window.opera:"");if(!t){let r=e;return r.userAgentData&&r.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function f0(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var Cr=H();Cr.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Cr.registerFlag("IS_BROWSER",()=>f0());Cr.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Cr.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Cr.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));Cr.registerFlag("PROD",()=>!1);Cr.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Cr.getBool("DEBUG"));Cr.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Cr.registerFlag("IS_TEST",()=>!1);Cr.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>Cr.getBool("DEBUG"));Cr.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Cr.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Cr.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);function Wn(e,t){let r=e;if(Yt(e))return t==="string"?[]:[e.length];if(u0(e)){let a=e.channels||"RGBA";return[e.height,e.width*a.length]}else if(p0(e))return[e.buffer.size/(t==null?4:nh(t))];if(!Array.isArray(e))return[];let n=[];for(;Array.isArray(r)||Yt(r)&&t!=="string";)n.push(r.length),r=r[0];return Array.isArray(e)&&H().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&m0(e,n,[]),n}function m0(e,t,r){if(r=r||[],!Array.isArray(e)&&!Yt(e)){$(t.length===0,()=>`Element arr[${r.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}$(t.length>0,()=>`Element arr[${r.join("][")}] should be a primitive, but is an array of ${e.length} elements`),$(e.length===t[0],()=>`Element arr[${r.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let n=t.slice(1);for(let a=0;a<e.length;++a)m0(e[a],n,r.concat(a))}function dw(e,t,r,n){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${r}' passed to '${n}' must be ${e} tensor, but got ${t} tensor`)}}function C(e,t,r,n="numeric"){if(e instanceof Ue)return dw(n,e.dtype,t,r),e;let a=cp(e);if(a!=="string"&&["bool","int32","float32"].indexOf(n)>=0&&(a=n),dw(n,a,t,r),e==null||!Yt(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){let o=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${r}' must be a Tensor or TensorLike, but got '${o}'`)}let s=Wn(e,a);!Yt(e)&&!Array.isArray(e)&&(e=[e]);let i=a!=="string"?Qh(e,a):Fa(e,[],!0);return O.makeTensor(i,s,a)}function Ju(e,t,r,n="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${r} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((a,s)=>C(a,`${t}[${s}]`,r,n))}var Jm="__op";function z(e){let t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let r=t[0],n=e[r];r.endsWith("_")&&(r=r.substring(0,r.length-1)),r=r+Jm;let a=(...s)=>{O.startScope(r);try{let i=n(...s);return zh(i)&&console.error("Cannot return a Promise inside of tidy."),O.endScope(i),i}catch(i){throw O.endScope(null),i}};return Object.defineProperty(a,"name",{value:r,configurable:!0}),a}function qE(e,t){let r=C(e,"real","complex"),n=C(t,"imag","complex");gr(r.shape,n.shape,`real and imag shapes, ${r.shape} and ${n.shape}, must match in call to tf.complex().`);let a={real:r,imag:n};return O.runKernel(Ph,a)}var ia=z({complex_:qE});function Ka(e,t,r,n){if(n==null)n=cp(e);else if(n==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(p0(e)||u0(e)){if(n!=="float32"&&n!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${n}.`);return O.backend.createTensorFromGPUData(e,t||r,n)}if(!Yt(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){Hr(t);let a=dt(t),s=dt(r);$(a===s,()=>`Based on the provided shape, [${t}], the tensor should have ${a} values but has ${s}`);for(let i=0;i<r.length;++i){let o=r[i],u=i===r.length-1?o!==dt(t.slice(i)):!0;$(r[i]===t[i]||!u,()=>`Error creating a new Tensor. Inferred shape (${r}) does not match the provided shape (${t}). `)}}return!Yt(e)&&!Array.isArray(e)&&(e=[e]),t=t||r,e=n!=="string"?Qh(e,n):Fa(e,[],!0),O.makeTensor(e,t,n)}function hr(e,t,r){let n=Wn(e,r);return Ka(e,t,n,r)}var jf={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},uh=4;async function KE(e,t){let r=[],n=[],a=Array.isArray(e)?e.map(i=>i.name):Object.keys(e);for(let i=0;i<a.length;++i){let o=a[i],u=Array.isArray(e)?e[i].tensor:e[o];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${o}': ${u.dtype}`);let p={name:o,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){let l=new Promise(async d=>{let h=await u.bytes(),c=h.reduce((g,y)=>g+y.length,0)+uh*h.length,f=new Uint8Array(c),m=0;for(let g=0;g<h.length;g++){let y=h[g],b=new Uint8Array(new Uint32Array([y.length]).buffer);f.set(b,m),m+=uh,f.set(y,m),m+=y.length}d(f)});n.push(l)}else n.push(u.data());t!=null&&(p.group=t),r.push(p)}let s=await Promise.all(n);return{data:XE(s),specs:r}}function g0(e,t){let r={},n,a=0;for(let s of t){let i=s.name,o=s.dtype,u=s.shape,p=dt(u),l;if("quantization"in s){let d=s.quantization;if(d.dtype==="uint8"||d.dtype==="uint16"){if(!("min"in d&&"scale"in d))throw new Error(`Weight ${s.name} with quantization ${d.dtype} doesn't have corresponding metadata min and scale.`)}else if(d.dtype==="float16"){if(o!=="float32")throw new Error(`Weight ${s.name} is quantized with ${d.dtype} which only supports weights of type float32 not ${o}.`)}else throw new Error(`Weight ${s.name} has unknown quantization dtype ${d.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let h=jf[d.dtype],c=e.slice(a,a+p*h),f=d.dtype==="uint8"?new Uint8Array(c):new Uint16Array(c);if(o==="float32")if(d.dtype==="uint8"||d.dtype==="uint16"){l=new Float32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];l[m]=g*d.scale+d.min}}else if(d.dtype==="float16")n===void 0&&(n=t$()),l=n(f);else throw new Error(`Unsupported quantization type ${d.dtype} for weight type float32.`);else if(o==="int32"){if(d.dtype!=="uint8"&&d.dtype!=="uint16")throw new Error(`Unsupported quantization type ${d.dtype} for weight type int32.`);l=new Int32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];l[m]=Math.round(g*d.scale+d.min)}}else throw new Error(`Unsupported dtype in weight '${i}': ${o}`);a+=p*h}else if(o==="string"){let d=dt(s.shape);l=[];for(let h=0;h<d;h++){let c=new Uint32Array(e.slice(a,a+uh))[0];a+=uh;let f=new Uint8Array(e.slice(a,a+c));l.push(f),a+=c}}else{let d=jf[o],h=e.slice(a,a+p*d);if(o==="float32")l=new Float32Array(h);else if(o==="int32")l=new Int32Array(h);else if(o==="bool")l=new Uint8Array(h);else if(o==="complex64"){l=new Float32Array(h);let c=new Float32Array(l.length/2),f=new Float32Array(l.length/2);for(let y=0;y<c.length;y++)c[y]=l[y*2],f[y]=l[y*2+1];let m=hr(c,u,"float32"),g=hr(f,u,"float32");r[i]=ia(m,g),m.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${i}': ${o}`);a+=p*d}o!=="complex64"&&(r[i]=hr(l,u,o))}return r}function XE(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,r=[];e.forEach(s=>{if(t+=s.byteLength,r.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let n=new Uint8Array(t),a=0;return r.forEach(s=>{n.set(new Uint8Array(s.buffer),a),a+=s.byteLength}),n.buffer}var Ym=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function hw(e){return Ym?Buffer.byteLength(e):new Blob([e]).size}function ZE(e){if(Ym)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),r="";for(let n=0,a=t.length;n<a;n++)r+=String.fromCharCode(t[n]);return btoa(r)}function JE(e){if(Ym){let n=Buffer.from(e,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}let t=atob(e),r=new Uint8Array(t.length);for(let n=0;n<t.length;++n)r.set([t.charCodeAt(n)],n);return r.buffer}function Qm(e){if(e.length===1)return e[0];let t=0;e.forEach(a=>{t+=a.byteLength});let r=new Uint8Array(t),n=0;return e.forEach(a=>{r.set(new Uint8Array(a),n),n+=a.byteLength}),r.buffer}function cw(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let r=e.split(t);return r[r.length-1]}function y0(e,t){let r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return e.signature!=null&&(r.signature=e.signature),e.userDefinedMetadata!=null&&(r.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(r.modelInitializer=e.modelInitializer),e.initializerSignature!=null&&(r.initializerSignature=e.initializerSignature),e.trainingConfig!=null&&(r.trainingConfig=e.trainingConfig),r}function b0(e,t,r){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),e.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!r)throw new Error("modelJSON has weightsManifest but weightData is null");n.weightSpecs=t,n.weightData=r}return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),e.initializerSignature!=null&&(n.initializerSignature=e.initializerSignature),n}async function eg(e,t){let r,n;return e.weightsManifest!=null&&([r,n]=await t(e.weightsManifest)),b0(e,r,n)}function Op(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:hw(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:hw(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:e.weightData.byteLength}}function x0(e){let t=[];for(let r of e)t.push(...r.weights);return t}function YE(){let e=r=>{let n=r<<13,a=0;for(;!(n&8388608);)a-=8388608,n<<=1;return n&=-8388609,a+=947912704,n|a},t=new Uint32Array(2048);t[0]=0;for(let r=1;r<1024;r++)t[r]=e(r);for(let r=1024;r<2048;r++)t[r]=939524096+(r-1024<<13);return t}function QE(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function e$(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function t$(){let e=YE(),t=QE(),r=e$();return n=>{let a=new ArrayBuffer(4*n.length),s=new Uint32Array(a);for(let i=0;i<n.length;i++){let o=n[i],u=e[r[o>>10]+(o&1023)]+t[o>>10];s[i]=u}return new Float32Array(a)}}var St=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return St.instance==null&&(St.instance=new St),St.instance}static registerSaveRouter(e){St.getInstance().saveRouters.push(e)}static registerLoadRouter(e){St.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return St.getHandlers(e,"save")}static getLoadHandlers(e,t){return St.getHandlers(e,"load",t)}static getHandlers(e,t,r){let n=[];return(t==="load"?St.getInstance().loadRouters:St.getInstance().saveRouters).forEach(a=>{let s=a(e,r);s!==null&&n.push(s)}),n}},r$=e=>St.registerSaveRouter(e),n$=e=>St.registerLoadRouter(e),a$=e=>St.getSaveHandlers(e),s$=(e,t)=>St.getLoadHandlers(e,t),qf="tensorflowjs",Kf=1,ms="models_store",Na="model_info_store";function w0(){if(!H().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window>"u"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Xf(e){let t=e.result;t.createObjectStore(ms,{keyPath:"modelPath"}),t.createObjectStore(Na,{keyPath:"modelPath"})}var Cs=class{constructor(e){if(this.indexedDB=w0(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((r,n)=>{let a=this.indexedDB.open(qf,Kf);a.onupgradeneeded=()=>Xf(a),a.onsuccess=()=>{let s=a.result;if(t==null){let i=s.transaction(ms,"readonly"),o=i.objectStore(ms).get(this.modelPath);o.onsuccess=()=>{if(o.result==null)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));r(o.result.modelArtifacts)},o.onerror=u=>(s.close(),n(o.error)),i.oncomplete=()=>s.close()}else{let i=Op(t),o=s.transaction(Na,"readwrite"),u=o.objectStore(Na),p;try{p=u.put({modelPath:this.modelPath,modelArtifactsInfo:i})}catch(d){return n(d)}let l;p.onsuccess=()=>{l=s.transaction(ms,"readwrite");let d=l.objectStore(ms),h;try{h=d.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i})}catch(c){return n(c)}h.onsuccess=()=>r({modelArtifactsInfo:i}),h.onerror=c=>{u=o.objectStore(Na);let f=u.delete(this.modelPath);f.onsuccess=()=>(s.close(),n(h.error)),f.onerror=m=>(s.close(),n(h.error))}},p.onerror=d=>(s.close(),n(p.error)),o.oncomplete=()=>{l==null?s.close():l.oncomplete=()=>s.close()}}},a.onerror=s=>n(a.error)})}};Cs.URL_SCHEME="indexeddb://";var v0=e=>H().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Cs.URL_SCHEME)?i$(e.slice(Cs.URL_SCHEME.length)):null;St.registerSaveRouter(v0);St.registerLoadRouter(v0);function i$(e){return new Cs(e)}function o$(e){return e.startsWith(Cs.URL_SCHEME)?e.slice(Cs.URL_SCHEME.length):e}var l$=class{constructor(){this.indexedDB=w0()}async listModels(){return new Promise((e,t)=>{let r=this.indexedDB.open(qf,Kf);r.onupgradeneeded=()=>Xf(r),r.onsuccess=()=>{let n=r.result,a=n.transaction(Na,"readonly"),s=a.objectStore(Na).getAll();s.onsuccess=()=>{let i={};for(let o of s.result)i[o.modelPath]=o.modelArtifactsInfo;e(i)},s.onerror=i=>(n.close(),t(s.error)),a.oncomplete=()=>n.close()},r.onerror=n=>t(r.error)})}async removeModel(e){return e=o$(e),new Promise((t,r)=>{let n=this.indexedDB.open(qf,Kf);n.onupgradeneeded=()=>Xf(n),n.onsuccess=()=>{let a=n.result,s=a.transaction(Na,"readwrite"),i=s.objectStore(Na),o=i.get(e),u;o.onsuccess=()=>{if(o.result==null)return a.close(),r(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let p=i.delete(e),l=()=>{u=a.transaction(ms,"readwrite");let d=u.objectStore(ms).delete(e);d.onsuccess=()=>t(o.result.modelArtifactsInfo),d.onerror=h=>r(o.error)};p.onsuccess=l,p.onerror=d=>(l(),a.close(),r(o.error))}},o.onerror=p=>(a.close(),r(o.error)),s.oncomplete=()=>{u==null?a.close():u.oncomplete=()=>a.close()}},n.onerror=a=>r(n.error)})}},na="/",Io="tensorflowjs_models",k0="info",u$="model_topology",p$="weight_specs",d$="weight_data",h$="model_metadata";function I0(e){return{info:[Io,e,k0].join(na),topology:[Io,e,u$].join(na),weightSpecs:[Io,e,p$].join(na),weightData:[Io,e,d$].join(na),modelMetadata:[Io,e,h$].join(na)}}function S0(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function c$(e){let t=e.split(na);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(na)}function f$(e){return e.startsWith(_s.URL_SCHEME)?e.slice(_s.URL_SCHEME.length):e}var _s=class{constructor(e){if(!H().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=I0(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),n=Op(e);try{this.LS.setItem(this.keys.info,JSON.stringify(n)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,ZE(e.weightData));let a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:n}}catch{throw S0(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${n.modelTopologyBytes}, weightSpecsBytes=${n.weightSpecsBytes}, weightDataBytes=${n.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},r=JSON.parse(this.LS.getItem(this.keys.topology));if(r==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=r;let n=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(n==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=n;let a=this.LS.getItem(this.keys.modelMetadata);if(a!=null){let i=JSON.parse(a);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer),i.initializerSignature!=null&&(t.initializerSignature=i.initializerSignature),i.trainingConfig!=null&&(t.trainingConfig=i.trainingConfig)}let s=this.LS.getItem(this.keys.weightData);if(s==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=JE(s),t}};_s.URL_SCHEME="localstorage://";var N0=e=>H().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(_s.URL_SCHEME)?m$(e.slice(_s.URL_SCHEME.length)):null;St.registerSaveRouter(N0);St.registerLoadRouter(N0);function m$(e){return new _s(e)}var g$=class{constructor(){$(H().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),$(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=Io+na,r=na+k0;for(let n=0;n<this.LS.length;++n){let a=this.LS.key(n);if(a.startsWith(t)&&a.endsWith(r)){let s=c$(a);e[s]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){e=f$(e);let t=I0(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let r=JSON.parse(this.LS.getItem(t.info));return S0(t),r}},To="://",Ir=class{constructor(){this.managers={}}static getInstance(){return Ir.instance==null&&(Ir.instance=new Ir),Ir.instance}static registerManager(e,t){$(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(To)&&(e=e.slice(0,e.indexOf(To))),$(e.length>0,()=>"scheme must not be an empty string.");let r=Ir.getInstance();$(r.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),r.managers[e]=t}static getManager(e){let t=Ir.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Ir.getInstance().managers)}};function Kd(e){if(e.indexOf(To)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Ir.getSchemes().join(",")}`);return{scheme:e.split(To)[0],path:e.split(To)[1]}}async function T0(e,t,r=!1){$(e!==t,()=>`Old path and new path are the same: '${e}'`);let n=St.getLoadHandlers(e);$(n.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),$(n.length<2,()=>`Copying failed because more than one (${n.length}) load handlers for source URL ${e}.`);let a=n[0],s=St.getSaveHandlers(t);$(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),$(s.length<2,()=>`Copying failed because more than one (${n.length}) save handlers for destination URL ${t}.`);let i=s[0],o=Kd(e).scheme,u=Kd(e).path,p=o===Kd(e).scheme,l=await a.load();r&&p&&await Ir.getManager(o).removeModel(u);let d=await i.save(l);return r&&!p&&await Ir.getManager(o).removeModel(u),d.modelArtifactsInfo}async function y$(){let e=Ir.getSchemes(),t={};for(let r of e){let n=await Ir.getManager(r).listModels();for(let a in n){let s=r+To+a;t[s]=n[a]}}return t}async function b$(e){let t=Kd(e);return Ir.getManager(t.scheme).removeModel(t.path)}async function x$(e,t){return T0(e,t,!1)}async function w$(e,t){return T0(e,t,!0)}var v$=class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!H().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",r=>{if(r.source===window&&r.data.name===this.messageName){r.stopPropagation();let n=this.functionRefs[r.data.index];n(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}};if(H().get("IS_BROWSER")){H().setPlatform("browser",new v$);try{Ir.registerManager(_s.URL_SCHEME,new g$)}catch{}try{Ir.registerManager(Cs.URL_SCHEME,new l$)}catch{}}var k$={importFetch:()=>A_()},kf,I$=class{constructor(){this.util=F_(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return H().global.fetch!=null?H().global.fetch(e,t):(kf==null&&(kf=k$.importFetch()),kf(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}};H().get("IS_NODE")&&!H().get("IS_BROWSER")&&H().setPlatform("node",new I$);function ze(e,t="float32",r){return t=t||"float32",Hr(e),new $t(e,t,r)}function S$(e,t){let r=C(e,"x","cast");if(!Xv(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&r.dtype!=="string"||t!=="string"&&r.dtype==="string")throw new Error("Only strings can be casted to strings");let n={x:r},a={dtype:t};return O.runKernel(Ys,n,a)}var se=z({cast_:S$});function N$(e){let t={x:C(e,"x","clone","string_or_numeric")};return O.runKernel(gi,t)}var Ln=z({clone_:N$});function tg(e,t=!1){console.log(e.toString(t))}c0();var T$={buffer:ze,cast:se,clone:Ln,print:tg};LE(T$);function C$(){H().set("PROD",!0)}function _$(){H().set("DEBUG",!0)}function E$(){H().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function C0(e){H().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function $$(){O.disposeVariables()}function pn(){return O}function Zf(){return O.memory()}function A$(e){return O.profile(e)}function W(e,t){return O.tidy(e,t)}function _e(e){Zm(e).forEach(t=>t.dispose())}function Dt(e){return O.keep(e)}function F$(e){return O.time(e)}function R$(e){return O.setBackend(e)}function D$(){return O.ready()}function M$(){return O.backendName}function O$(e){O.removeBackend(e)}function z$(e){return O.findBackend(e)}function L$(e){return O.findBackendFactory(e)}function tc(e,t,r=1){return O.registerBackend(e,t,r)}function _0(){return O.backend}function P$(e,t){H().setPlatform(e,t)}function B$(e,t){let r=C(e,"a","add"),n=C(t,"b","add");[r,n]=kt(r,n);let a={a:r,b:n};return O.runKernel(Ga,a)}var J=z({add_:B$});function W$(e,t){let r=C(e,"a","floorDiv"),n=C(t,"b","floorDiv");[r,n]=kt(r,n);let a={a:r,b:n};return O.runKernel(ci,a)}var rc=z({floorDiv_:W$});function V$(e,t){let r=C(e,"a","div"),n=C(t,"b","div");if([r,n]=kt(r,n),r.dtype==="int32"&&n.dtype==="int32")return rc(r,n);let a={a:r,b:n},s={};return O.runKernel(li,a,s)}var me=z({div_:V$});function U$(e,t){let r=C(e,"a","mul"),n=C(t,"b","mul");[r,n]=kt(r,n);let a={a:r,b:n};return O.runKernel(Ai,a)}var L=z({mul_:U$});function G$(e){let t=C(e,"x","abs");if(t.dtype==="complex64"){let r={x:t};return O.runKernel(gp,r)}else{let r={x:t};return O.runKernel(Qo,r)}}var _t=z({abs_:G$});function H$(e){let t={x:C(e,"x","acos")};return O.runKernel(Vs,t)}var rg=z({acos_:H$});function j$(e){let t={x:C(e,"x","acosh")};return O.runKernel(Us,t)}var ng=z({acosh_:j$});function q$(e){$(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),$(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((a,s)=>C(a,`tensors${s}`,"addN")),r=t[0];t.forEach(a=>{if(a.dtype!==r.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(a=>{if(!Ua(a.shape,r.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let n=t;return O.runKernel(Gs,n)}var E0=z({addN_:q$});function K$(e,t=null,r=!1){let n={x:C(e,"x","all","bool")},a={axis:t,keepDims:r};return O.runKernel(el,n,a)}var nc=z({all_:K$});function X$(e,t=null,r=!1){let n={x:C(e,"x","any","bool")},a={axis:t,keepDims:r};return O.runKernel(tl,n,a)}var Yu=z({any_:X$});function Z$(e,t=0){let r={x:C(e,"x","argMax")},n={axis:t};return O.runKernel(rl,r,n)}var Es=z({argMax_:Z$});function J$(e,t=0){let r={x:C(e,"x","argMin")},n={axis:t};return O.runKernel(nl,r,n)}var ag=z({argMin_:J$});function Y$(e){let t={x:C(e,"x","asin")};return O.runKernel(Hs,t)}var sg=z({asin_:Y$});function Q$(e){let t={x:C(e,"x","asinh")};return O.runKernel(js,t)}var ig=z({asinh_:Q$});function eA(e){let t={x:C(e,"x","atan")};return O.runKernel(qs,t)}var og=z({atan_:eA});function tA(e,t){let r=C(e,"a","atan2"),n=C(t,"b","atan2");[r,n]=kt(r,n);let a={a:r,b:n};return O.runKernel(Xs,a)}var lg=z({atan2_:tA});function rA(e){let t={x:C(e,"x","atanh")};return O.runKernel(Ks,t)}var ug=z({atanh_:rA});function nA(e,t,r,n,a="NHWC",s){let i=e[3],o=[...t,i],u=F0(a);return zp(e,o,r,s,n,null,null,u)}function $0(e,t,r,n,a,s,i="channelsLast"){let[o,u]=Qu(t),p;if(i==="channelsLast")p=[o,u,e[3],e[3]];else if(i==="channelsFirst")p=[o,u,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return zp(e,p,r,n,a,s,!1,i)}function aA(e,t,r,n,a,s,i="NDHWC"){let[o,u,p]=Jf(t),l,d;if(i==="NDHWC")d="channelsLast",l=[o,u,p,e[4],e[4]];else if(i==="NCDHW")d="channelsFirst",l=[o,u,p,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return A0(e,l,r,n,a,!1,d,s)}function zp(e,t,r,n,a,s,i=!1,o="channelsLast"){let[u,p,l,d]=[-1,-1,-1,-1];if(o==="channelsLast")[u,p,l,d]=e;else if(o==="channelsFirst")[u,d,p,l]=e;else throw new Error(`Unknown dataFormat ${o}`);let[h,c,,f]=t,[m,g]=Qu(r),[y,b]=Qu(n),x=Co(h,y),v=Co(c,b),{padInfo:I,outHeight:T,outWidth:_}=oA(a,p,l,m,g,x,v,s,o),E=i?f*d:f,A;return o==="channelsFirst"?A=[u,E,T,_]:o==="channelsLast"&&(A=[u,T,_,E]),{batchSize:u,dataFormat:o,inHeight:p,inWidth:l,inChannels:d,outHeight:T,outWidth:_,outChannels:E,padInfo:I,strideHeight:m,strideWidth:g,filterHeight:h,filterWidth:c,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:e,outShape:A,filterShape:t}}function A0(e,t,r,n,a,s=!1,i="channelsLast",o){let[u,p,l,d,h]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[u,p,l,d,h]=e;else if(i==="channelsFirst")[u,h,p,l,d]=e;else throw new Error(`Unknown dataFormat ${i}`);let[c,f,m,,g]=t,[y,b,x]=Jf(r),[v,I,T]=Jf(n),_=Co(c,v),E=Co(f,I),A=Co(m,T),{padInfo:R,outDepth:F,outHeight:S,outWidth:M}=lA(a,p,l,d,y,b,x,_,E,A,o),B=s?g*h:g,U;return i==="channelsFirst"?U=[u,B,F,S,M]:i==="channelsLast"&&(U=[u,F,S,M,B]),{batchSize:u,dataFormat:i,inDepth:p,inHeight:l,inWidth:d,inChannels:h,outDepth:F,outHeight:S,outWidth:M,outChannels:B,padInfo:R,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:c,filterHeight:f,filterWidth:m,effectiveFilterDepth:_,effectiveFilterHeight:E,effectiveFilterWidth:A,dilationDepth:v,dilationHeight:I,dilationWidth:T,inShape:e,outShape:U,filterShape:t}}function sA(e,t,r,n,a){n==null&&(n=pg(e,t,r));let s=e[0],i=e[1],o=ep((s-t+2*n)/r+1,a),u=ep((i-t+2*n)/r+1,a);return[o,u]}function iA(e,t,r,n,a,s){a==null&&(a=pg(e,t[0],n[0]));let i=[0,0,0,r];for(let o=0;o<3;o++)e[o]+2*a>=t[o]&&(i[o]=ep((e[o]-t[o]+2*a)/n[o]+1,s));return i}function pg(e,t,r,n=1){let a=Co(t,n);return Math.floor((e[0]*(r-1)-r+a)/2)}function Qu(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function Jf(e){return typeof e=="number"?[e,e,e]:e}function Co(e,t){return t<=1?e:e+(e-1)*(t-1)}function oA(e,t,r,n,a,s,i,o,u){let p,l,d;if(typeof e=="number"){p={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};let h=sA([t,r],s,n,e,o);l=h[0],d=h[1]}else if(e==="same"){l=Math.ceil(t/n),d=Math.ceil(r/a);let h=Math.max(0,(l-1)*n+s-t),c=Math.max(0,(d-1)*a+i-r),f=Math.floor(h/2),m=h-f,g=Math.floor(c/2),y=c-g;p={top:f,bottom:m,left:g,right:y,type:"SAME"}}else if(e==="valid")p={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((t-s+1)/n),d=Math.ceil((r-i+1)/a);else if(typeof e=="object"){let h=u==="channelsLast"?e[1][0]:e[2][0],c=u==="channelsLast"?e[1][1]:e[2][1],f=u==="channelsLast"?e[2][0]:e[3][0],m=u==="channelsLast"?e[2][1]:e[3][1];p={top:h,bottom:c,left:f,right:m,type:h===0&&c===0&&f===0&&m===0?"VALID":"EXPLICIT"},l=ep((t-s+h+c)/n+1,o),d=ep((r-i+f+m)/a+1,o)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:p,outHeight:l,outWidth:d}}function lA(e,t,r,n,a,s,i,o,u,p,l){let d,h,c,f;if(e==="valid"&&(e=0),typeof e=="number"){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};let m=iA([t,r,n,1],[o,u,p],1,[a,s,i],e,l);h=m[0],c=m[1],f=m[2]}else if(e==="same"){h=Math.ceil(t/a),c=Math.ceil(r/s),f=Math.ceil(n/i);let m=(h-1)*a+o-t,g=(c-1)*s+u-r,y=(f-1)*i+p-n,b=Math.floor(m/2),x=m-b,v=Math.floor(g/2),I=g-v,T=Math.floor(y/2),_=y-T;d={top:v,bottom:I,left:T,right:_,front:b,back:x,type:"SAME"}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:d,outDepth:h,outHeight:c,outWidth:f}}function ep(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Ra(e){let[t,r,n]=Qu(e);return t===1&&r===1&&n===1}function Gn(e,t){return Ra(e)||Ra(t)}function $s(e){return Qu(e).every(t=>t>0)}function F0(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function yr(e,t,r){if(r!=null){if(typeof t=="string")throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${r} but got pad ${t}.`);if(typeof t=="number")$(Eo(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${r} but got pad ${t}.`);else if(typeof t=="object")t.forEach(n=>{n.forEach(a=>{$(Eo(a),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${r} but got pad ${a}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}function uA(e,t){let r={x:C(e,"x","reshape","string_or_numeric")},n={shape:t};return O.runKernel(Ll,r,n)}var P=z({reshape_:uA});function pA(e,t,r,n,a){let s=C(e,"x","avgPool","float32"),i=1;$(Gn(r,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`);let o=s,u=!1;s.rank===3&&(u=!0,o=P(s,[1,s.shape[0],s.shape[1],s.shape[2]])),$(o.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),yr("avgPool",n,a);let p={x:o},l={filterSize:t,strides:r,pad:n,dimRoundingMode:a},d=O.runKernel(Zs,p,l);return d=se(d,s.dtype),u?P(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var pa=z({avgPool_:pA});function dA(e,t,r,n,a,s="NDHWC"){let i=C(e,"x","avgPool3d","float32"),o=i,u=!1;i.rank===4&&(u=!0,o=P(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(o.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),$(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),$(typeof r=="number"&&r>0||Array.isArray(r)&&r[0]>0&&r[1]>0&&r[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${r}'`),yr("avgPool3d",n,a);let p={x:o},l={filterSize:t,strides:r,pad:n,dimRoundingMode:a,dataFormat:s},d=O.runKernel(al,p,l);return d=se(d,o.dtype),u?P(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var dg=z({avgPool3d_:dA});function hA(e,t=0){$(e.length>=1,()=>"Pass at least one tensor to concat");let r=Ju(e,"tensors","concat","string_or_numeric");if(r[0].dtype==="complex64"&&r.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),r.length===1)return Ln(r[0]);let n=r,a={axis:t};return O.runKernel(ol,n,a)}var at=z({concat_:hA});function cA(e,t,r=!1,n=!1){let a=C(e,"a","matMul"),s=C(t,"b","matMul");[a,s]=kt(a,s);let i={a,b:s},o={transposeA:r,transposeB:n};return O.runKernel(Js,i,o)}var Me=z({matMul_:cA});function fA(e){let t={x:C(e,"x","sigmoid","float32")};return O.runKernel(Ki,t)}var hn=z({sigmoid_:fA});function mA(e,t,r){let n=C(e,"x","slice","string_or_numeric");if(n.rank===0)throw new Error("Slicing scalar is not possible");let a={x:n},s={begin:t,size:r};return O.runKernel(Hl,a,s)}var Ve=z({slice_:mA});function gA(e){let t={x:C(e,"x","tanh","float32")};return O.runKernel(ro,t)}var As=z({tanh_:gA});function yA(e,t,r,n,a,s){let i=C(e,"forgetBias","basicLSTMCell"),o=C(t,"lstmKernel","basicLSTMCell"),u=C(r,"lstmBias","basicLSTMCell"),p=C(n,"data","basicLSTMCell"),l=C(a,"c","basicLSTMCell"),d=C(s,"h","basicLSTMCell"),h=at([p,d],1),c=Me(h,o),f=J(c,u),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=Ve(f,[0,0],y),x=Ve(f,[0,g],y),v=Ve(f,[0,g*2],y),I=Ve(f,[0,g*3],y),T=J(L(hn(b),As(x)),L(l,hn(J(i,v)))),_=L(As(T),hn(I));return[T,_]}var R0=z({basicLSTMCell_:yA});function bA(e,t,r){let n=C(e,"x","batchToSpaceND"),a=t.reduce((o,u)=>o*u);$(n.rank>=1+t.length,()=>`input rank is ${n.rank} but should be > than blockShape.length ${t.length}`),$(r.length===t.length,()=>`crops.length is ${r.length} but should be equal to blockShape.length  ${t.length}`),$(n.shape[0]%a===0,()=>`input tensor batch is ${n.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`);let s={x:n},i={blockShape:t,crops:r};return O.runKernel(sl,s,i)}var Lp=z({batchToSpaceND_:bA});function xA(e){let t;return e.rank===0||e.rank===1?t=P(e,[1,1,1,e.size]):e.rank===2?t=P(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=P(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}function wA(e,t,r,n,a,s){s==null&&(s=.001);let i=C(e,"x","batchNorm"),o=C(t,"mean","batchNorm"),u=C(r,"variance","batchNorm"),p;a!=null&&(p=C(a,"scale","batchNorm"));let l;n!=null&&(l=C(n,"offset","batchNorm")),$(o.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),$(l==null||o.rank===l.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),$(p==null||o.rank===p.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let d={x:xA(i),scale:p,offset:l,mean:o,variance:u},h={varianceEpsilon:s},c=O.runKernel(fi,d,h);return P(c,i.shape)}var no=z({batchNorm_:wA});function vA(e,t,r,n,a,s){let i=C(e,"x","batchNorm"),o=C(t,"mean","batchNorm"),u=C(r,"variance","batchNorm"),p;a!=null&&(p=C(a,"scale","batchNorm"));let l;return n!=null&&(l=C(n,"offset","batchNorm")),$(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),$(o.rank===2||o.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),$(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),p!=null&&$(p.rank===2||p.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${p.rank}.`),l!=null&&$(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),no(i,o,u,l,p,s)}var hg=z({batchNorm2d_:vA});function kA(e,t,r,n,a,s){let i=C(e,"x","batchNorm"),o=C(t,"mean","batchNorm"),u=C(r,"variance","batchNorm"),p;a!=null&&(p=C(a,"scale","batchNorm"));let l;return n!=null&&(l=C(n,"offset","batchNorm")),$(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),$(o.rank===3||o.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),$(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),p!=null&&$(p.rank===3||p.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${p.rank}.`),l!=null&&$(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),no(i,o,u,l,p,s)}var cg=z({batchNorm3d_:kA});function IA(e,t,r,n,a,s){let i=C(e,"x","batchNorm"),o=C(t,"mean","batchNorm"),u=C(r,"variance","batchNorm"),p;a!=null&&(p=C(a,"scale","batchNorm"));let l;return n!=null&&(l=C(n,"offset","batchNorm")),$(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),$(o.rank===4||o.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),$(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),p!=null&&$(p.rank===4||p.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${p.rank}.`),l!=null&&$(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),no(i,o,u,l,p,s)}var fg=z({batchNorm4d_:IA});function SA(e,t,r){let n=C(e,"x","bincount"),a=C(t,"weights","bincount");$(n.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${n.dtype}`),$(r>=0,()=>`size must be non-negative, but got ${r}.`),$(a.size===n.size||a.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${n.shape}, weights shape: ${a.shape}.`);let s={x:n,weights:a},i={size:r};return O.runKernel(il,s,i)}var mg=z({bincount_:SA});function NA(e,t){let r=C(e,"s0","broadcastArgs","int32"),n=C(t,"s1","broadcastArgs","int32");if(r.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${r.rank}`);if(n.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${n.rank}`);let a={s0:r,s1:n};return O.runKernel(mp,a)}var D0=z({broadcastArgs_:NA});function TA(e,t){let r=C(e,"broadcastTo","x"),n=r.shape;if(Hr(t),t.length<r.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${r.rank}.`);if(t.length>r.rank){let u=r.shape.slice();for(;u.length<t.length;)u.unshift(1);r=P(r,u)}let a=r.shape,s=Array.from(t);for(let u=t.length-1;u>=0;u--)if(a[u]===t[u])s[u]=1;else if(r.shape[u]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${t}].`);if(s.map((u,p)=>u>1?p:-1).filter(u=>u>=0).length===0)return Ln(r);let i={x:r},o={reps:s};return O.runKernel(ja,i,o)}var bs=z({broadcastTo_:TA});function CA(e){let t={x:C(e,"x","ceil","float32")};return O.runKernel(Qs,t)}var gg=z({ceil_:CA});function Br(e,t,r){Hr(e),r=r||cp(t);let n={shape:e,value:t,dtype:r};return O.runKernel(xp,{},n)}function _A(e,t,r){let n=C(e,"x","clipByValue");if($(t<=r,()=>`Error in clip: min (${t}) must be less than or equal to max (${r}).`),t===r)return Br(n.shape,t,n.dtype);let a={x:n},s={clipValueMin:t,clipValueMax:r};return O.runKernel(Ha,a,s)}var ir=z({clipByValue_:_A});function EA(e){return at(e,0)}var yg=z({concat1d_:EA});function $A(e,t){return at(e,t)}var bg=z({concat2d_:$A});function AA(e,t){return at(e,t)}var xg=z({concat3d_:AA});function FA(e,t){return at(e,t)}var wg=z({concat4d_:FA});function RA(e,t,r,n,a="NHWC",s=[1,1],i){let o=C(e,"x","conv2d","float32"),u=C(t,"filter","conv2d","float32"),p=o,l=!1;o.rank===3&&(l=!0,p=P(o,[1,o.shape[0],o.shape[1],o.shape[2]])),$(p.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${p.rank}.`),$(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),yr("conv2d",n,i);let d=a==="NHWC"?p.shape[3]:p.shape[1];$(d===u.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${u.shape[2]}.`),$(Gn(r,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`),$($s(s),()=>"Error in conv2D: Dilated rates should be larger than 0."),$($s(r),()=>"Error in conv2D: Strides should be larger than 0.");let h={x:p,filter:u},c={strides:r,pad:n,dataFormat:a,dilations:s,dimRoundingMode:i},f=O.runKernel(ei,h,c);return l?P(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var cr=z({conv2d_:RA});function DA(e,t,r,n,a="NWC",s=1,i){let o=C(e,"x","conv1d"),u=C(t,"filter","conv1d"),p=o,l=!1;o.rank===2&&(l=!0,p=P(o,[1,o.shape[0],o.shape[1]])),$(p.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${p.rank}.`),$(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),yr("conv1d",n,i),$(p.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${p.shape[2]}) must match input depth for filter ${u.shape[1]}.`),$(Gn(r,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${r} and dilation '${s}'`),$($s(s),()=>"Error in conv1D: Dilated rates should be larger than 0."),$($s(r),()=>"Error in conv1D: Stride should be larger than 0."),$(a==="NWC",()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`);let d=P(u,[1,u.shape[0],u.shape[1],u.shape[2]]),h=P(p,[p.shape[0],1,p.shape[1],p.shape[2]]),c=cr(h,d,[1,r],n,"NHWC",[1,s],i);return l?P(c,[c.shape[2],c.shape[3]]):P(c,[c.shape[0],c.shape[2],c.shape[3]])}var ac=z({conv1d_:DA});function MA(e,t,r,n,a,s="NHWC",i){$(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,u=t,p=!1;t.rank===3&&(p=!0,u=P(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),$(o.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),$(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),$(r.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${r.rank}`);let l=s==="NHWC"?o[3]:o[1],d=s==="NHWC"?u.shape[3]:u.shape[1];$(l===r.shape[2],()=>`Error in conv2dDerInput: depth of input (${l}) must match input depth for filter ${r.shape[2]}.`),$(d===r.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${r.shape[3]}.`),yr("conv2dDerInput",a,i);let h={dy:u,filter:r},c={strides:n,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},f=O.runKernel(ti,h,c);return p?P(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var vg=z({conv2DBackpropInput_:MA});function OA(e,t,r,n,a,s){let i=C(e,"x","conv2dTranspose"),o=C(t,"filter","conv2dTranspose");return vg(r,i,o,n,a,"NHWC",s)}var sc=z({conv2dTranspose_:OA});function zA(e,t,r,n,a="NDHWC",s=[1,1,1]){let i=C(e,"x","conv3d"),o=C(t,"filter","conv3d"),u=i,p=!1;i.rank===4&&(p=!0,u=P(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),$(o.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),$(u.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`),$(Gn(r,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`),$(a==="NDHWC",()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`),$($s(s),()=>"Error in conv3D: Dilated rates should be larger than 0."),$($s(r),()=>"Error in conv3D: Strides should be larger than 0.");let l={x:u,filter:o},d={strides:r,pad:n,dataFormat:a,dilations:s},h=O.runKernel(ri,l,d);return p?P(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var kg=z({conv3d_:zA});function LA(e,t,r,n,a){$(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let s=e,i=t,o=!1;t.rank===4&&(o=!0,i=P(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let u=s[4],p=i.shape[4];$(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),$(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),$(r.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${r.rank}`),$(u===r.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${r.shape[3]}.`),$(p===r.shape[4],()=>`Error in conv3dDerInput: depth of output (${p}) must match output depth for filter ${r.shape[4]}.`);let l={dy:i,filter:r},d={pad:a,strides:n,inputShape:s},h=O.runKernel(ul,l,d);return o?P(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var M0=z({conv3DBackpropInput_:LA});function PA(e,t,r,n,a){let s=C(e,"x","conv3dTranspose"),i=C(t,"filter","conv3dTranspose");return M0(r,s,i,n,a)}var Ig=z({conv3dTranspose_:PA});function BA(e){let t={x:C(e,"x","cos","float32")};return O.runKernel(ni,t)}var Pp=z({cos_:BA});function WA(e){let t={x:C(e,"x","cosh","float32")};return O.runKernel(ai,t)}var ic=z({cosh_:WA});function VA(e,t=0,r=!1,n=!1){let a={x:C(e,"x","cumprod")},s={axis:t,exclusive:r,reverse:n};return O.runKernel(pl,a,s)}var tp=z({cumprod_:VA});function UA(e,t=0,r=!1,n=!1){let a={x:C(e,"x","cumsum")},s={axis:t,exclusive:r,reverse:n};return O.runKernel(si,a,s)}var oc=z({cumsum_:UA});function GA(e,t,r,n=!1){let a=C(e,"x","denseBincount"),s=C(t,"weights","denseBincount");$(a.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`),$(a.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`),$(r>=0,()=>`size must be non-negative, but got ${r}.`),$(s.size===a.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`);let i={x:a,weights:s},o={size:r,binaryOutput:n};return O.runKernel(yp,i,o)}var ph=z({denseBincount_:GA});function HA(e,t,r="NHWC"){let n=C(e,"x","depthToSpace","float32"),a=r==="NHWC"?n.shape[1]:n.shape[2],s=r==="NHWC"?n.shape[2]:n.shape[3],i=r==="NHWC"?n.shape[3]:n.shape[1];$(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),$(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t}  for depthToSpace with input shape
    ${n.shape}`),$(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${t} for depthToSpace with input shape
        ${n.shape}`),$(i%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${n.shape}`);let o={x:n},u={blockSize:t,dataFormat:r};return O.runKernel(hl,o,u)}var Sg=z({depthToSpace_:HA});function jA(e,t,r,n,a="NHWC",s=[1,1],i){let o=C(e,"x","depthwiseConv2d","float32"),u=C(t,"filter","depthwiseConv2d","float32"),p=o,l=!1;o.rank===3&&(l=!0,p=P(o,[1,o.shape[0],o.shape[1],o.shape[2]])),$(p.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),$(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);let d=a==="NHWC"?p.shape[3]:p.shape[1];$(d===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${d}) must match the inChannels dimension in filter ${u.shape[2]}.`),yr("depthwiseConv2d",n,i);let h={x:p,filter:u},c={strides:r,pad:n,dataFormat:a,dilations:s,dimRoundingMode:i},f=O.runKernel(ii,h,c);return l?P(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var ao=z({depthwiseConv2d_:jA});function qA(e){let t={x:C(e,"x","diag")};return O.runKernel(bp,t)}var O0=z({diag_:qA});function KA(e,t,r,n,a=[1,1],s="NHWC"){let i=C(e,"x","dilation2d"),o=C(t,"filter","dilation2d");$(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),$(o.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),$(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let u=i,p=!1;i.rank===3&&(u=P(i,[1,i.shape[0],i.shape[1],i.shape[2]]),p=!0),$(u.shape[3]===o.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${o.shape[2]}`);let l={x:u,filter:o},d={strides:r,pad:n,dilations:a},h=O.runKernel(oi,l,d);return p?P(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var Ng=z({dilation2d_:KA}),nu={};Ee(nu,{assertAndGetBroadcastShape:()=>st,getBroadcastDims:()=>z0,getReductionAxes:()=>At});function z0(e,t){let r=e.length,n=[];for(let a=0;a<r;a++){let s=r-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&i===1&&n.unshift(s)}return n}function At(e,t){let r=[];for(let n=0;n<t.length;n++){let a=e[e.length-n-1],s=t.length-n-1,i=t[s];(a==null||a===1&&i>1)&&r.unshift(s)}return r}function st(e,t){let r=Math.max(e.length,t.length),n=new Array(r);for(let a=0;a<r;a++){let s=e[e.length-a-1];s==null&&(s=1);let i=t[t.length-a-1];if(i==null&&(i=1),s===1)n[r-a-1]=i;else if(i===1)n[r-a-1]=s;else if(s!==i){let o=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(o)}else n[r-a-1]=s}return n}function XA(e,t){let r=C(e,"a","equal","string_or_numeric"),n=C(t,"b","equal","string_or_numeric");[r,n]=kt(r,n),st(r.shape,n.shape);let a={a:r,b:n};return O.runKernel(ml,a)}var Wr=z({equal_:XA});function ZA(e,t,r){let n=C(t,"a","where"),a=C(r,"b","where"),s=C(e,"condition","where","bool"),i=st(st(s.shape,n.shape),a.shape),o=bs(s,i),u=bs(n,i),p=bs(a,i),l={condition:o,t:u,e:p};return O.runKernel(Gl,l)}var Gt=z({where_:ZA});function JA(e){let t={x:C(e,"x","zerosLike")};return O.runKernel(tu,t)}var He=z({zerosLike_:JA});function YA(e,t){let r=C(e,"a","div"),n=C(t,"b","div");[r,n]=kt(r,n);let a=me(r,n),s=He(a),i=Wr(n,s);return Gt(i,s,a)}var Tg=z({divNoNan_:YA});function QA(e,t){let r=C(e,"t1","dot"),n=C(t,"t2","dot");$((r.rank===1||r.rank===2)&&(n.rank===1||n.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${r.rank} and ${n.rank}.`);let a=r.rank===1?r.size:r.shape[1],s=n.rank===1?n.size:n.shape[0];if($(a===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`),r.rank===1&&n.rank===1){let i=P(r,[1,-1]),o=P(n,[-1,1]),u=Me(i,o);return P(u,[])}else if(r.rank===1&&n.rank===2){let i=P(r,[1,-1]),o=P(n,[n.shape[0],n.shape[1]]),u=Me(i,o);return P(u,[u.size])}else if(r.rank===2&&n.rank===1){let i=P(n,[-1,1]),o=Me(r,i);return P(o,[o.size])}else{let i=P(n,[n.shape[0],n.shape[1]]);return Me(r,i)}}var Cg=z({dot_:QA});function eF(e,...t){let r=t.map((a,s)=>C(a,`tensors${s}`,"einsum")),n={equation:e};return O.runKernel(Uh,r,n)}var L0=z({einsum_:eF});function tF(e){let t={x:C(e,"x","elu","float32")};return O.runKernel(ui,t)}var au=z({elu_:tF});function rF(e){let t=C(e,"x","erf");$(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=se(t,"float32"));let r={x:t};return O.runKernel(fl,r)}var _g=z({erf_:rF});function Eg(e,t){for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0}function P0(e,t,r){let n=e.length+t.length,a=[],s=0,i=0;for(let o=0;o<n;o++)r.indexOf(o)===-1?a.push(e[s++]):a.push(t[i++]);return a}function B0(e,t){let r=[],n=e.length;for(let s=0;s<n;s++)t.indexOf(s)===-1&&r.push(e[s]);let a=t.map(s=>e[s]);return[r,a]}function Fs(e,t){let r=t.map(n=>1);return P0(e,r,t)}function nF(e,t,r){$(Eg(t,r),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${r} input.`)}function W0(e,t){if(Eg(e,t))return null;let r=[];for(let n=0;n<t;++n)e.indexOf(n)===-1&&r.push(n);return e.forEach(n=>r.push(n)),r}function $g(e){return e.map((t,r)=>[r,t]).sort((t,r)=>t[1]-r[1]).map(t=>t[0])}function aF(e,t){let r=[];for(let n=t-e;n<t;++n)r.push(n);return r}function sF(e,t=null,r=!1){let n={x:C(e,"x","max")},a={reductionIndices:t,keepDims:r};return O.runKernel(Si,n,a)}var Qr=z({max_:sF});function iF(e,t=null,r=!1){let n={x:C(e,"x","min")},a={axis:t,keepDims:r};return O.runKernel(_i,n,a)}var Ro=z({min_:iF});function oF(e,t){let r=C(e,"base","pow"),n=C(t,"exp","pow");[r,n]=kt(r,n);let a={a:r,b:n};return O.runKernel(Di,a)}var oa=z({pow_:oF});function ve(e,t){if((Yt(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&Yt(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ka(e,[],[],t)}function lF(e){let t={x:C(e,"x","sqrt","float32")};return O.runKernel(Zi,t)}var nr=z({sqrt_:lF});function uF(e){let t=C(e,"x","square"),r={};return O.runKernel("Square",{x:t},r)}var nt=z({square_:uF});function pF(e,t=null,r=!1){let n=C(e,"x","sum");n.dtype==="bool"&&(n=se(n,"int32"));let a={x:n},s={axis:t,keepDims:r};return O.runKernel(Ji,a,s)}var ge=z({sum_:pF});function dF(e,t="euclidean",r=null,n=!1){e=C(e,"x","norm");let a=V0(e,t,r),s=a.shape;if(n){let i=fn(r,e.shape);s=Fs(a.shape,i)}return P(a,s)}function V0(e,t,r=null){if(e.rank===0)return _t(e);if(e.rank!==1&&r===null)return V0(P(e,[-1]),t,r);if(e.rank===1||typeof r=="number"||Array.isArray(r)&&r.length===1){if(t===1)return ge(_t(e),r);if(t===1/0)return Qr(_t(e),r);if(t===-1/0)return Ro(_t(e),r);if(t==="euclidean"||t===2)return nr(ge(oa(_t(e),ve(2,"int32")),r));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(r)&&r.length===2){if(t===1)return Qr(ge(_t(e),r[0]),r[1]-1);if(t===1/0)return Qr(ge(_t(e),r[1]),r[0]);if(t===-1/0)return Ro(ge(_t(e),r[1]),r[0]);if(t==="fro"||t==="euclidean")return nr(ge(nt(e),r));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${r}`)}var su=z({norm_:dF});function hF(e,t=null,r=!1){return su(e,"euclidean",t,r)}var Ag=z({euclideanNorm_:hF});function cF(e){let t={x:C(e,"x","exp")};return O.runKernel(pi,t)}var fr=z({exp_:cF});function fF(e,t=0){let r=C(e,"x","expandDims","string_or_numeric");$(t<=r.rank,()=>"Axis must be <= rank of the tensor");let n={input:r},a={dim:t};return O.runKernel(gl,n,a)}var Qt=z({expandDims_:fF});function mF(e){let t={x:C(e,"x","expm1")};return O.runKernel(di,t)}var Fg=z({expm1_:mF});function gF(e,t){let r=C(e,"x","tile","string_or_numeric");$(r.rank===t.length,()=>`Error in transpose: rank of input ${r.rank} must match length of reps ${t}.`);let n={x:r},a={reps:t};return O.runKernel(ja,n,a)}var Lr=z({tile_:gF});function yF(e,t,r,n="float32"){t==null&&(t=e);let a=ze([e,t],n),s=e<=t?e:t;for(let o=0;o<s;++o)a.set(1,o,o);let i=P(a.toTensor(),[e,t]);if(r==null)return i;if(r.length===1)return Lr(Qt(i,0),[r[0],1,1]);if(r.length===2)return Lr(Qt(Qt(i,0),0),[r[0],r[1],1,1]);if(r.length===3)return Lr(Qt(Qt(Qt(i,0),0),0),[r[0],r[1],r[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${r.length}D.`)}var lc=z({eye_:yF});function bF(e){let t={x:C(e,"x","floor","float32")};return O.runKernel(hi,t)}var iu=z({floor_:bF});function xF(e,t,r=0,n=0){let a=C(e,"x","gather"),s=C(t,"indices","gather","int32"),i={x:a,indices:s},o={axis:r,batchDims:n};return O.runKernel(bl,i,o)}var ou=z({gather_:xF});function wF(e,t){let r=C(e,"a","greater","string_or_numeric"),n=C(t,"b","greater","string_or_numeric");[r,n]=kt(r,n),st(r.shape,n.shape);let a={a:r,b:n};return O.runKernel(wl,a)}var br=z({greater_:wF});function vF(e,t){let r=C(e,"a","greaterEqual","string_or_numeric"),n=C(t,"b","greaterEqual","string_or_numeric");[r,n]=kt(r,n),st(r.shape,n.shape);let a={a:r,b:n};return O.runKernel(mi,a)}var da=z({greaterEqual_:vF});function kF(e){let t={input:C(e,"input","imag")};return O.runKernel(jh,t)}var Bp=z({imag_:kF});function IF(e){let t={x:C(e,"x","isFinite")};return O.runKernel(yi,t)}var Rg=z({isFinite_:IF});function SF(e){let t={x:C(e,"x","isInf")};return O.runKernel(bi,t)}var Dg=z({isInf_:SF});function NF(e){let t={x:C(e,"x","isNaN")};return O.runKernel(xi,t)}var Mg=z({isNaN_:NF});function TF(e,t=.2){let r={x:C(e,"x","leakyRelu")},n={alpha:t};return O.runKernel(wi,r,n)}var Wp=z({leakyRelu_:TF});function CF(e,t){let r=C(e,"a","less","string_or_numeric"),n=C(t,"b","less","string_or_numeric");[r,n]=kt(r,n),st(r.shape,n.shape);let a={a:r,b:n};return O.runKernel(vl,a)}var Do=z({less_:CF});function _F(e,t){let r=C(e,"a","lessEqual","string_or_numeric"),n=C(t,"b","lessEqual","string_or_numeric");[r,n]=kt(r,n),st(r.shape,n.shape);let a={a:r,b:n};return O.runKernel(kl,a)}var Xa=z({lessEqual_:_F});function U0(e,t,r){if(r<=0)throw new Error("The number of values should be positive.");let n={start:e,stop:t,num:r};return O.runKernel(Il,{},n)}function EF(e,t=5,r=1,n=1,a=.5){let s=C(e,"x","localResponseNormalization");$(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),$(Eo(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=s,o=!1;s.rank===3&&(o=!0,i=P(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let u={x:i},p={depthRadius:t,bias:r,alpha:n,beta:a},l=O.runKernel(Ii,u,p);return o?P(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var Og=z({localResponseNormalization_:EF});function $F(e){let t={x:C(e,"x","log","float32")};return O.runKernel(vi,t)}var Vr=z({log_:$F});function AF(e){let t={x:C(e,"x","log1p")};return O.runKernel(ki,t)}var Vp=z({log1p_:AF});function FF(e){return $(Aa(e),()=>"The f passed in grad(f) must be a function"),(t,r)=>{let n=C(t,"x","tf.grad","string_or_numeric"),a=r!=null?C(r,"dy","tf.grad"):null;return O.tidy(()=>{let{value:s,grads:i}=O.gradients(()=>e(n),[n],a);return a!=null&&gr(s.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),uc(i),i[0]})}}function RF(e){return $(Aa(e),()=>"The f passed in grads(f) must be a function"),(t,r)=>{$(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let n=Ju(t,"args","tf.grads","string_or_numeric"),a=r!=null?C(r,"dy","tf.grads"):null;return O.tidy(()=>{let{value:s,grads:i}=O.gradients(()=>e(...n),n,a);return a!=null&&gr(s.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),uc(i),i})}}function DF(e){return $(Aa(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,r)=>{$(t instanceof Ue,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),$(r==null||r instanceof Ue,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:n,value:a}=O.gradients(()=>e(t),[t],r);return uc(n),{grad:n[0],value:a}}}function MF(e){return $(Aa(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,r)=>{$(Array.isArray(t)&&t.every(a=>a instanceof Ue),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),$(r==null||r instanceof Ue,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let n=O.gradients(()=>e(...t),t,r);return r!=null&&gr(n.value.shape,r.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),uc(n.grads),n}}function G0(e,t){$(Aa(e),()=>"The f passed in variableGrads(f) must be a function"),$(t==null||Array.isArray(t)&&t.every(p=>p instanceof Ts),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let r=t!=null;if(!r){t=[];for(let p in O.registeredVariables)t.push(O.registeredVariables[p])}let n=r?t.filter(p=>!p.trainable):null,a=t.length;t=t.filter(p=>p.trainable),$(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`);let s=!0,{value:i,grads:o}=O.gradients(e,t,null,s);$(o.some(p=>p!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),$(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let u={};return t.forEach((p,l)=>{o[l]!=null&&(u[p.name]=o[l])}),n!=null&&n.forEach(p=>u[p.name]=null),{value:i,grads:u}}function Vn(e){return O.customGrad(e)}function uc(e){if(e.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function OF(e){let t={x:C(e,"x","neg")};return O.runKernel(Al,t)}var ht=z({neg_:OF});function zF(e){let t={x:C(e,"x","softplus")};return O.runKernel(Xi,t)}var so=z({softplus_:zF});function LF(e){let t=C(e,"x","logSigmoid");return Vn(r=>({value:ht(so(ht(r))),gradFunc:n=>L(n,hn(ht(r)))}))(t)}var zg=z({logSigmoid_:LF});function PF(e,t){let r=C(e,"a","sub"),n=C(t,"b","sub");[r,n]=kt(r,n);let a={a:r,b:n};return O.runKernel(eo,a)}var he=z({sub_:PF});function BF(e,t=-1){let r=C(e,"logits","logSoftmax");if(t===-1&&(t=r.rank-1),t!==r.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${r.rank} and axis was ${t}`);return Vn((n,a)=>{let s=Qr(n,t,!0),i=he(n,s),o=he(se(i,"float32"),Vr(ge(fr(i),t,!0)));return a([o]),{value:o,gradFunc:(u,p)=>{let[l]=p,d=!0,h=fr(l);return he(u,L(ge(u,t,d),h))}}})(r)}var pc=z({logSoftmax_:BF});function WF(e,t=null,r=!1){let n=C(e,"x","logSumExp"),a=fn(t,n.shape),s=Qr(n,a,!0),i=he(n,s),o=fr(i),u=ge(o,a),p=Vr(u),l=J(P(s,p.shape),p);if(r){let d=Fs(l.shape,a);return P(l,d)}return l}var dc=z({logSumExp_:WF});function VF(e,t){let r=C(e,"a","logicalAnd","bool"),n=C(t,"b","logicalAnd","bool");st(r.shape,n.shape);let a={a:r,b:n};return O.runKernel(Sl,a)}var cn=z({logicalAnd_:VF});function UF(e){let t={x:C(e,"x","logicalNot","bool")};return O.runKernel(Nl,t)}var Up=z({logicalNot_:UF});function GF(e,t){let r=C(e,"a","logicalOr","bool"),n=C(t,"b","logicalOr","bool");st(r.shape,n.shape);let a={a:r,b:n};return O.runKernel(Tl,a)}var hc=z({logicalOr_:GF});function HF(e,t){let r=C(e,"a","logicalXor","bool"),n=C(t,"b","logicalXor","bool");return st(r.shape,n.shape),cn(hc(e,t),Up(cn(e,t)))}var Lg=z({logicalXor_:HF}),Ad=2147483648;function jF(e,t,r="left"){let n=C(e,"sortedSequence","searchSorted"),a=C(t,"values","searchSorted"),s=n.shape[n.shape.length-1],i=a.shape[a.shape.length-1],o=P(n,[-1,s]),u=P(a,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(dt(u.shape)>=Ad)throw new Error(`values tensor size must less than ${Ad}`);if(o.shape[1]>=Ad)throw new Error(`trailing dim_size must less than ${Ad} for int32 output type, was ${o.shape[1]}`);let p={sortedSequence:o,values:u},l={side:r};return O.runKernel(Ul,p,l)}var cc=z({searchSorted_:jF});function H0(e,t){return cc(e,t,"left")}function qF(e,t,r,n,a){let s=C(e,"x","maxPool"),i=1,o=s,u=!1;s.rank===3&&(u=!0,o=P(s,[1,s.shape[0],s.shape[1],s.shape[2]])),$(o.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),$(Gn(r,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`),yr("maxPool",n,a);let p={x:o},l={filterSize:t,strides:r,pad:n,dimRoundingMode:a},d=O.runKernel(Ti,p,l);return u?P(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Wt=z({maxPool_:qF});function KF(e,t=[1,1,1],r,n,a,s="NDHWC"){let i=C(e,"x","maxPool3d"),o=i,u=!1;i.rank===4&&(u=!0,o=P(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(o.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),$(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),yr("maxPool3d",n,a);let p={x:o},l={filterSize:t,strides:r,pad:n,dimRoundingMode:a,dataFormat:s},d=O.runKernel(_l,p,l);return u?P(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var Pg=z({maxPool3d_:KF});function XF(e,t,r,n,a=!1){let s={x:C(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:r,pad:n,includeBatchInIndex:a},o=O.runKernel(Kh,s,i);return{result:o[0],indexes:o[1]}}var j0=z({maxPoolWithArgmax_:XF});function ZF(e,t){let r=C(e,"a","maximum"),n=C(t,"b","maximum");[r,n]=kt(r,n),r.dtype==="bool"&&(r=se(r,"int32"),n=se(n,"int32")),st(r.shape,n.shape);let a={a:r,b:n};return O.runKernel(Ni,a)}var Hn=z({maximum_:ZF});function JF(e,t=null,r=!1){let n={x:C(e,"x","mean")},a={axis:t,keepDims:r};return O.runKernel(Ci,n,a)}var xt=z({mean_:JF});function wt(e,t="float32"){if(Hr(e),t==="complex64"){let n=wt(e,"float32"),a=wt(e,"float32");return ia(n,a)}let r=Oh(dt(e),t);return O.makeTensor(r,e,t)}function Pr(e,t="float32"){if(Hr(e),t==="complex64"){let n=Pr(e,"float32"),a=wt(e,"float32");return ia(n,a)}let r=jm(dt(e),t);return O.makeTensor(r,e,t)}function q0(e,t,{indexing:r="xy"}={}){if(r!=="xy"&&r!=="ij")throw new TypeError(`${r} is not a valid third argument to meshgrid`);if(e===void 0)return[];let n=C(e,"x","meshgrid",e instanceof Ue?e.dtype:"float32");if(t===void 0)return[n];let a=C(t,"y","meshgrid",t instanceof Ue?t.dtype:"float32"),s=dt(n.shape),i=dt(a.shape);return r==="xy"?(n=P(n,[1,-1]),a=P(a,[-1,1]),[Me(Pr([i,1],n.dtype),n),Me(a,Pr([1,s],a.dtype))]):(n=P(n,[-1,1]),a=P(a,[1,-1]),[Me(n,Pr([1,i],n.dtype)),Me(Pr([s,1],a.dtype),a)])}function YF(e,t){let r=C(e,"a","minimum"),n=C(t,"b","minimum");[r,n]=kt(r,n),r.dtype==="bool"&&(r=se(r,"int32"),n=se(n,"int32")),st(r.shape,n.shape);let a={a:r,b:n};return O.runKernel(Ei,a)}var Da=z({minimum_:YF});function QF(e,t,r){$(r==="reflect"||r==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${r}.`);let n=C(e,"x","mirrorPad");if(n.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");$(t.length===n.rank,()=>`Padding doesn't match input. Must be ${n.rank}. Got ${t.length}.`);let a=r==="reflect"?1:0;for(let o=0;o<n.rank;o++)$(t[o].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),$(t[o][0]>=0&&t[o][0]<=n.shape[o]-a&&t[o][1]>=0&&t[o][1]<=n.shape[o]-a,()=>`Padding in dimension ${o} cannot be greater than or equal to ${n.shape[o]-a} or less than 0 for input of shape ${n.shape}`);let s={paddings:t,mode:r},i={x:n};return O.runKernel($i,i,s)}var Bg=z({mirrorPad_:QF});function eR(e,t){let r=C(e,"a","mod"),n=C(t,"b","mod");[r,n]=kt(r,n);let a={a:r,b:n};return O.runKernel(El,a)}var Wg=z({mod_:eR});function tR(e,t=null,r=!1){e=C(e,"x","moments");let n=fn(t,e.shape),a=xt(e,n,r),s=a.shape;r||(s=Fs(a.shape,n));let i=nt(he(se(e,"float32"),P(a,s))),o=xt(i,n,r);return{mean:a,variance:o}}var Gp=z({moments_:tR});function rR(e,t,r,n){let a=C(t,"data","multiRNNCell"),s=Ju(r,"c","multiRNNCell"),i=Ju(n,"h","multiRNNCell"),o=a,u=[];for(let d=0;d<e.length;d++){let h=e[d](o,s[d],i[d]);u.push(h[0]),u.push(h[1]),o=h[1]}let p=[],l=[];for(let d=0;d<u.length;d+=2)p.push(u[d]),l.push(u[d+1]);return[p,l]}var K0=z({multiRNNCell_:rR});function nR(e,t,r,n=!1){let a=C(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);r=r||Math.random();let o={logits:i===1?P(a,[1,-1]):a},u={numSamples:t,seed:r,normalized:n},p=O.runKernel($l,o,u);return i===1?P(p,[p.size]):p}var X0=z({multinomial_:nR});function aR(e,t){let r=C(e,"a","notEqual","string_or_numeric"),n=C(t,"b","notEqual","string_or_numeric");[r,n]=kt(r,n),st(r.shape,n.shape);let a={a:r,b:n};return O.runKernel(Fl,a)}var Rs=z({notEqual_:aR});function sR(e,t,r=1,n=0,a="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let s={indices:C(e,"indices","oneHot","int32")},i={dtype:a,depth:t,onValue:r,offValue:n};return O.runKernel(Fi,s,i)}var Mo=z({oneHot_:sR});function iR(e){let t={x:C(e,"x","onesLike")};return O.runKernel(Ol,t)}var Ur=z({onesLike_:iR});function oR(e,t){let r=C(e,"v1","outerProduct"),n=C(t,"v2","outerProduct");$(r.rank===1&&n.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${r.rank} and ${n.rank}.`);let a=P(r,[-1,1]),s=P(n,[1,-1]);return Me(a,s)}var Z0=z({outerProduct_:oR});function lR(e,t,r=0){let n=C(e,"x","pad");if(n.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let a={paddings:t,constantValue:r},s={x:n};return O.runKernel(Ri,s,a)}var _n=z({pad_:lR});function uR(e,t,r=0){return $(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),_n(e,[t],r)}var J0=z({pad1d_:uR});function pR(e,t,r=0){return $(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),_n(e,t,r)}var Y0=z({pad2d_:pR});function dR(e,t,r=0){return $(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),_n(e,t,r)}var Q0=z({pad3d_:dR});function hR(e,t,r=0){return $(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),_n(e,t,r)}var e1=z({pad4d_:hR});function cR(e,t,r){let n=C(e,"x","spaceToBatchND");$(n.rank>=1+t.length,()=>`input rank ${n.rank} should be > than [blockShape] ${t.length}`),$(r.length===t.length,()=>`paddings.shape[0] ${r.length} must be equal to [blockShape] ${t.length}`),$(n.shape.reduce((i,o,u)=>u>0&&u<=t.length?i&&(o+r[u-1][0]+r[u-1][1])%t[u-1]===0:i,!0),()=>`input spatial dimensions ${n.shape.slice(1)} with paddings ${r.toString()} must be divisible by blockShapes ${t.toString()}`);let a={x:n},s={blockShape:t,paddings:r};return O.runKernel(ql,a,s)}var Hp=z({spaceToBatchND_:cR});function fR(e,t,r,n,a,s,i){a==null&&(a=[1,1]),s==null&&(s=1),n===0&&(n="valid");let o=C(e,"x","maxPool"),u=o,p=!1;o.rank===3&&(p=!0,u=P(o,[1,o.shape[0],o.shape[1],o.shape[2]])),$(Gn(s,a),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`);let l=$0(u.shape,t,s,a,n),d=[l.dilationHeight,l.dilationWidth],h;n==="same"?h=gR([l.filterHeight,l.filterWidth],d):h=[[0,0],[0,0]];let c=d[0]===1&&d[1]===1,[f,m]=mR([l.inHeight,l.inWidth],d,h),g=c?n:"valid",y=c?u:Hp(u,d,f),b=(r==="avg"?()=>pa(y,t,s,g,i):()=>Wt(y,t,s,g,i))(),x=c?b:Lp(b,d,m);return p?P(x,[x.shape[1],x.shape[2],x.shape[3]]):x}function mR(e,t,r){let n=r.map(l=>l[0]),a=r.map(l=>l[1]),s=e.concat(n,a),i=t.map((l,d)=>(l-s[d]%l)%l),o=a.map((l,d)=>l+i[d]),u=t.map((l,d)=>[n[d],o[d]]),p=t.map((l,d)=>[0,i[d]]);return[u,p]}function gR(e,t){let r=e.map((s,i)=>s+(s-1)*(t[i]-1)).map(s=>s-1),n=r.map(s=>Math.floor(s/2)),a=r.map((s,i)=>s-n[i]);return r.map((s,i)=>[n[i],a[i]])}var Vg=z({pool_:fR});function yR(e,t){let r=C(e,"x","prelu"),n=C(t,"alpha","prelu"),a={x:r,alpha:n};return O.runKernel(Mi,a)}var jp=z({prelu_:yR});function bR(e,t=null,r=!1){let n=C(e,"x","prod");n.dtype==="bool"&&(n=se(n,"int32"));let a={x:n},s={axis:t,keepDims:r};return O.runKernel(Oi,a,s)}var Ug=z({prod_:bR});function xR(e,t,r,n){let a=e.map((l,d)=>C(l,`tensors${d}`,"raggedGather","int32")),s=C(t,"paramsDenseValues","raggedGather"),i=C(r,"indices","raggedGather","int32"),o={paramsNestedSplits:a,paramsDenseValues:s,indices:i},u={outputRaggedRank:n},p=O.runKernel(Xh,o,u);return{outputNestedSplits:p.slice(0,p.length-1),outputDenseValues:p[p.length-1]}}var t1=z({raggedGather_:xR});function wR(e,t,r){let n=C(e,"starts","raggedRange"),a=C(t,"limits","raggedRange",n.dtype),s=C(r,"deltas","raggedRange",n.dtype),i={starts:n,limits:a,deltas:s},o=O.runKernel(Zh,i);return{rtNestedSplits:o[0],rtDenseValues:o[1]}}var r1=z({raggedRange_:wR});function vR(e,t,r,n,a){let s=C(e,"shape","raggedTensorToTensor","int32"),i=C(t,"values","raggedTensorToTensor"),o=C(r,"defaultValue","raggedTensorToTensor",i.dtype),u=n.map((d,h)=>C(d,`tensors${h}`,"raggedTensorToTensor","int32")),p={shape:s,values:i,defaultValue:o,rowPartitionTensors:u},l={rowPartitionTypes:a};return O.runKernel(Jh,p,l)}var n1=z({raggedTensorToTensor_:vR});function kR(e,t,r){Hr(e);let n=dt(e),a=null;if(r==null||r==="float32")a=new Float32Array(n);else if(r==="int32")a=new Int32Array(n);else if(r==="bool")a=new Uint8Array(n);else throw new Error(`Unknown data type ${r}`);for(let s=0;s<n;s++)a[s]=t();return O.makeTensor(a,e,r)}var a1=z({rand_:kR}),Gg=Va(Dh()),s1={};Ee(s1,{TEST_EPSILON_FLOAT16:()=>i1,createVideoElement:()=>$R,encodeStrings:()=>o1,expectArrayBuffersEqual:()=>ER,expectArraysClose:()=>SR,expectArraysEqual:()=>TR,expectNumbersClose:()=>CR,expectPromiseToFail:()=>NR,expectValuesInRange:()=>_R,play:()=>AR,testEpsilon:()=>Hg});var IR=.001,i1=.1;function SR(e,t,r){return r==null&&(r=Hg()),Yf(e,t,(n,a)=>jg(n,a,r))}function Hg(){return O.backend.floatPrecision()===32?IR:i1}function Yf(e,t,r){let n=!0;if((Yt(e)||Yt(t))&&(n=!1),Yt(e)&&Yt(t)&&(n=!0),n){let i=e.constructor.name,o=t.constructor.name;if(i!==o)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${o}`)}if(Array.isArray(e)&&Array.isArray(t)){let i=Wn(e),o=Wn(t);if(!Ua(i,o))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${o}]`)}let a=Yt(e)?e:Fa(e),s=Yt(t)?t:Fa(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.
Actual:   ${a}.
Expected: ${s}.`);for(let i=0;i<s.length;++i){let o=a[i],u=s[i];if(!r(o,u))throw new Error(`Arrays differ: actual[${i}] = ${o}, expected[${i}] = ${u}.
Actual:   ${a}.
Expected: ${s}.`)}typeof expect<"u"&&expect().nothing()}function NR(e,t){e().then(()=>t.fail(),()=>t()),typeof expect<"u"&&expect().nothing()}function TR(e,t){let r=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return Sa(e)||Sa(e[0])||Sa(t)||Sa(t[0])?Yf(e,r,(n,a)=>n==a):Yf(e,t,(n,a)=>jg(n,a,0))}function CR(e,t,r){if(r==null&&(r=Hg()),!jg(e,t,r))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);typeof expect<"u"&&expect().nothing()}function jg(e,t,r){return!isFinite(e)&&!isFinite(t)?!0:!(isNaN(e)||isNaN(t)||Math.abs(e-t)>r)}function _R(e,t,r){for(let n=0;n<e.length;n++)if(e[n]<t||e[n]>r)throw new Error(`Value out of range:${e[n]} low: ${t}, high: ${r}`)}function ER(e,t){let r=new Float32Array(e),n=new Float32Array(t);if(r.length!==n.length)throw new Error(`Expected ArrayBuffer to be of length ${n.length}, but it was ${r.length}`);for(let a=0;a<n.length;a++)if(r[a]!==n[a])throw new Error(`Expected ArrayBuffer value at ${a} to be ${n[a]} but got ${r[a]} instead`)}function o1(e){for(let t=0;t<e.length;t++){let r=e[t];Array.isArray(r)?o1(r):e[t]=Dp(r)}return e}function $R(e){let t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise(r=>{t.addEventListener("loadeddata",n=>r(t)),t.load()})}async function AR(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise(t=>{e.requestVideoFrameCallback(t)})}var qg=class{constructor(e,t,r,n,a){this.mean=e,this.stdDev=t,this.dtype=r,this.nextVal=NaN,this.truncated=n,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let s=a||Math.random();this.random=Gg.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let n=this.nextVal;return this.nextVal=NaN,n}let e,t,r=!1;for(;!r;){let n,a,s;do n=2*this.random()-1,a=2*this.random()-1,s=n*n+a*a;while(s>=1||s===0);let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*n*i,t=this.mean+this.stdDev*a*i,(!this.truncated||this.isValidTruncated(e))&&(r=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},FR=class{constructor(e,t,r,n){this.alpha=e,this.beta=1/t,this.dtype=r;let a=n||Math.random();this.randu=Gg.alea(a.toString()),this.randn=new qg(0,1,r,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,r,n,a,s;for(;;){do n=this.randn.nextValue(),s=1+this.c*n;while(s<=0);if(s*=s*s,e=n*n,t=1-.331*e*e,r=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<r)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},RR=class{constructor(e=0,t=1,r,n){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=r,n==null&&(n=Math.random()),typeof n=="number"&&(n=n.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Gg.alea(n)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function DR(e,t,r=1,n="float32",a){if(Hr(e),r==null&&(r=1),n==null&&(n="float32"),n!=="float32"&&n!=="int32")throw new Error(`Unsupported data type ${n}`);let s=new FR(t,r,n,a),i=ze(e,n);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var l1=z({randomGamma_:DR});function MR(e,t=0,r=1,n,a){if(Hr(e),n!=null&&n==="bool")throw new Error(`Unsupported data type ${n}`);let s=new qg(t,r,n,!1,a),i=ze(e,n);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var fc=z({randomNormal_:MR});function OR(e,t,r){if(t!=null&&t==="bool")throw new Error(`Unsupported data type ${t}`);return fc(e,0,1,t,r)}var u1=z({randomStandardNormal_:OR});function zR(e,t=0,r=1,n="float32",a){Hr(e);let s=ze(e,n),i=new RR(t,r,null,a);for(let o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}var lu=z({randomUniform_:zR});function Ds(e,t,r=1,n="float32"){if(r===0)throw new Error("Cannot have a step of zero");let a={start:e,stop:t,step:r,dtype:n};return O.runKernel(vp,{},a)}function LR(e){let t={input:C(e,"input","real")};return O.runKernel(Yh,t)}var Oo=z({real_:LR});function PR(e){let t={x:C(e,"x","reciprocal")};return O.runKernel(zi,t)}var Kg=z({reciprocal_:PR});function BR(e){let t={x:C(e,"x","relu")};return O.runKernel(Li,t)}var et=z({relu_:BR});function WR(e){let t={x:C(e,"x","relu6")};return O.runKernel(Wi,t)}var mc=z({relu6_:WR});function VR(e,t){let r={x:C(e,"x","reverse")},n={dims:t};return O.runKernel(Vi,r,n)}var tn=z({reverse_:VR});function UR(e){let t=C(e,"x","reverse");return $(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),tn(t,0)}var p1=z({reverse1d_:UR});function GR(e,t){let r=C(e,"x","reverse");return $(r.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${r.rank}.`),tn(r,t)}var d1=z({reverse2d_:GR});function HR(e,t){let r=C(e,"x","reverse");return $(r.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${r.rank}.`),tn(r,t)}var h1=z({reverse3d_:HR});function jR(e,t){let r=C(e,"x","reverse");return $(r.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${r.rank}.`),tn(r,t)}var c1=z({reverse4d_:jR});function qR(e){let t={x:C(e,"x","round")};return O.runKernel(Ui,t)}var gc=z({round_:qR});function KR(e){let t={x:C(e,"x","rsqrt","float32")};return O.runKernel(Gi,t)}var yc=z({rsqrt_:KR});function XR(e){let t={x:C(e,"x","selu")};return O.runKernel(Hi,t)}var bc=z({selu_:XR});function ZR(e,t,r,n,a,s=[1,1],i="NHWC"){let o=C(e,"x","separableConv2d"),u=C(t,"depthwiseFilter","separableConv2d"),p=C(r,"pointwiseFilter","separableConv2d"),l=o,d=!1;if(o.rank===3&&(d=!0,l=P(o,[1,o.shape[0],o.shape[1],o.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");$(l.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`),$(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),$(p.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),$(p.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${p.shape[0]}.`),$(p.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${p.shape[1]}.`);let h=u.shape[2],c=u.shape[3];$(p.shape[2]===h*c,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*c}, but got ${p.shape[2]}.`);let f=ao(l,u,n,a,i,s),m=cr(f,p,1,"valid",i);return d?P(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var uu=z({separableConv2d_:ZR});async function JR(e,t){let r=C(e,"x","setdiff1d"),n=C(t,"y","setdiff1d");$(r.dtype===n.dtype,()=>`x and y should have the same dtype, but got x (${r.dtype}) and y (${n.dtype}).`),$(r.rank===1,()=>`x should be 1D tensor, but got x (${r.shape}).`),$(n.rank===1,()=>`y should be 1D tensor, but got y (${n.shape}).`);let a=await r.data(),s=await n.data(),i=new Set(s),o=0;for(let l=0;l<a.length;l++)i.has(a[l])||o++;let u=new $t([o],r.dtype),p=new $t([o],"int32");for(let l=0,d=0;l<a.length;l++)i.has(a[l])||(u.values[d]=a[l],p.values[d]=l,d++);return[u.toTensor(),p.toTensor()]}var f1=JR;function YR(e){let t={x:C(e,"x","sign")};return O.runKernel(qi,t)}var Xg=z({sign_:YR});function QR(e){let t={x:C(e,"x","sin","float32")};return O.runKernel(ji,t)}var xc=z({sin_:QR});function eD(e){let t={x:C(e,"x","sinh")};return O.runKernel(jl,t)}var wc=z({sinh_:eD});function tD(e,t,r){let n=C(e,"x","slice1d");return $(n.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${n.rank} tensor`),Ve(n,[t],[r])}var qp=z({slice1d_:tD});function rD(e,t,r){let n=C(e,"x","slice2d");return $(n.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${n.rank} tensor`),Ve(n,t,r)}var vc=z({slice2d_:rD});function nD(e,t,r){let n=C(e,"x","slice3d");return $(n.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${n.rank} tensor`),Ve(n,t,r)}var Kp=z({slice3d_:nD});function aD(e,t,r){let n=C(e,"x","slice4d");return $(n.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${n.rank} tensor`),Ve(n,t,r)}var zo=z({slice4d_:aD});function sD(e,t=-1){let r=C(e,"logits","softmax","float32");if(t===-1&&(t=r.rank-1),t!==r.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${r.rank} and dim was ${t}`);let n={logits:r},a={dim:t};return O.runKernel(Yi,n,a)}var Za=z({softmax_:sD});function iD(e){$(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return O.runKernel(Gh,t)}var Xp=z({fft_:iD});function oD(e){$(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return O.runKernel(Hh,t)}var Lo=z({ifft_:oD});function lD(e){let t=e.shape[e.shape.length-1],r=e.size/t,n;if(t<=2){let a=P(e,[r,t]);n=Lo(a)}else{let a=[r,2*(t-1)],s=P(Oo(e),[r,t]),i=P(Bp(e),[r,t]),o=tn(Ve(s,[0,1],[r,t-2]),1),u=L(tn(Ve(i,[0,1],[r,t-2]),1),ve(-1)),p=at([s,o],1),l=at([i,u],1),d=P(ia(p,l),[a[0],a[1]]);n=Lo(d)}if(n=Oo(n),e.rank===3&&e.shape[0]!==0){let a=n,s=e.shape[0];n=P(n,[s,n.shape[0]/s,n.shape[1]]),a.dispose()}return n}var kc=z({irfft_:lD});function uD(e,t,r=0){let n={x:C(e,"x","split")},a={numOrSizeSplits:t,axis:r};return O.runKernel(Kl,n,a)}var Nr=z({split_:uD});function pD(e,t){$(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let r=e.shape[e.shape.length-1],n=e.size/r,a;if(t!=null&&t<r){let f=e.shape.map(g=>0),m=e.shape.map(g=>g);m[e.shape.length-1]=t,a=Ve(e,f,m),r=t}else if(t!=null&&t>r){let f=e.shape.map(m=>m);f[e.shape.length-1]=t-r,a=at([e,wt(f)],e.shape.length-1),r=t}else a=e;let s=He(a),i=P(ia(a,s),[n,r]),o=Xp(i),u=Math.floor(r/2)+1,p=Oo(o),l=Bp(o),d=Nr(p,[u,r-u],p.shape.length-1),h=Nr(l,[u,r-u],l.shape.length-1),c=a.shape.slice();return c[a.shape.length-1]=u,P(ia(d[0],h[0]),c)}var Zp=z({rfft_:pD});function dD(e,t){let r=C(e,"a","squaredDifference"),n=C(t,"b","squaredDifference");[r,n]=kt(r,n),st(r.shape,n.shape);let a={a:r,b:n},s={};return O.runKernel(Qi,a,s)}var Ic=z({squaredDifference_:dD});function hD(e,t){let r=C(e,"x","squeeze","string_or_numeric");return P(r,jv(r.shape,t).newShape)}var Ja=z({squeeze_:hD});function cD(e,t=0){let r=Ju(e,"tensors","stack","string_or_numeric");$(r.length>=1,()=>"Pass at least one tensor to tf.stack"),r.length>0&&$(t<=r[0].rank,()=>"Axis must be <= rank of the tensor");let n=r,a={axis:t};return O.runKernel(zl,n,a)}var Ot=z({stack_:cD});function fD(e,t=0){let r={x:C(e,"x","step")},n={alpha:t};return O.runKernel(qa,r,n)}var io=z({step_:fD});function mD(e,t,r,n,a=0,s=0,i=0,o=0,u=0){let p={x:C(e,"x","stridedSlice","string_or_numeric")},l={begin:t,end:r,strides:n,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};return O.runKernel(Jl,p,l)}var Zg=z({stridedSlice_:mD});function gD(e){let t={x:C(e,"x","tan","float32")};return O.runKernel(to,t)}var Jg=z({tan_:gD});function Qe(e,t){Ws(e);let r=Wn(e,t);if(r.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ka(e,null,r,t)}function Pn(e,t,r){if(Ws(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let n=Wn(e,r);if(n.length!==2&&n.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ka(e,t,n,r)}function Sc(e,t,r){if(Ws(e),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let n=Wn(e,r);if(n.length!==3&&n.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Ka(e,t,n,r)}function Ma(e,t,r){if(Ws(e),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let n=Wn(e,r);if(n.length!==4&&n.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Ka(e,t,n,r)}function m1(e,t,r){if(Ws(e),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let n=Wn(e,r);if(n.length!==5&&n.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Ka(e,t,n,r)}function g1(e,t,r){if(Ws(e),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let n=Wn(e,r);if(n.length!==6&&n.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||n,Ka(e,t,n,r)}var Nc={};Ee(Nc,{calculateShapes:()=>y1,validateInput:()=>Tc,validateUpdateShape:()=>Yg});function Yg(e,t,r){let n=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${r.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${n}, and batchDim: ${a}.`;if(r.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<n+(r.rank-a))throw new Error(s+` Output shape length < ${n+(r.rank-a)}`);if(r.rank!==a+e.length-n)throw new Error(s+` update.rank != ${a+e.length-n}`);for(let i=0;i<a;++i)if(r.shape[i]!==t.shape[i])throw new Error(s+` updates.shape[${i}] (${r.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<r.rank-a;++i)if(r.shape[i+a]!==e[i+n])throw new Error(s+` updates.shape[${i+a}] (${r.shape[i+a]}) != shape[${i+a}] (${e[i+a]})`)}function Tc(e,t,r){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(r.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${r}`);if(r.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Yg(r,t,e)}function y1(e,t,r){let n=t.shape.length,a=n>1?t.shape[n-1]:1,s=r.length,i=1;for(let d=a;d<s;++d)i*=r[d];let o=a<1?1:a,u=dt(t.shape)/o,p=[...Yo(r.slice(0,a)),1],l=dt(r);return{sliceRank:a,numUpdates:u,sliceSize:i,strides:p,outputSize:l}}function yD(e,t,r){let n=C(e,"tensor","tensorScatterupdate"),a=C(t,"indices","tensorScatterupdate","int32"),s=C(r,"updates","tensorScatterupdate");if(Tc(s,a,n.shape),n.dtype!==s.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${n.dtype} and ${s.dtype}.`);let i={tensor:n,indices:a,updates:s},o={};return O.runKernel(Vl,i,o)}var b1=z({tensorScatterUpdate_:yD});function bD(e,t=1,r=!0){let n=C(e,"x","topk");if(n.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let a=n.shape[n.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);let s={x:n},i={k:t,sorted:r},[o,u]=O.runKernel(Yl,s,i);return{values:o,indices:u}}var Qg=z({topk_:bD});function xD(e,t=0,r=1,n,a){if(Hr(e),n!=null&&n==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new qg(t,r,n,!0,a),i=ze(e,n);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var Cc=z({truncatedNormal_:xD});function wD(e,t=0){let r=C(e,"x","unique","string_or_numeric");$(r.rank>0,()=>"The input tensor must be at least 1D");let n={x:r},a={axis:t},[s,i]=O.runKernel($p,n,a);return{values:s,indices:i}}var ey=z({unique_:wD});function vD(e,t,r){let n=C(e,"x","unsortedSegmentSum"),a=C(t,"segmentIds","unsortedSegmentSum","int32");$(Eo(r),()=>"numSegments must be of dtype int");let s={x:n,segmentIds:a},i={numSegments:r};return O.runKernel(Ap,s,i)}var _c=z({unsortedSegmentSum_:vD});function kD(e,t=0){let r=C(e,"x","unstack","string_or_numeric");$(t>=-r.shape.length&&t<r.shape.length,()=>`Axis = ${t} is not in [-${r.shape.length}, ${r.shape.length})`);let n={value:r},a={axis:t};return O.runKernel(eu,n,a)}var Nt=z({unstack_:kD});function x1(e,t){return cc(e,t,"right")}function ty(e,t=!0,r,n){return O.makeVariable(e,t,r,n)}function w1(e,t){let r=[];for(let s=0;s<t.length;s++)t[s]&&r.push(s);let n=ze(e,"int32"),a=ze([r.length,e.length],"int32");for(let s=0;s<r.length;s++){let i=n.indexToLoc(r[s]),o=s*e.length;a.values.set(i,o)}return a.toTensor()}async function ID(e){let t=C(e,"condition","whereAsync","bool"),r=await t.data(),n=w1(t.shape,r);return e!==t&&t.dispose(),n}var ry=ID;async function SD(e,t,r){let n=C(e,"tensor","boolMask"),a=C(t,"mask","boolMask","bool"),s=r==null?0:r,i=a.rank,o=n.shape;$(i>0,()=>"mask cannot be scalar"),gr(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let m=s;m<s+i;m++)u*=o[m];let p=o.slice(0,s).concat([u],o.slice(s+i)),l=P(n,p),d=P(a,[-1]),h=await ry(d),c=Ja(h,[1]),f=ou(l,c,s);return e!==n&&n.dispose(),t!==a&&a.dispose(),c.dispose(),l.dispose(),d.dispose(),h.dispose(),f}var v1=SD;function ND(e,t,r){let n=C(e,"x","transpose");if(t==null&&(t=n.shape.map((i,o)=>o).reverse()),$(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(i=>{$(i>=0&&i<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();let a={x:n},s={perm:t};return n.dtype==="complex64"?W(()=>{let i=Oo(n),o=Bp(n);return i=O.runKernel(aa,{x:i},s),o=O.runKernel(aa,{x:o},s),r&&(o=ht(o)),ia(i,o)}):O.runKernel(aa,a,s)}var Oe=z({transpose_:ND});function TD(e,t,r,n,a=!0){let s=C(e,"v","movingAverage"),i=C(t,"x","movingAverage"),o=C(r,"decay","movingAverage");d0(s,i),$(Ua(s.shape,i.shape),()=>"Shape mismatch in v and x");let u=ve(1),p=he(u,o),l=L(he(i,s),p);if(a){$(n!=null,()=>"When using zeroDebias: true, step is required.");let d=C(n,"step","movingAverage");l=me(l,he(u,oa(o,d)))}return J(s,l)}var k1=z({movingAverage_:TD});function CD(e,t,r){Hr(r);let n=C(e,"indices","scatterND","int32"),a=C(t,"updates","scatterND");Tc(a,n,r);let s={indices:n,updates:a},i={shape:r};return O.runKernel(Wl,s,i)}var I1=z({scatterND_:CD});function _D(e,t,r,n){if(e.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(r.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${r.length}, should be: ${s}.`);let i=t.size;if(!(t.rank===0||t.rank===1&&i===a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==n.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function ED(e,t,r,n=0){Hr(r);let a=C(e,"sparseIndices","sparseToDense","int32"),s=C(t,"sparseValues","sparseToDense","string_or_numeric"),i=C(n,"defaultValue","sparseToDense",s.dtype);_D(a,s,r,i);let o={sparseIndices:a,sparseValues:s,defaultValue:i},u={outputShape:r};return O.runKernel(Zl,o,u)}var S1=z({sparseToDense_:ED});function $D(e,t){let r=C(t,"indices","gatherND","int32"),n={params:C(e,"x","gatherND","string_or_numeric"),indices:r};return O.runKernel(xl,n)}var N1=z({gatherND_:$D});function AD(e,t){if(t==null)return e.shape.slice();if(Ua(e.shape,t))return t;if(e.shape.length===t.length){let r=[];for(let n=0;n<e.shape.length;n++)t[n]==null&&e.shape[n]!=null?r.push(e.shape[n]):r.push(t[n]);return r}return t}function FD(e,t,r,n){let a=C(e,"x","dropout");if($(a.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),$(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof Ue?a.clone():a;let s=AD(a,r),i=1-t,o=me(iu(J(lu(s,0,1,"float32",n),i)),i);return L(a,o)}var ny=z({dropout_:FD});function ay(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Ec(e,t,r){let n=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+n-1);a[s]=t-r*Math.cos(i)}return Qe(a,"float32")}async function RD(e,t,r=1){let n=C(e,"predictions","inTopK"),a=C(t,"targets","inTopK");$(n.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${n.rank}`),$(n.rank-1===a.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${n.rank} and targets rank ${a.rank}`),gr(n.shape.slice(0,n.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=n.shape[n.shape.length-1];$(r>0&&r<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${r}`);let i=await n.data(),o=await a.data(),[u,p]=[i.length/s,s],l=qv("bool",u);for(let d=0;d<u;d++){let h=d*p,c=i.subarray(h,h+p),f=[];for(let m=0;m<c.length;m++)f.push({value:c[m],index:m});f.sort((m,g)=>g.value-m.value),l[d]=0;for(let m=0;m<r;m++)if(f[m].index===o[d]){l[d]=1;break}}return e!==n&&n.dispose(),t!==a&&a.dispose(),hr(l,a.shape,"bool")}var T1=RD,Po={};Ee(Po,{conv2d:()=>OD,depthwiseConv2d:()=>BD,matMul:()=>VD});function DD(e,t,r,n,a,s="NHWC",i){let o=e;e.rank===3&&(o=P(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;u.rank===3&&(u=P(t,[1,t.shape[0],t.shape[1],t.shape[2]])),$(o.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),$(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),$(r.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${r}.`);let p=s==="NHWC"?o.shape[3]:o.shape[1],l=s==="NHWC"?u.shape[3]:u.shape[1];$(p===r[2],()=>`Error in conv2dDerFilter: depth of input ${p}) must match input depth in filter (${r[2]}.`),$(l===r[3],()=>`Error in conv2dDerFilter: depth of dy (${l}) must match output depth for filter (${r[3]}).`),yr("conv2dDerFilter",a,i);let d={x:o,dy:u},h={strides:n,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:r};return O.runKernel(Bh,d,h)}var sy=z({conv2DBackpropFilter_:DD});function $c(e,t,r){if(r==null||r==="linear")return e;if(r==="relu")return L(e,io(t));throw new Error(`Cannot compute gradient for fused activation ${r}.`)}function Ac(e,t){let r=t,n=At(e.shape,t.shape);return n.length>0&&(r=ge(r,n)),P(r,e.shape)}function Fc(e,t,r,n){if(t==="linear")return e;if(t==="relu")return et(e);if(t==="elu")return au(e);if(t==="relu6")return mc(e);if(t==="prelu")return jp(e,r);if(t==="leakyrelu")return Wp(e,n);if(t==="sigmoid")return hn(e);throw new Error(`Unknown fused activation ${t}.`)}var Rc=(e,t)=>!(e>0)||t==="linear";function MD({x:e,filter:t,strides:r,pad:n,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:p,leakyreluAlpha:l}){if(u=u||"linear",Rc(O.state.gradientDepth,u)===!1){$(a==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let T=cr(e,t,r,n,a,s,i);return o!=null&&(T=J(T,o)),Fc(T,u,p,l)}let d=C(e,"x","conv2d","float32"),h=C(t,"filter","conv2d","float32"),c=d,f=!1;d.rank===3&&(f=!0,c=P(d,[1,d.shape[0],d.shape[1],d.shape[2]])),$(c.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${c.rank}.`),$(h.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`),yr("fused conv2d",n,i);let m=a==="NHWC"?c.shape[3]:c.shape[1];$(h.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${h.shape[2]}.`),$(Gn(r,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`);let g=zp(c.shape,h.shape,r,s,n,i),y;o!=null&&(y=C(o,"bias","fused conv2d"),[y]=kt(y,d),a==="NHWC"?st(g.outShape,y.shape):($(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),$(y.shape.length===0||y.shape[0]===g.outChannels||y.shape[0]===1,()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let b;if(p!=null){let T=p.shape;if($(T.length<=1||T.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${T.length}.`),T.length===1)$(T[0]===1||T[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${T}) is not compatible with the number of output channels (${g.outChannels}).`);else if(T.length===3)try{st(T,g.outShape)}catch{let E=`Error in fused conv2d: PReLU activation weights (${T}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(E)}b=C(p,"prelu weights","fused conv2d")}let x=(T,_)=>{$(a==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`);let[E,A,R,F]=_,S=$c(T,R,u);$(Ra(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let M=vg(A.shape,S,E,r,n),B=sy(A,S,E.shape,r,n),U=[M,B];if(F!=null){let G=Ac(F,S);U.push(G)}return U},v={x:c,filter:h,bias:y,preluActivationWeights:b},I={strides:r,pad:n,dataFormat:a,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:l};return o==null?Vn((T,_,E)=>{let A=O.runKernel(Ss,v,I);return E([_,T,A]),f&&(A=P(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:x}})(c,h):Vn((T,_,E,A)=>{let R=O.runKernel(Ss,v,I);return A([_,T,R,E]),f&&(R=P(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:x}})(c,h,y)}var OD=z({fusedConv2d_:MD});function zD(e,t,r,n,a,s=[1,1],i){let o=e;e.rank===3&&(o=P(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;u.rank===3&&(u=P(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let p={x:o,dy:u},l={strides:n,pad:a,dimRoundingMode:i,dilations:s,filterShape:r};return O.runKernel(Wh,p,l)}var C1=z({depthwiseConv2dNativeBackpropFilter_:zD});function LD(e,t,r,n,a,s=[1,1],i){let o=t,u=!1;t.rank===3&&(u=!0,o=P(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let p={dy:o,filter:r},l={strides:n,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},d=O.runKernel(Vh,p,l);return u?P(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var _1=z({depthwiseConv2dNativeBackpropInput_:LD});function PD({x:e,filter:t,strides:r,pad:n,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:p,leakyreluAlpha:l}){if(Rc(O.state.gradientDepth,u)===!1){let I=ao(e,t,r,n,a,s,i);return o!=null&&(I=J(I,o)),Fc(I,u,p,l)}let d=C(e,"x","depthwiseConv2d","float32"),h=C(t,"filter","depthwiseConv2d","float32"),c=d,f=!1;d.rank===3&&(f=!0,c=P(d,[1,d.shape[0],d.shape[1],d.shape[2]])),$(c.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),$(h.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`),$(c.shape[3]===h.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`),s==null&&(s=[1,1]),$(Gn(r,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`),yr("fused depthwiseConv2d",n,i);let m=zp(c.shape,h.shape,r,s,n,i,!0),g;o!=null&&(g=C(o,"bias","fused conv2d"),[g]=kt(g,d),st(m.outShape,g.shape));let y;p!=null&&(y=C(p,"prelu weights","fused depthwiseConv2d"));let b=(I,T)=>{$(Ra(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[_,E,A,R]=T,F=$c(I,A,u),S=_1(E.shape,F,_,r,n,s,i),M=C1(E,F,_.shape,r,n,s,i);if(R!=null){let B=Ac(g,F);return[S,M,B]}return[S,M]},x={x:c,filter:h,bias:g,preluActivationWeights:y},v={strides:r,pad:n,dataFormat:a,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:l};return o==null?Vn((I,T,_)=>{let E=O.runKernel(Ns,x,v);return _([T,I,E]),f&&(E=P(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:b}})(c,h):Vn((I,T,_,E)=>{let A=O.runKernel(Ns,x,v);return E([T,I,A,_]),f&&(A=P(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:b}})(c,h,g)}var BD=z({fusedDepthwiseConv2d_:PD});function WD({a:e,b:t,transposeA:r=!1,transposeB:n=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(Rc(O.state.gradientDepth,s)===!1){let R=Me(e,t,r,n);return a!=null&&(R=J(R,a)),Fc(R,s,i,o)}let u=C(e,"a","fused matMul"),p=C(t,"b","fused matMul");[u,p]=kt(u,p);let l=r?u.shape[u.rank-2]:u.shape[u.rank-1],d=n?p.shape[p.rank-1]:p.shape[p.rank-2],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],c=n?p.shape[p.rank-2]:p.shape[p.rank-1],f=u.shape.slice(0,-2),m=p.shape.slice(0,-2),g=dt(f),y=dt(m);$(l===d,()=>`Error in fused matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${u.shape} and ${p.shape} and transposeA=${r} and transposeB=${n} must match.`);let b=st(u.shape.slice(0,-2),p.shape.slice(0,-2)).concat([h,c]),x=r?P(u,[g,l,h]):P(u,[g,h,l]),v=n?P(p,[y,c,d]):P(p,[y,d,c]),I;a!=null&&(I=C(a,"bias","fused matMul"),[I]=kt(I,u),st(b,I.shape));let T;i!=null&&(T=C(i,"prelu weights","fused matMul"));let _=(R,F)=>{let[S,M,B,U]=F,G=$c(P(R,B.shape),B,s),K,j;if(!r&&!n?(K=Me(G,M,!1,!0),j=Me(S,G,!0,!1)):!r&&n?(K=Me(G,M,!1,!1),j=Me(G,S,!0,!1)):r&&!n?(K=Me(M,G,!1,!0),j=Me(S,G,!1,!1)):(K=Me(M,G,!0,!0),j=Me(G,S,!0,!0)),a!=null){let X=Ac(U,G);return[K,j,X]}else return[K,j]},E={a:x,b:v,bias:I,preluActivationWeights:T},A={transposeA:r,transposeB:n,activation:s,leakyreluAlpha:o};return a==null?Vn((R,F,S)=>{let M=O.runKernel(Is,E,A);return S([R,F,M]),{value:P(M,b),gradFunc:_}})(x,v):Vn((R,F,S,M)=>{let B=O.runKernel(Is,E,A);return M([R,F,B,S]),{value:P(B,b),gradFunc:_}})(x,v,I)}var VD=z({fusedMatMul_:WD});function UD(e){return Ec(e,.54,.46)}var GD=z({hammingWindow_:UD});function HD(e){return Ec(e,.5,.5)}var E1=z({hannWindow_:HD});function jD(e,t,r,n=!1,a=0){let s=0,i=[];for(;s+t<=e.size;)i.push(Ve(e,s,t)),s+=r;if(n)for(;s<e.size;){let o=s+t-e.size,u=at([Ve(e,s,t-o),Br([o],a)]);i.push(u),s+=r}return i.length===0?Pn([],[0,t]):P(at(i),[i.length,t])}var $1=z({frame_:jD});function qD(e,t,r,n,a=E1){n==null&&(n=ay(t));let s=$1(e,t,r),i=L(s,a(t));return Zp(i,n)}var KD=z({stft_:qD});function XD(e,t,r,n,a="bilinear",s=0){let i=C(e,"image","cropAndResize"),o=C(t,"boxes","cropAndResize","float32"),u=C(r,"boxInd","cropAndResize","int32"),p=o.shape[0];$(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),$(o.rank===2&&o.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${p},4] but had shape ${o.shape}.`),$(u.rank===1&&u.shape[0]===p,()=>`Error in cropAndResize: boxInd must be have size [${p}] but had shape ${o.shape}.`),$(n.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),$(n[0]>=1&&n[1]>=1,()=>`cropSize must be atleast [1,1], but was ${n}`),$(a==="bilinear"||a==="nearest",()=>`method must be bilinear or nearest, but was ${a}`);let l={image:i,boxes:o,boxInd:u},d={method:a,extrapolationValue:s,cropSize:n};return O.runKernel(dl,l,d)}var ZD=z({cropAndResize_:XD});function JD(e){let t=C(e,"image","flipLeftRight","float32");$(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let r={image:t};return O.runKernel(yl,r,{})}var YD=z({flipLeftRight_:JD});function QD(e){let t=C(e,"image","grayscaleToRGB"),r=t.rank-1,n=t.shape[r];$(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),$(n===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${n}.`);let a=new Array(t.rank);return a.fill(1,0,r),a[r]=3,Lr(t,a)}var eM=z({grayscaleToRGB_:QD});function tM(e,t,r=0,n=.5){let a=C(e,"image","rotateWithOffset","float32");$(a.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`);let s={image:a},i={radians:t,fillValue:r,center:n};return O.runKernel(ru,s,i)}var rM=z({rotateWithOffset_:tM});function pu(e,t,r,n,a,s){n==null&&(n=.5),a==null&&(a=Number.NEGATIVE_INFINITY),s==null&&(s=0);let i=e.shape[0];return r=Math.min(r,i),$(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),$(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),$(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),$(t.rank===1,()=>"scores must be a 1D tensor"),$(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),$(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:r,iouThreshold:n,scoreThreshold:a,softNmsSigma:s}}function nM(e,t,r,n=.5,a=Number.NEGATIVE_INFINITY){let s=C(e,"boxes","nonMaxSuppression","float32"),i=C(t,"scores","nonMaxSuppression","float32"),o=pu(s,i,r,n,a);r=o.maxOutputSize,n=o.iouThreshold,a=o.scoreThreshold;let u={maxOutputSize:r,iouThreshold:n,scoreThreshold:a};return O.runKernel(Rl,{boxes:s,scores:i},u)}var aM=z({nonMaxSuppression_:nM});function sM(e,t,r){let n=iM(e,t,r),a=n<0?-(n+1):n;e.splice(a,0,t)}function iM(e,t,r){return lM(e,t,r||oM)}function oM(e,t){return e>t?1:e<t?-1:0}function lM(e,t,r){let n=0,a=e.length,s=0,i=!1;for(;n<a;){s=n+(a-n>>>1);let o=r(t,e[s]);o>0?n=s+1:(a=s,i=!o)}return i?n:-n-1}function A1(e,t,r,n,a){return iy(e,t,r,n,a,0)}function F1(e,t,r,n,a,s){return iy(e,t,r,n,a,0,!1,s,!0)}function R1(e,t,r,n,a,s){return iy(e,t,r,n,a,s,!0)}function iy(e,t,r,n,a,s,i=!1,o=!1,u=!1){let p=[];for(let g=0;g<t.length;g++)t[g]>a&&p.push({score:t[g],boxIndex:g,suppressBeginIndex:0});p.sort(fw);let l=s>0?-.5/s:0,d=[],h=[];for(;d.length<r&&p.length>0;){let g=p.pop(),{score:y,boxIndex:b,suppressBeginIndex:x}=g;if(y<a)break;let v=!1;for(let I=d.length-1;I>=x;--I){let T=uM(e,b,d[I]);if(T>=n){v=!0;break}if(g.score=g.score*pM(n,l,T),g.score<=a)break}g.suppressBeginIndex=d.length,v||(g.score===y?(d.push(b),h.push(g.score)):g.score>a&&sM(p,g,fw))}let c=d.length,f=r-c;o&&f>0&&(d.push(...new Array(f).fill(0)),h.push(...new Array(f).fill(0)));let m={selectedIndices:d};return i&&(m.selectedScores=h),u&&(m.validOutputs=c),m}function uM(e,t,r){let n=e.subarray(t*4,t*4+4),a=e.subarray(r*4,r*4+4),s=Math.min(n[0],n[2]),i=Math.min(n[1],n[3]),o=Math.max(n[0],n[2]),u=Math.max(n[1],n[3]),p=Math.min(a[0],a[2]),l=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),h=Math.max(a[1],a[3]),c=(o-s)*(u-i),f=(d-p)*(h-l);if(c<=0||f<=0)return 0;let m=Math.max(s,p),g=Math.max(i,l),y=Math.min(o,d),b=Math.min(u,h),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(c+f-x)}function pM(e,t,r){let n=Math.exp(t*r*r);return r<=e?n:0}function fw(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function dM(e,t,r,n=.5,a=Number.NEGATIVE_INFINITY){let s=C(e,"boxes","nonMaxSuppressionAsync"),i=C(t,"scores","nonMaxSuppressionAsync"),o=pu(s,i,r,n,a);r=o.maxOutputSize,n=o.iouThreshold,a=o.scoreThreshold;let u=await Promise.all([s.data(),i.data()]),p=u[0],l=u[1],{selectedIndices:d}=A1(p,l,r,n,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),Qe(d,"int32")}var hM=dM;function cM(e,t,r,n=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=C(e,"boxes","nonMaxSuppression"),o=C(t,"scores","nonMaxSuppression"),u=pu(i,o,r,n,a,s);r=u.maxOutputSize,n=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;let p={boxes:i,scores:o},l={maxOutputSize:r,iouThreshold:n,scoreThreshold:a,softNmsSigma:s},d=O.runKernel(Ml,p,l);return{selectedIndices:d[0],selectedScores:d[1]}}var fM=z({nonMaxSuppressionWithScore_:cM});async function mM(e,t,r,n=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=C(e,"boxes","nonMaxSuppressionAsync"),o=C(t,"scores","nonMaxSuppressionAsync"),u=pu(i,o,r,n,a,s);r=u.maxOutputSize,n=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;let p=await Promise.all([i.data(),o.data()]),l=p[0],d=p[1],{selectedIndices:h,selectedScores:c}=R1(l,d,r,n,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Qe(h,"int32"),selectedScores:Qe(c)}}var gM=mM;function yM(e,t,r,n=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=C(e,"boxes","nonMaxSuppression"),o=C(t,"scores","nonMaxSuppression"),u=pu(i,o,r,n,a,null),p=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,h={boxes:i,scores:o},c={maxOutputSize:p,iouThreshold:l,scoreThreshold:d,padToMaxOutputSize:s},f=O.runKernel(Dl,h,c);return{selectedIndices:f[0],validOutputs:f[1]}}var bM=z({nonMaxSuppressionPadded_:yM});async function xM(e,t,r,n=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=C(e,"boxes","nonMaxSuppressionAsync"),o=C(t,"scores","nonMaxSuppressionAsync"),u=pu(i,o,r,n,a,null),p=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,[h,c]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=F1(h,c,p,l,d,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Qe(f,"int32"),validOutputs:ve(m,"int32")}}var wM=xM;function vM(e,t,r=!1,n=!1){let a=C(e,"images","resizeBilinear");$(a.rank===3||a.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`),$(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),$(n===!1||r===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=a,i=!1;a.rank===3&&(i=!0,s=P(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let o={images:s},u={alignCorners:r,halfPixelCenters:n,size:t},p=O.runKernel(Bi,o,u);return i?P(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var D1=z({resizeBilinear_:vM});function kM(e,t,r=!1,n=!1){let a=C(e,"images","resizeNearestNeighbor");$(a.rank===3||a.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`),$(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),$(a.dtype==="float32"||a.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),$(n===!1||r===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=a,i=!1;a.rank===3&&(i=!0,s=P(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let o={images:s},u={alignCorners:r,halfPixelCenters:n,size:t},p=O.runKernel(Pi,o,u);return i?P(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var M1=z({resizeNearestNeighbor_:kM});function IM(e,t="binary",r=!1,n=.5){let a=C(e,"image","threshold"),s=.2989,i=.587,o=.114,u=a.shape[0]*a.shape[1],p=L(Qe([n]),255),l,d,h,c;if($(a.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`),$(a.shape[2]===3||a.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`),$(a.dtype==="int32"||a.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`),$(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),a.shape[2]===3){[l,d,h]=Nr(a,[1,1,1],-1);let m=L(l,s),g=L(d,i),y=L(h,o);c=J(J(m,g),y)}else c=e;if(t==="otsu"){let m=mg(se(gc(c),"int32"),hr([]),256);p=SM(m,u)}let f=r?Xa(c,p):br(c,p);return se(L(f,255),"int32")}function SM(e,t){let r=Qe([-1]),n=Qe([0]),a=Qe([0]),s,i,o,u,p,l;for(let d=0;d<e.size-1;d++){s=Ve(e,0,d+1),i=Ve(e,d+1),p=me(ge(s),t),l=me(ge(i),t);let h=ge(L(s,Ds(0,s.size)));o=me(h,ge(s));let c=Br(i.shape,s.size),f=J(Ds(0,i.size),c),m=L(i,f);u=me(ge(m),ge(i));let g=he(o,u),y=he(o,u),b=L(p,l);a=L(L(b,g),y);let x=br(a,n);n=Gt(x,a,n),r=Gt(x,Qe([d]),r)}return r}var NM=z({threshold_:IM});function TM(e,t,r="nearest",n="constant",a=0,s){let i=C(e,"image","transform","float32"),o=C(t,"transforms","transform","float32");$(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),$(o.rank===2&&(o.shape[0]===i.shape[0]||o.shape[0]===1)&&o.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),$(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let u={image:i,transforms:o},p={interpolation:r,fillMode:n,fillValue:a,outputShape:s};return O.runKernel(Ql,u,p)}var CM=z({transform_:TM});function _M(e,t,r){let n=C(e,"a","bandPart");$(n.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`);let a=n.shape,[s,i]=n.shape.slice(-2),o,u;typeof t=="number"?($(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),$(t<=s,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`),o=C(t<0?s:t,"numLower","bandPart")):($(t.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),o=Gt(Do(t,0),s,Da(t,s))),typeof r=="number"?($(r%1===0,()=>`bandPart(): numUpper must be an integer, got ${r}.`),$(r<=i,()=>`bandPart(): numUpper (${r}) must not be greater than the number of columns (${i}).`),u=C(r<0?i:r,"numUpper","bandPart")):($(r.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),u=Gt(Do(r,0),i,Da(r,i)));let p=P(Ds(0,s,1,"int32"),[-1,1]),l=Ds(0,i,1,"int32"),d=he(p,l),h=cn(Xa(d,o),da(d,ht(u))),c=wt([s,i],n.dtype);return P(Ot(Nt(P(n,[-1,s,i])).map(f=>Gt(h,f,c))),a)}var EM=z({bandPart_:_M});function $M(e){let t;if(Array.isArray(e)){t=!1,$(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let a=e[0].shape[0];for(let s=1;s<e.length;++s)$(e[s].shape[0]===a,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[s].shape[0]} vs. ${a})`)}else t=!0,e=Nr(e,e.shape[0],0).map(a=>Ja(a,[0]));$(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let r=[],n=e;for(let a=0;a<e.length;++a)r.push(O.tidy(()=>{let s=n[a];if(a>0)for(let i=0;i<a;++i){let o=L(ge(L(r[i],s)),r[i]);s=he(s,o)}return me(s,su(s,"euclidean"))}));return t?Ot(r,0):r}var AM=z({gramSchmidt_:$M});function FM(e,t=!1){if($(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return mw(e,t);{let r=e.shape.slice(0,e.shape.length-2).reduce((u,p)=>u*p),n=Nt(P(e,[r,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];n.forEach(u=>{let[p,l]=mw(u,t);a.push(p),s.push(l)});let i=P(Ot(a,0),e.shape),o=P(Ot(s,0),e.shape);return[i,o]}}function mw(e,t=!1){return O.tidy(()=>{$(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let r=e.shape[0],n=e.shape[1],a=lc(r),s=Ln(e),i=Pn([[1]],[1,1]),o=Ln(i),u=r>=n?n:r;for(let p=0;p<u;++p){let l=s,d=o,h=a;[o,s,a]=O.tidy(()=>{let c=Ve(s,[p,p],[r-p,1]),f=su(c),m=Ve(s,[p,p],[1,1]),g=Gt(br(m,0),Pn([[-1]]),Pn([[1]])),y=he(m,L(g,f)),b=me(c,y);b.shape[0]===1?o=Ln(i):o=at([i,Ve(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);let x=ht(me(Me(g,y),f)),v=Ve(s,[p,0],[r-p,n]),I=L(x,o),T=Oe(o);if(p===0)s=he(v,Me(I,Me(T,v)));else{let A=he(v,Me(I,Me(T,v)));s=at([Ve(s,[0,0],[p,n]),A],0)}let _=Oe(I),E=Ve(a,[0,p],[r,a.shape[1]-p]);if(p===0)a=he(E,Me(Me(E,o),_));else{let A=he(E,Me(Me(E,o),_));a=at([Ve(a,[0,0],[r,p]),A],1)}return[o,s,a]}),_e([l,d,h])}return!t&&r>n&&(a=Ve(a,[0,0],[r,n]),s=Ve(s,[0,0],[n,n])),[a,s]})}var RM=z({qr_:FM}),pr;(function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(pr||(pr={}));function DM(e,t,r=pr.SUM_BY_NONZERO_WEIGHTS){let n=C(e,"losses","computeWeightedLoss"),a=null;t!=null&&(a=C(t,"weights","computeWeightedLoss"));let s=a==null?n:L(n,a);if(r===pr.NONE)return s;if(r===pr.SUM)return ge(s);if(r===pr.MEAN){if(a==null)return xt(s);{let i=n.size/a.size,o=me(ge(s),ge(a));return i>1?me(o,ve(i)):o}}if(r===pr.SUM_BY_NONZERO_WEIGHTS){if(a==null)return me(ge(s),ve(n.size));{let i=L(a,Pr(n.shape)),o=se(ge(Rs(i,ve(0))),"float32");return me(ge(s),o)}}throw Error(`Unknown reduction: ${r}`)}var ha=z({computeWeightedLoss_:DM});function MM(e,t,r,n=pr.SUM_BY_NONZERO_WEIGHTS){let a=C(e,"labels","absoluteDifference"),s=C(t,"predictions","absoluteDifference"),i=null;r!=null&&(i=C(r,"weights","absoluteDifference")),gr(a.shape,s.shape,"Error in absoluteDifference: ");let o=_t(he(a,s));return ha(o,i,n)}var OM=z({absoluteDifference_:MM});function zM(e,t,r,n,a=pr.SUM_BY_NONZERO_WEIGHTS){let s=C(e,"labels","cosineDistance"),i=C(t,"predictions","cosineDistance"),o=null;n!=null&&(o=C(n,"weights","cosineDistance")),gr(s.shape,i.shape,"Error in cosineDistance: ");let u=ve(1),p=he(u,ge(L(s,i),r,!0));return ha(p,o,a)}var LM=z({cosineDistance_:zM});function PM(e,t,r,n=pr.SUM_BY_NONZERO_WEIGHTS){let a=C(e,"labels","hingeLoss"),s=C(t,"predictions","hingeLoss"),i=null;r!=null&&(i=C(r,"weights","hingeLoss")),gr(a.shape,s.shape,"Error in hingeLoss: ");let o=ve(1);a=he(L(ve(2),a),o);let u=et(he(o,L(a,s)));return ha(u,i,n)}var BM=z({hingeLoss_:PM});function WM(e,t,r,n=1,a=pr.SUM_BY_NONZERO_WEIGHTS){let s=C(e,"labels","huberLoss"),i=C(t,"predictions","huberLoss"),o=null;r!=null&&(o=C(r,"weights","huberLoss")),gr(s.shape,i.shape,"Error in huberLoss: ");let u=ve(n),p=_t(he(i,s)),l=Da(p,u),d=he(p,l),h=J(L(ve(.5),nt(l)),L(u,d));return ha(h,o,a)}var VM=z({huberLoss_:WM});function UM(e,t,r,n=1e-7,a=pr.SUM_BY_NONZERO_WEIGHTS){let s=C(e,"labels","logLoss"),i=C(t,"predictions","logLoss"),o=null;r!=null&&(o=C(r,"weights","logLoss")),gr(s.shape,i.shape,"Error in logLoss: ");let u=ve(1),p=ve(n),l=ht(L(s,Vr(J(i,p)))),d=L(he(u,s),Vr(J(he(u,i),p))),h=he(l,d);return ha(h,o,a)}var GM=z({logLoss_:UM});function HM(e,t,r,n=pr.SUM_BY_NONZERO_WEIGHTS){let a=C(e,"labels","meanSquaredError"),s=C(t,"predictions","meanSquaredError"),i=null;r!=null&&(i=C(r,"weights","meanSquaredError")),gr(a.shape,s.shape,"Error in meanSquaredError: ");let o=Ic(a,s);return ha(o,i,n)}var jM=z({meanSquaredError_:HM});function qM(e,t){let r=C(e,"labels","sigmoidCrossEntropyWithLogits"),n=C(t,"logits","sigmoidCrossEntropyWithLogits");gr(r.shape,n.shape,"Error in sigmoidCrossEntropyWithLogits: ");let a=et(n),s=L(n,r),i=Vp(fr(ht(_t(n))));return J(he(a,s),i)}function KM(e,t,r,n=0,a=pr.SUM_BY_NONZERO_WEIGHTS){let s=C(e,"multiClassLabels","sigmoidCrossEntropy"),i=C(t,"logits","sigmoidCrossEntropy"),o=null;if(r!=null&&(o=C(r,"weights","sigmoidCrossEntropy")),gr(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),n>0){let p=ve(n),l=ve(1),d=ve(.5);s=J(L(s,he(l,p)),L(d,p))}let u=qM(s,i);return ha(u,o,a)}var XM=z({sigmoidCrossEntropy_:KM});function ZM(e,t,r=-1){if(r===-1&&(r=t.rank-1),r!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${r}`);return Vn((n,a,s)=>{let i=dc(a,[r],!0),o=he(se(a,"float32"),i);s([n,o]);let u=ht(L(o,n));return{value:ge(u,[r]),gradFunc:(p,l)=>{let[d,h]=l,c=Fs(p.shape,[r]);return[L(P(p,c),he(se(d,"float32"),fr(h))),L(P(p,c),he(fr(h),se(d,"float32")))]}}})(e,t)}function JM(e,t,r,n=0,a=pr.SUM_BY_NONZERO_WEIGHTS){let s=C(e,"onehotLabels","softmaxCrossEntropy"),i=C(t,"logits","softmaxCrossEntropy"),o=null;if(r!=null&&(o=C(r,"weights","softmaxCrossEntropy")),gr(s.shape,i.shape,"Error in softmaxCrossEntropy: "),n>0){let p=ve(n),l=ve(1),d=ve(s.shape[1]);s=J(L(s,he(l,p)),me(p,d))}let u=ZM(s,i);return ha(u,o,a)}var YM=z({softmaxCrossEntropy_:JM});function QM(e,t,r,n){let a=C(e,"indices","sparseFillEmptyRows","int32"),s=C(t,"values","sparseFillEmptyRows"),i=C(r,"denseShape","sparseFillEmptyRows","int32"),o=C(n,"defaultValue","sparseFillEmptyRows",s.dtype);if(a.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${a.shape}`);if(s.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(o.rank!==0)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);let u={indices:a,values:s,denseShape:i,defaultValue:o},p=O.runKernel(kp,u);return{outputIndices:p[0],outputValues:p[1],emptyRowIndicator:p[2],reverseIndexMap:p[3]}}var eO=z({sparseFillEmptyRows_:QM});function tO(e,t,r){let n=C(e,"inputIndices","sparseReshape","int32"),a=C(t,"inputShape","sparseReshape","int32"),s=C(r,"newShape","sparseReshape","int32");if(n.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${n.shape}`);if(a.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(s.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i={inputIndices:n,inputShape:a,newShape:s},o=O.runKernel(Xl,i);return{outputIndices:o[0],outputShape:o[1]}}var rO=z({sparseReshape_:tO});function nO(e,t,r){let n=C(e,"data","sparseSegmentMean"),a=C(t,"indices","sparseSegmentMean","int32"),s=C(r,"segmentIds","sparseSegmentMean","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${a.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);let i={data:n,indices:a,segmentIds:s};return O.runKernel(Ip,i)}var aO=z({sparseSegmentMean_:nO});function sO(e,t,r){let n=C(e,"data","sparseSegmentSum"),a=C(t,"indices","sparseSegmentSum","int32"),s=C(r,"segmentIds","sparseSegmentSum","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${a.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);let i={data:n,indices:a,segmentIds:s};return O.runKernel(Sp,i)}var iO=z({sparseSegmentSum_:sO});function oO(e,t,r,n,a,s,i,o){let u=C(e,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);let p=C(t,"dataSplits","stringNGrams");if(p.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let l={separator:r,nGramWidths:n,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},d={data:u,dataSplits:p},h=O.runKernel(Cp,d,l);return{nGrams:h[0],nGramsSplits:h[1]}}var lO=z({stringNGrams_:oO});function uO(e,t,r=!0){let n=C(e,"input","stringSplit","string"),a=C(t,"delimiter","stringSplit","string");if(n.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${n.shape}`);if(a.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);let s={skipEmpty:r},i={input:n,delimiter:a},o=O.runKernel(_p,i,s);return{indices:o[0],values:o[1],shape:o[2]}}var pO=z({stringSplit_:uO});function dO(e,t){let r=C(e,"input","stringToHashBucketFast","string"),n={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let a={input:r};return O.runKernel(Ep,a,n)}var hO=z({stringToHashBucketFast_:dO});function cO(e,t,r,n=!0){let a=C(e,"input","staticRegexReplace","string"),s={pattern:t,rewrite:r,replaceGlobal:n};return O.runKernel(Tp,{x:a},s)}var fO=z({staticRegexReplace_:cO}),O1={fft:Xp,ifft:Lo,rfft:Zp,irfft:kc},z1={hammingWindow:GD,hannWindow:E1,frame:$1,stft:KD},xn={flipLeftRight:YD,grayscaleToRGB:eM,resizeNearestNeighbor:M1,resizeBilinear:D1,rotateWithOffset:rM,cropAndResize:ZD,nonMaxSuppression:aM,nonMaxSuppressionAsync:hM,nonMaxSuppressionWithScore:fM,nonMaxSuppressionWithScoreAsync:gM,nonMaxSuppressionPadded:bM,nonMaxSuppressionPaddedAsync:wM,threshold:NM,transform:CM},oy={bandPart:EM,gramSchmidt:AM,qr:RM},L1={absoluteDifference:OM,computeWeightedLoss:ha,cosineDistance:LM,hingeLoss:BM,huberLoss:VM,logLoss:GM,meanSquaredError:jM,sigmoidCrossEntropy:XM,softmaxCrossEntropy:YM},P1={sparseFillEmptyRows:eO,sparseReshape:rO,sparseSegmentMean:aO,sparseSegmentSum:iO},B1={stringNGrams:lO,stringSplit:pO,stringToHashBucketFast:hO,staticRegexReplace:fO},re={};Ee(re,{Serializable:()=>W1,SerializationMap:()=>hs,registerClass:()=>V1});var W1=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},hs=class{constructor(){this.classNameMap={}}static getMap(){return hs.instance==null&&(hs.instance=new hs),hs.instance}static register(e){hs.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function V1(e){$(e.className!=null,()=>"Class being registered does not have the static className property defined."),$(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),$(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),hs.register(e)}var ca=class extends W1{minimize(e,t=!1,r){let{value:n,grads:a}=this.computeGradients(e,r);if(r!=null){let s=r.map(i=>({name:i.name,tensor:a[i.name]}));this.applyGradients(s)}else this.applyGradients(a);return _e(a),t?n:(n.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return G0(e,t)}dispose(){this.iterations_!=null&&_e(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:ve(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(ca,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});var ly=class extends ca{static get className(){return"Adadelta"}constructor(e,t,r=null){super(),this.learningRate=e,this.rho=t,this.epsilon=r,this.accumulatedGrads=[],this.accumulatedUpdates=[],r==null&&(this.epsilon=O.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,r)=>{let n=O.registeredVariables[t],a=!1;this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${t}/accum_grad`,variable:W(()=>He(n).variable(a))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${t}/accum_var`,variable:W(()=>He(n).variable(a))});let s=Array.isArray(e)?e[r].tensor:e[t];if(s==null)return;let i=this.accumulatedGrads[r].variable,o=this.accumulatedUpdates[r].variable;W(()=>{let u=J(L(i,this.rho),L(nt(s),1-this.rho)),p=L(me(nr(J(o,this.epsilon)),nr(J(i,this.epsilon))),s),l=J(L(o,this.rho),L(nt(p),1-this.rho));i.assign(u),o.assign(l);let d=J(L(p,-this.learningRate),n);n.assign(d)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(_e(this.accumulatedGrads.map(e=>e.variable)),_e(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,r=!1;this.accumulatedGrads=e.slice(0,t).map(n=>({originalName:n.name,variable:n.tensor.variable(r)})),this.accumulatedUpdates=e.slice(t,t*2).map(n=>({originalName:n.name,variable:n.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}},uy=class extends ca{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,r)=>{let n=O.registeredVariables[t];this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${t}/accumulator`,variable:W(()=>Br(n.shape,this.initialAccumulatorValue).variable(!1))});let a=Array.isArray(e)?e[r].tensor:e[t];if(a==null)return;let s=this.accumulatedGrads[r].variable;W(()=>{let i=J(s,nt(a));s.assign(i);let o=J(L(me(a,nr(J(i,O.backend.epsilon()))),-this.learningRate),n);n.assign(o)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&_e(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(r=>({originalName:r.name,variable:r.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}},py=class extends ca{static get className(){return"Adam"}constructor(e,t,r,n=null){super(),this.learningRate=e,this.beta1=t,this.beta2=r,this.epsilon=n,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],W(()=>{this.accBeta1=ve(t).variable(),this.accBeta2=ve(r).variable()}),n==null&&(this.epsilon=O.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);W(()=>{let r=he(1,this.accBeta1),n=he(1,this.accBeta2);t.forEach((a,s)=>{let i=O.registeredVariables[a],o=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${a}/m`,variable:W(()=>He(i).variable(o))}),this.accumulatedSecondMoment[s]==null&&(this.accumulatedSecondMoment[s]={originalName:`${a}/v`,variable:W(()=>He(i).variable(o))});let u=Array.isArray(e)?e[s].tensor:e[a];if(u==null)return;let p=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,d=J(L(p,this.beta1),L(u,1-this.beta1)),h=J(L(l,this.beta2),L(nt(u),1-this.beta2)),c=me(d,r),f=me(h,n);p.assign(d),l.assign(h);let m=J(L(me(c,J(nr(f),this.epsilon)),-this.learningRate),i);i.assign(m)}),this.accBeta1.assign(L(this.accBeta1,this.beta1)),this.accBeta2.assign(L(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&_e(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&_e(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),W(()=>{this.accBeta1.assign(oa(this.beta1,this.iterations_+1)),this.accBeta2.assign(oa(this.beta2,this.iterations_+1))});let t=e.length/2,r=!1;this.accumulatedFirstMoment=e.slice(0,t).map(n=>({originalName:n.name,variable:n.tensor.variable(r)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(n=>({originalName:n.name,variable:n.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}},dy=class extends ca{static get className(){return"Adamax"}constructor(e,t,r,n=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=r,this.epsilon=n,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],W(()=>{this.iteration=ve(0).variable(),this.accBeta1=ve(t).variable()}),n==null&&(this.epsilon=O.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);W(()=>{let r=he(1,this.accBeta1),n=me(-this.learningRate,J(L(this.iteration,this.decay),1));t.forEach((a,s)=>{let i=O.registeredVariables[a],o=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${a}/m`,variable:He(i).variable(o)}),this.accumulatedWeightedInfNorm[s]==null&&(this.accumulatedWeightedInfNorm[s]={originalName:`${a}/v`,variable:He(i).variable(o)});let u=Array.isArray(e)?e[s].tensor:e[a];if(u==null)return;let p=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,d=J(L(p,this.beta1),L(u,1-this.beta1)),h=L(l,this.beta2),c=_t(u),f=Hn(h,c);p.assign(d),l.assign(f);let m=J(L(me(n,r),me(d,J(f,this.epsilon))),i);i.assign(m)}),this.iteration.assign(J(this.iteration,1)),this.accBeta1.assign(L(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&_e(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&_e(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}},Dc=class extends ca{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,r)=>{let n=Array.isArray(e)?e[r].tensor:e[t];if(n==null)return;let a=O.registeredVariables[t];W(()=>{let s=J(L(this.c,n),a);a.assign(s)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Dt(ve(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}},hy=class extends Dc{static get className(){return"Momentum"}constructor(e,t,r=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=r,this.accumulations=[],this.m=ve(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,r)=>{let n=O.registeredVariables[t];this.accumulations[r]==null&&(this.accumulations[r]={originalName:`${t}/momentum`,variable:W(()=>He(n).variable(!1))});let a=this.accumulations[r].variable,s=Array.isArray(e)?e[r].tensor:e[t];s!=null&&W(()=>{let i,o=J(L(this.m,a),s);this.useNesterov?i=J(L(this.c,J(s,L(o,this.m))),n):i=J(L(this.c,o),n),a.assign(o),n.assign(i)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&_e(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(r=>({originalName:r.name,variable:r.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}},cy=class extends ca{static get className(){return"RMSProp"}constructor(e,t=.9,r=0,n=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=r,this.epsilon=n,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,n==null&&(this.epsilon=O.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,r)=>{let n=O.registeredVariables[t],a=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${t}/rms`,variable:W(()=>He(n).variable(a))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${t}/momentum`,variable:W(()=>He(n).variable(a))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${t}/mg`,variable:W(()=>He(n).variable(a))});let s=Array.isArray(e)?e[r].tensor:e[t];if(s==null)return;let i=this.accumulatedMeanSquares[r].variable,o=this.accumulatedMoments[r].variable;W(()=>{let u=J(L(i,this.decay),L(nt(s),1-this.decay));if(this.centered){let p=this.accumulatedMeanGrads[r].variable,l=J(L(p,this.decay),L(s,1-this.decay)),d=me(L(s,this.learningRate),nr(he(u,J(nt(l),this.epsilon)))),h=J(L(o,this.momentum),d);i.assign(u),p.assign(l),o.assign(h);let c=he(n,h);n.assign(c)}else{let p=J(L(i,this.decay),L(nt(s),1-this.decay)),l=J(L(o,this.momentum),me(L(s,this.learningRate),nr(J(p,this.epsilon))));i.assign(p),o.assign(l);let d=he(n,l);n.assign(d)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&_e(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&_e(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&_e(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,r=!1;this.accumulatedMeanSquares=e.slice(0,t).map(n=>({originalName:n.name,variable:n.tensor.variable(r)})),this.accumulatedMoments=e.slice(t,t*2).map(n=>({originalName:n.name,variable:n.tensor.variable(r)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(n=>({originalName:n.name,variable:n.tensor.variable(r)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}},mO=[ly,uy,py,dy,hy,cy,Dc];function gO(){for(let e of mO)V1(e)}var rr={};Ee(rr,{browserFiles:()=>IO,browserHTTPRequest:()=>_O,concatenateArrayBuffers:()=>Qm,copyModel:()=>x$,decodeWeights:()=>g0,encodeWeights:()=>KE,fromMemory:()=>$O,fromMemorySync:()=>q1,getLoadHandlers:()=>s$,getModelArtifactsForJSON:()=>eg,getModelArtifactsForJSONSync:()=>b0,getModelArtifactsInfoForJSON:()=>Op,getSaveHandlers:()=>a$,getWeightSpecs:()=>x0,http:()=>my,isHTTPScheme:()=>Qf,listModels:()=>y$,loadWeights:()=>SO,moveModel:()=>w$,registerLoadRouter:()=>n$,registerSaveRouter:()=>r$,removeModel:()=>b$,weightsLoaderFactory:()=>G1,withSaveHandler:()=>AO,withSaveHandlerSync:()=>FO});var yO="model",bO=".json",xO=".weights.bin";function gw(e){return new Promise(t=>setTimeout(t)).then(e)}var Bo=class{constructor(e){if(!H().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Bo.URL_SCHEME)&&(e=e.slice(Bo.URL_SCHEME.length)),(e==null||e.length===0)&&(e=yO),this.modelJsonFileName=e+bO,this.weightDataFileName=e+xO}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let r=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],n=y0(e,r),a=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),s=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=a,await gw(()=>s.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;i.download=this.weightDataFileName,i.href=t,await gw(()=>i.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Op(e)}}}};Bo.URL_SCHEME="downloads://";var wO=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let r=new FileReader;r.onload=n=>{let a=JSON.parse(n.target.result),s=a.modelTopology;if(s==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(a.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:s});return}let i=eg(a,o=>this.loadWeights(o));e(i)},r.onerror=n=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),r.readAsText(this.jsonFile)})}loadWeights(e){let t=[],r=[];for(let s of e)t.push(...s.weights),r.push(...s.paths);let n=this.checkManifestAndWeightFiles(e),a=r.map(s=>this.loadWeightsFile(s,n[s]));return Promise.all(a).then(s=>[t,Qm(s)])}loadWeightsFile(e,t){return new Promise((r,n)=>{let a=new FileReader;a.onload=s=>{let i=s.target.result;r(i)},a.onerror=s=>n(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],r=this.weightsFiles.map(a=>cw(a.name)),n={};for(let a of e)a.paths.forEach(s=>{let i=cw(s);if(t.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(t.push(i),r.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);n[s]=this.weightsFiles[r.indexOf(i)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return n}},vO=e=>H().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Bo.URL_SCHEME)?kO(e.slice(Bo.URL_SCHEME.length)):null;St.registerSaveRouter(vO);function kO(e="model"){return new Bo(e)}function IO(e){return new wO(e)}function yw(e,t,r,n){i(e),r=r==null?0:r,n=n==null?1:n,o(r,n);let a=0,s=u=>(u.then(p=>{let l=r+ ++a/e.length*(n-r);return t(l),p}),u);function i(u){$(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function o(u,p){$(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),$(p>=0&&p<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${p}`),$(p>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${p}`)}return Promise.all(e.map(s))}async function U1(e,t){t==null&&(t={});let r=t.fetchFunc==null?H().platform.fetch:t.fetchFunc,n=e.map(p=>r(p,t.requestInit,{isBinary:!0})),a=0,s=.5,i=(t.onProgress==null?await Promise.all(n):await yw(n,t.onProgress,a,s)).map(p=>p.arrayBuffer());return t.onProgress==null?await Promise.all(i):await yw(i,t.onProgress,.5,1)}async function SO(e,t="",r,n){return G1(a=>U1(a,{requestInit:n}))(e,t,r)}function G1(e){return async(t,r="",n)=>{let a=t.map(()=>!1),s={},i=n!=null?n.map(()=>!1):[],o=[];if(t.forEach((c,f)=>{let m=0;c.weights.forEach(g=>{let y="quantization"in g?g.quantization.dtype:g.dtype,b=jf[y]*dt(g.shape),x=()=>{a[f]=!0,s[f]==null&&(s[f]=[]),s[f].push({manifestEntry:g,groupOffset:m,sizeBytes:b})};n!=null?n.forEach((v,I)=>{v===g.name&&(x(),i[I]=!0)}):x(),o.push(g.name),m+=b})}),!i.every(c=>c)){let c=n.filter((f,m)=>!i[m]);throw new Error(`Could not find weights in manifest with names: ${c.join(", ")}. 
Manifest JSON has weights with names: ${o.join(", ")}.`)}let u=a.reduce((c,f,m)=>(f&&c.push(m),c),[]),p=[];u.forEach(c=>{t[c].paths.forEach(f=>{let m=r+(r.endsWith("/")?"":"/")+f;p.push(m)})});let l=await e(p),d={},h=0;return u.forEach(c=>{let f=t[c].paths.length,m=0;for(let x=0;x<f;x++)m+=l[h+x].byteLength;let g=new ArrayBuffer(m),y=new Uint8Array(g),b=0;for(let x=0;x<f;x++){let v=new Uint8Array(l[h+x]);y.set(v,b),b+=v.byteLength}s[c].forEach(x=>{let v=g.slice(x.groupOffset,x.groupOffset+x.sizeBytes),I=g0(v,[x.manifestEntry]);for(let T in I)d[T]=I[T]}),h+=f}),d}}var NO="application/octet-stream",TO="application/json",fy=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?($(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=H().platform.fetch,$(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&$(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let r=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],n=y0(e,r);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:TO}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:NO}),"model.weights.bin");let a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Op(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let s=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?s+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":s+=" Please make sure the server is serving valid JSON for this request.",new Error(s)}let r=t.modelTopology,n=t.weightsManifest;if(r==null&&n==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return eg(t,a=>this.loadWeights(a))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[r,n]=CO(t),a=this.weightPathPrefix||r,s=x0(e),i=[],o=[];for(let p of e)for(let l of p.paths)this.weightUrlConverter!=null?o.push(this.weightUrlConverter(l)):i.push(a+l+n);this.weightUrlConverter&&i.push(...await Promise.all(o));let u=await U1(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[s,Qm(u)]}};fy.URL_SCHEME_REGEX=/^https?:\/\//;function CO(e){let t=e.lastIndexOf("/"),r=e.lastIndexOf("?"),n=e.substring(0,t),a=r>t?e.substring(r):"";return[n+"/",a]}function Qf(e){return e.match(fy.URL_SCHEME_REGEX)!=null}var H1=(e,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let r=!0;if(Array.isArray(e)?r=e.every(n=>Qf(n)):r=Qf(e),r)return my(e,t)}return null};St.registerSaveRouter(H1);St.registerLoadRouter(H1);function my(e,t){return new fy(e,t)}function _O(e,t){return my(e,t)}var If=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},j1=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},EO=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function $O(e,t,r,n){let a=arguments;return new EO(q1(...a))}function q1(e,t,r,n){return arguments.length===1?e.modelTopology!=null||e.weightSpecs!=null?new If(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new If({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new If({modelTopology:e,weightSpecs:t,weightData:r,trainingConfig:n}))}function AO(e){return new j1(e)}function FO(e){return new j1(e)}var K1={};Ee(K1,{confusionMatrix:()=>DO});function RO(e,t,r){let n=C(e,"labels","confusionMatrix"),a=C(t,"predictions","confusionMatrix");$(r==null||r>0&&Number.isInteger(r),()=>`If provided, numClasses must be a positive integer, but got ${r}`),$(n.rank===1,()=>`Expected the rank of labels to be 1, but got ${n.rank}`),$(a.rank===1,()=>`Expected the rank of predictions to be 1, but got ${a.rank}`),$(n.shape[0]===a.shape[0],()=>`Mismatch in the number of examples: ${n.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`),$(r>0&&Number.isInteger(r),()=>`numClasses is required to be a positive integer, but got ${r}`);let s=Mo(se(n,"int32"),r),i=Mo(se(a,"int32"),r),o=Oe(s),u=Me(o,i);return se(u,"int32")}var DO=z({confusionMatrix_:RO}),Mc={};Ee(Mc,{fromPixels:()=>WO,fromPixelsAsync:()=>PO,toPixels:()=>BO});var os;function X1(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(e==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let r=!1,n=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)r=!0;else if(typeof ImageData<"u"&&e instanceof ImageData)n=!0;else if(typeof HTMLVideoElement<"u"&&e instanceof HTMLVideoElement)a=!0;else if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement)s=!0;else if(e.getContext!=null)i=!0;else if(typeof ImageBitmap<"u"&&e instanceof ImageBitmap)o=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(ih(sh,O.backendName)!=null){let h={pixels:e},c={numChannels:t};return O.runKernel(sh,h,c)}let[u,p]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height],l;if(i)l=e.getContext("2d").getImageData(0,0,u,p).data;else if(n||r)l=e.data;else if(s||a||o){if(os==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")os=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else os=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});os.canvas.width=u,os.canvas.height=p,os.drawImage(e,0,0,u,p),l=os.getImageData(0,0,u,p).data}let d;if(t===4)d=new Int32Array(l);else{let h=u*p;d=new Int32Array(h*t);for(let c=0;c<h;c++)for(let f=0;f<t;++f)d[c*t+f]=l[c*4+f]}return Sc(d,[p,u,t],"int32")}function MO(e){return e!=null&&e.data instanceof Uint8Array}function OO(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function zO(e){return e!=null&&e.width!==0&&e.height!==0}function LO(e){return OO()&&!(e instanceof ImageBitmap)&&zO(e)&&!MO(e)}async function PO(e,t=3){let r=null;if(H().getBool("WRAP_TO_IMAGEBITMAP")&&LO(e)){let n;try{n=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch{n=null}n!=null&&n.width===e.width&&n.height===e.height?r=n:r=e}else r=e;return X1(r,t)}async function BO(e,t){let r=C(e,"img","toPixels");if(!(e instanceof Ue)){let p=r;r=se(p,"int32"),p.dispose()}if(r.rank!==2&&r.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${r.rank}.`);let[n,a]=r.shape.slice(0,2),s=r.rank===2?1:r.shape[2];if(s>4||s===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if(r.dtype!=="float32"&&r.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${r.dtype}. Please use float32 or int32 tensors.`);let i=await r.data(),o=r.dtype==="float32"?255:1,u=new Uint8ClampedArray(a*n*4);for(let p=0;p<n*a;++p){let l=[0,0,0,255];for(let h=0;h<s;h++){let c=i[p*s+h];if(r.dtype==="float32"){if(c<0||c>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${c}.`)}else if(r.dtype==="int32"&&(c<0||c>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${c}.`);s===1?(l[0]=c*o,l[1]=c*o,l[2]=c*o):l[h]=c*o}let d=p*4;u[d+0]=Math.round(l[0]),u[d+1]=Math.round(l[1]),u[d+2]=Math.round(l[2]),u[d+3]=Math.round(l[3])}if(t!=null){t.width=a,t.height=n;let p=t.getContext("2d"),l=new ImageData(u,a,n);p.putImageData(l,0,0)}return r!==e&&r.dispose(),u}var WO=z({fromPixels_:X1}),gy={};Ee(gy,{prepareAndValidate:()=>Z1});function Z1(e,t){let r=e.shape.length,n=t.shape.length;if(r<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${r}.`);if(n<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[n-1]>r)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[n-1]} vs. ${r}`);if(dt(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let a=t.shape,s=a[a.length-1],i=1;for(let d=0;d<a.length-1;++d)i*=a[d];let o=e.shape,u=a.slice();u.pop();let p=1;for(let d=s;d<r;++d)p*=o[d],u.push(o[d]);let l=[...Yo(e.shape).map(d=>d/p),1].slice(0,s);return[u,i,p,l]}var zt={};Ee(zt,{assertParamsValid:()=>UO,computeFlatOffset:()=>KO,computeOutShape:()=>HO,getNormalizedAxes:()=>jO,isSliceContinous:()=>qO,maskToAxes:()=>GO,parseSliceParams:()=>sk,sliceInfo:()=>XO,startForAxis:()=>nk,startIndicesWithElidedDims:()=>ek,stopForAxis:()=>ak,stopIndicesWithElidedDims:()=>tk,stridesForAxis:()=>rk,stridesWithElidedDims:()=>J1});var em=-2,VO=-1;function UO(e,t,r){let n=e.shape.length;$(n===t.length,()=>`Error in slice${n}D: Length of begin ${t} must match the rank of the array (${n}).`),$(n===r.length,()=>`Error in slice${n}D: Length of size ${r} must match the rank of the array (${n}).`);for(let a=0;a<n;++a)$(t[a]+r[a]<=e.shape[a],()=>`Error in slice${n}D: begin[${a}] + size[${a}] (${t[a]+r[a]}) would overflow input.shape[${a}] (${e.shape[a]})`)}function GO(e){let t=[],r=0;for(;e>0;)e&1&&t.push(r),e/=2,r++;return t}function HO(e,t,r){let n=[];for(let a=0;a<e.length;a++)n[a]=Math.ceil((t[a]-e[a])/r[a]);return n}function J1(e,t,r,n){let a=[...e];for(let s=a.length;s<n.length;s++)a.push(1);for(let s=0;s<r;s++)s===0?a[t]=1:(a.splice(t,0,1),a.pop());return a}function Y1(e,t,r){return r<=e?r:r-(t-1)}function Q1(e,t){let r=[];for(let n=0;n<e;n++)r.push(t+n);return r}function jO(e,t,r,n,a,s,i,o,u){let p=e.length,l=new Array(p),d=new Array(p),h=new Array(p);if(t.length&&r>0){let c=t[0],f=r+1;l=ek(i,c,f,n,e),d=tk(o,c,f,a,e),h=J1(s,c,f,e)}else for(let c=0;c<p;c++)l[c]=nk(i,n,s,e,c,u),d[c]=ak(o,a,s,e,c,u),h[c]=rk(s,c,u);return{begin:l,end:d,strides:h}}function ek(e,t,r,n,a){let s=[...a],i=Q1(r,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=0;else{let u=Y1(t,r,o),p=n[u];e&1<<u&&(p=0),s[o]=p}return s}function tk(e,t,r,n,a){let s=[...a],i=Q1(r,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=Number.MAX_SAFE_INTEGER;else{let u=Y1(t,r,o),p=n[u];e&1<<u&&(p=Number.MAX_SAFE_INTEGER),s[o]=p}for(let o=0;o<s.length;o++){let u=a[o];s[o]<0&&(s[o]+=u),s[o]=qu(0,s[o],a[o])}return s}function rk(e,t,r){let n=e[t];return(r&1<<t||n==null)&&(n=1),n}function nk(e,t,r,n,a,s){let i=t[a],o=r[a]||1;(e&1<<a||s&1<<a||i==null)&&(o>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);let u=n[a];return i<0&&(i+=u),i=qu(0,i,u-1),i}function ak(e,t,r,n,a,s){let i=t[a],o=r[a]||1;(e&1<<a||s&1<<a||i==null)&&(o>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);let u=n[a];return i<0&&(i+=u),o>0?i=qu(0,i,u):i=qu(-1,i,u-1),i}function qO(e,t,r){let n=r.length;for(let a=0;a<r.length;a++)if(r[a]>1){n=a;break}for(let a=n+1;a<r.length;a++)if(t[a]>0||r[a]!==e[a])return!1;return!0}function KO(e,t){let r=e.length>0?e[e.length-1]:1;for(let n=0;n<e.length-1;n++)r+=e[n]*t[n];return r}function sk(e,t,r){let n,a=e.shape.length;typeof t=="number"?n=[t,...new Array(a-1).fill(0)]:t.length<a?n=t.concat(new Array(a-t.length).fill(0)):n=t.slice(),n.forEach(i=>{$(i!==-1,()=>"slice() does not support negative begin indexing.")});let s;return r==null?s=new Array(a).fill(-1):typeof r=="number"?s=[r,...new Array(a-1).fill(-1)]:r.length<a?s=r.concat(new Array(a-r.length).fill(-1)):s=r,s=s.map((i,o)=>i>=0?i:($(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${o}.`),e.shape[o]-n[o])),[n,s]}function XO(e,t,r,n,a,s,i,o,u){let p;if(n==null?(p=new Array(t.length),p.fill(1)):p=n,i!=null&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let l=!1,d={dims:p.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:r.slice(),strides:p.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};for(let b=0;b<d.dims;b++)l&&1<<b&o&&d.numAddAxisAfterEllipsis++,1<<b&i&&(l=!0);l||(d.ellipsisMask|=1<<d.dims,d.dims++);let h={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};ZO(d,h);let c=!0,f=!0,m=!0,g=[],y=[];for(let b=0;b<e.length;++b){if(h.strides[b]===0)throw Error(`strides[${b}] must be non-zero`);let x=!!(h.shrinkAxisMask&1<<b),v=e[b];if(v===-1){g.push(x?1:-1);continue}let I=[h.beginMask&1<<b,h.endMask&1<<b],T=[h.strides[b]>0?0:-1,h.strides[b]>0?v:v-1];if(x&&h.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&h.strides[b]===1;let _=!!(h.beginMask&1<<b&&h.endMask&1<<b);if(h.beginValid&&h.endValid){if(x){let F=h.begin[b]<0?v+h.begin[b]:h.begin[b];if(h.begin[b]=F,h.end[b]=h.begin[b]+1,F<0||F>=v)throw Error(`slice index ${h.begin[b]} of dimension ${b} out of bounds.`)}else h.begin[b]=bw(h.begin[b],0,h.strides[b],v,I,T),h.end[b]=bw(h.end[b],1,h.strides[b],v,I,T);let R=h.strides[b]===1&&h.begin[b]===0&&h.end[b]===v;c=c&&R,f=f&&(b===0&&h.strides[b]===1||R)}else c=c&&h.strides[b]===1&&_,f=f&&(b===0&&h.strides[b]===1||_);let E,A=!1;if(h.beginValid&&h.endValid?(E=h.end[b]-h.begin[b],A=!0):x?(E=1,A=!0):_&&v>=0&&(h.strides[b]<0?E=-v:E=v,A=!0),A){let R;E===0||E<0!=h.strides[b]<0?R=0:R=Math.trunc(E/h.strides[b])+(E%h.strides[b]!==0?1:0),g.push(R)}else g.push(-1)}for(let b=0;b<h.finalShapeGatherIndices.length;++b){let x=h.finalShapeGatherIndices[b];x>=0?y.push(g[x]):x===em&&y.push(1)}return{finalShapeSparse:y.filter((b,x)=>h.finalShapeGatherIndices[x]!==em),finalShape:y,isIdentity:c,sliceDim0:f,isSimpleSlice:m,begin:h.begin,end:h.end,strides:h.strides}}function ZO(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let r=0;t.beginValid=e.begin!=null,t.endValid=e.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let n=0;n<e.dims;n++)if(1<<n&e.ellipsisMask){let a=Math.min(t.dims-(e.dims-n)+1+e.numAddAxisAfterEllipsis,t.dims);for(;r<a;r++)t.begin[r]=0,t.end[r]=0,t.strides[r]=1,t.beginMask|=1<<r,t.endMask|=1<<r,t.finalShapeGatherIndices.push(r),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[r]=n}else if(1<<n&e.newAxisMask)t.finalShapeGatherIndices.push(em),t.finalShapeGatherIndicesSparse.push(-1);else{if(r===t.begin.length)throw Error(`Index out of range using input dim ${r}; input has only ${t.dims} dims, ${t.begin.length}.`);e.begin!=null&&(t.begin[r]=e.begin[n]),e.end!=null&&(t.end[r]=e.end[n]),t.strides[r]=e.strides[n],e.beginMask&1<<n&&(t.beginMask|=1<<r),e.endMask&1<<n&&(t.endMask|=1<<r),e.shrinkAxisMask&1<<n?(t.finalShapeGatherIndices.push(VO),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<r):(t.finalShapeGatherIndices.push(r),t.finalShapeGatherIndicesSparse.push(n)),t.inputShapeGatherIndicesSparse[r]=n,r++}}function bw(e,t,r,n,a,s){if(a[t])return r>0?s[t]:s[t+1&1];{let i=e<0?n+e:e;return i<s[0]?s[0]:i>s[1]?s[1]:i}}var JO="4.3.0",ik=class{static sgd(e){return new Dc(e)}static momentum(e,t,r=!1){return new hy(e,t,r)}static rmsprop(e,t=.9,r=0,n=null,a=!1){return new cy(e,t,r,n,a)}static adam(e=.001,t=.9,r=.999,n=null){return new py(e,t,r,n)}static adadelta(e=.001,t=.95,r=null){return new ly(e,t,r)}static adamax(e=.002,t=.9,r=.999,n=null,a=0){return new dy(e,t,r,n,a)}static adagrad(e,t=.1){return new uy(e,t)}},ps=ik,YO=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:e=>e();function yy(){return new Promise(e=>YO(()=>e()))}var N={};Ee(N,{ERF_A1:()=>c3,ERF_A2:()=>f3,ERF_A3:()=>m3,ERF_A4:()=>g3,ERF_A5:()=>y3,ERF_P:()=>h3,PARALLELIZE_THRESHOLD:()=>by,RowPartitionType:()=>Dn,SELU_SCALE:()=>lk,SELU_SCALEALPHA:()=>ok,applyActivation:()=>Fc,assertAndGetBroadcastShape:()=>st,assertAxesAreInnerMostDims:()=>nF,assertParamsConsistent:()=>QO,assignToTypedArray:()=>I3,axesAreInnerMostDims:()=>Eg,calculateShapes:()=>y1,checkEinsumDimSizes:()=>E3,checkPadOnDimRoundingMode:()=>yr,combineLocations:()=>P0,combineRaggedTensorToTensorShapes:()=>t3,complexWithEvenIndex:()=>w3,complexWithOddIndex:()=>v3,computeConv2DInfo:()=>zp,computeConv3DInfo:()=>A0,computeDefaultPad:()=>pg,computeDilation2DInfo:()=>nA,computeOptimalWindowSize:()=>s3,computeOutAndReduceShapes:()=>B0,computeOutShape:()=>e3,computePool2DInfo:()=>$0,computePool3DInfo:()=>aA,convertConv2DDataFormat:()=>F0,decodeEinsumEquation:()=>C3,eitherStridesOrDilationsAreOne:()=>Gn,expandShapeToKeepDim:()=>Fs,exponent:()=>N3,exponents:()=>S3,fromStringArrayToUint8:()=>Z3,fromUint8ToStringArray:()=>X3,getAxesPermutation:()=>W0,getBroadcastDims:()=>z0,getComplexWithIndex:()=>k3,getEinsumComputePath:()=>$3,getEinsumPermutation:()=>_3,getFusedBiasGradient:()=>Ac,getFusedDyActivation:()=>$c,getImageCenter:()=>i3,getInnerMostAxes:()=>aF,getPermuted:()=>l3,getRaggedRank:()=>n3,getReductionAxes:()=>At,getReshaped:()=>o3,getReshapedPermuted:()=>u3,getRowPartitionTypesHelper:()=>r3,getSliceBeginCoords:()=>p3,getSliceSize:()=>d3,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>D3,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>M3,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>O3,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>P3,getSparseReshapeInputOutputMismatchErrorMessage:()=>W3,getSparseReshapeInputOutputMultipleErrorMessage:()=>B3,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>z3,getSparseReshapeNegativeOutputDimErrorMessage:()=>L3,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>H3,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>V3,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>U3,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>G3,getUndoAxesPermutation:()=>$g,isIdentityPermutation:()=>A3,log:()=>bE,mergeRealAndImagArrays:()=>b3,prepareAndValidate:()=>Z1,prepareSplitSize:()=>R3,segment_util:()=>uk,shouldFuse:()=>Rc,slice_util:()=>zt,splitRealAndImagArrays:()=>x3,stridesOrDilationsArePositive:()=>$s,tupleValuesAreOne:()=>Ra,upcastType:()=>en,validateDefaultValueShape:()=>a3,validateInput:()=>Tc,validateUpdateShape:()=>Yg,warn:()=>Ia});function QO(e,t){let r=e[0].length;e.forEach((a,s)=>{$(a.length===r,()=>`Error in concat${r}D: rank of tensors[${s}] must be the same as the rank of the rest (${r})`)}),$(t>=0&&t<r,()=>`Error in concat${r}D: axis must be between 0 and ${r-1}.`);let n=e[0];e.forEach((a,s)=>{for(let i=0;i<r;i++)$(i===t||a[i]===n[i],()=>`Error in concat${r}D: Shape of tensors[${s}] (${a}) does not match the shape of the rest (${n}) along the non-concatenated axis ${s}.`)})}function e3(e,t){let r=e[0].slice();for(let n=1;n<e.length;n++)r[t]+=e[n][t];return r}var Dn;(function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"})(Dn||(Dn={}));function t3(e,t,r){let n=new Array;if(r==null&&t==null)return n;if(t==null)for(;n.length<e+r.length;)n.push(-1);else n=t.slice();if(r==null)return n;if(e+r.length!==n.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+r.length}, but shape.rank = ${n.length}`);for(let a=1;a<r.length;++a){let s=r[a],i=n[n.length-r.length+a],o=n[i];if(s>=0)if(o>=0){if(o!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${a+e}] = ${s} but shape[${a+e}] = ${o}`)}else n[i]=s}return n}function r3(e){let t={FIRST_DIM_SIZE:Dn.FIRST_DIM_SIZE,VALUE_ROWIDS:Dn.VALUE_ROWIDS,ROW_LENGTHS:Dn.ROW_LENGTHS,ROW_SPLITS:Dn.ROW_SPLITS,ROW_LIMITS:Dn.ROW_LIMITS,ROW_STARTS:Dn.ROW_STARTS},r=[];for(let n of e)if(n in t)r.push(t[n]);else break;return r}function n3(e){return e.length===0?0:e[0]===Dn.FIRST_DIM_SIZE?e.length-1:e.length}function a3(e,t){if(e==null||t==null)return;let r=e.length,n=t.length;if(r>=n)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${r} must be less than ragged tensor input flatValues.rank = ${n})`);for(let a=0;a<Math.min(r,n-1);++a){let s=e[a],i=t[a+1];if(s>=0&&i>=0&&s!==1&&s!==i)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${a-e.length}] = ${s} but ragged tensor input.flatValues.shape[${a-e.length}] = ${i}`)}}var by=30;function s3(e){return e<=by?e:ah(e,Math.floor(Math.sqrt(e)))}function i3(e,t,r){let n=r*(typeof e=="number"?e:e[0]),a=t*(typeof e=="number"?e:e[1]);return[n,a]}function o3(e,t,r,n=!0){let a=[];if(n)a=a.concat(t.slice(0)),a.push(e[0]/r),a=a.concat(e.slice(1));else{a=a.concat(e[0]);let s=t.length;for(let i=0;i<s;++i)a=a.concat([e[i+1]/t[i],t[i]]);a=a.concat(e.slice(s+1))}return a}function l3(e,t,r=!0){let n=[];if(r){n.push(t);for(let a=t+1;a<e;++a)a<=2*t?(n.push(a),n.push(a-(t+1))):n.push(a)}else{let a=[],s=[];for(let i=1;i<e;++i)i>=t*2+1||i%2===1?s.push(i):a.push(i);n.push(...a),n.push(0),n.push(...s)}return n}function u3(e,t,r,n=!0){let a=[];n?a.push(e[0]/r):a.push(e[0]*r);for(let s=1;s<e.length;++s)s<=t.length?n?a.push(t[s-1]*e[s]):a.push(e[s]/t[s-1]):a.push(e[s]);return a}function p3(e,t){let r=[0];for(let n=0;n<t;++n)r.push(e[n][0]);return r}function d3(e,t,r){let n=e.slice(0,1);for(let a=0;a<r;++a)n.push(e[a+1]-t[a][0]-t[a][1]);return n}var ok=1.7580993408473768,lk=1.0507009873554805,h3=.3275911,c3=.254829592,f3=-.284496736,m3=1.421413741,g3=-1.453152027,y3=1.061405429;function b3(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let r=new Float32Array(e.length*2);for(let n=0;n<r.length;n+=2)r[n]=e[n/2],r[n+1]=t[n/2];return r}function x3(e){let t=new Float32Array(e.length/2),r=new Float32Array(e.length/2);for(let n=0;n<e.length;n+=2)t[n/2]=e[n],r[n/2]=e[n+1];return{real:t,imag:r}}function w3(e){let t=Math.ceil(e.length/4),r=new Float32Array(t),n=new Float32Array(t);for(let a=0;a<e.length;a+=4)r[Math.floor(a/4)]=e[a],n[Math.floor(a/4)]=e[a+1];return{real:r,imag:n}}function v3(e){let t=Math.floor(e.length/4),r=new Float32Array(t),n=new Float32Array(t);for(let a=2;a<e.length;a+=4)r[Math.floor(a/4)]=e[a],n[Math.floor(a/4)]=e[a+1];return{real:r,imag:n}}function k3(e,t){let r=e[t*2],n=e[t*2+1];return{real:r,imag:n}}function I3(e,t,r,n){e[n*2]=t,e[n*2+1]=r}function S3(e,t){let r=new Float32Array(e/2),n=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){let s=(t?2:-2)*Math.PI*(a/e);r[a]=Math.cos(s),n[a]=Math.sin(s)}return{real:r,imag:n}}function N3(e,t,r){let n=(r?2:-2)*Math.PI*(e/t),a=Math.cos(n),s=Math.sin(n);return{real:a,imag:s}}var Sf="->",T3=/->/g,xw=",",ww="...";function C3(e,t){e=e.replace(/\s/g,"");let r=(e.length-e.replace(T3,"").length)/Sf.length;if(r<1)throw new Error("Equations without an arrow are not supported.");if(r>1)throw new Error(`Equation must contain exactly one arrow ("${Sf}").`);let[n,a]=e.split(Sf);$(n.indexOf(ww)===-1,()=>`The ellipsis notation ("${ww}") is not supported yet.`);let s=n.split(xw),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let h=0;h<a.length;++h){let c=a[h];if(!s.some(f=>f.indexOf(c)!==-1))throw new Error(`Output subscripts contain the label ${c} not present in the input subscripts.`);o.indexOf(c)===-1&&o.push(c)}for(let h=0;h<n.length;++h){let c=n[h];o.indexOf(c)===-1&&c!==xw&&o.push(c)}let u=new Array(s.length);for(let h=0;h<i;++h){if(new Set(s[h].split("")).size!==s[h].length)throw new Error(`Found duplicate axes in input component ${s[h]}. Support for duplicate axes in input is not implemented yet.`);u[h]=[];for(let c=0;c<s[h].length;++c)u[h].push(o.indexOf(s[h][c]))}let p=o.length,l=a.length,d=[];for(let h=l;h<p;++h)d.push(h);return{allDims:o,summedDims:d,idDims:u}}function _3(e,t){let r=new Array(e);r.fill(-1);for(let a=0;a<t.length;++a)r[t[a]]=a;let n=[];for(let a=0;a<e;++a)r[a]===-1&&n.push(a);return r=r.filter(a=>a!==-1),{permutationIndices:r,expandDims:n}}function E3(e,t,r){let n=new Array(e);for(let a=0;a<r.length;++a){let s=r[a].shape;for(let i=0;i<t[a].length;++i)n[t[a][i]]===void 0?n[t[a][i]]=s[i]:$(n[t[a][i]]===s[i],()=>`Expected dimension ${n[t[a][i]]} at axis ${i} of input shaped ${JSON.stringify(s)}, but got dimension ${s[i]}`)}}function $3(e,t){let r=e,n=[],a=0;e.length===0&&r.push(-1),a=e.length+1;for(let i=0;i<a;++i)n.push([]);let s=[];for(let i=0;i<r.length;++i){let o=r[i],u=F3(t,o);for(let p of u)s.indexOf(p)===-1&&(n[i].push(p),s.push(p))}return{path:r,steps:n}}function A3(e){return e.every((t,r)=>t===r)}function F3(e,t){let r=[];for(let n=0;n<e.length;++n)(e[n].length===0||e[n].indexOf(t)!==-1||t===-1)&&r.push(n);return r}function R3(e,t,r=0){let n=[];if(typeof t=="number")$(e.shape[r]%t===0,()=>"Number of splits must evenly divide the axis."),n=new Array(t).fill(e.shape[r]/t);else{let a=t.reduce((i,o)=>(o===-1&&(i+=1),i),0);$(a<=1,()=>"There should be only one negative value in split array.");let s=t.indexOf(-1);if(s!==-1){let i=t.reduce((o,u)=>u>0?o+u:o);t[s]=e.shape[r]-i}$(e.shape[r]===t.reduce((i,o)=>i+o),()=>"The sum of sizes must match the size of the axis dimension."),n=t}return n}function D3(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function M3(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function O3(e,t,r){return`indices(${e}, 0) is invalid: ${t} >= ${r}`}function z3(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function L3(e,t){return`size ${e} must be non-negative, not ${t}`}function P3(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function B3(e,t){let r=dt(e),n=dt(t);return`Input to reshape is a SparseTensor with ${r}
  dense values, but the requested shape requires a multiple of ${n}. inputShape=${e} outputShape= ${t}`}function W3(e,t){let r=dt(e),n=dt(t);return`Input to reshape is a tensor with ${r} dense values, but the requested shape has ${n}. inputShape=${e} outputShape=${t}`}function V3(){return"segment ids must be >= 0"}function U3(){return"segment ids are not increasing"}function G3(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function H3(e,t,r){return`Bad: indices[${e}] == ${t} out of range [0, ${r})`}var uk={};Ee(uk,{collectGatherOpShapeInfo:()=>K3,computeOutShape:()=>q3,segOpComputeOptimalWindowSize:()=>j3});function j3(e,t){let r=!1,n;for(e<=by?(n=e,r=!0):n=ah(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=ah(e,n+1);return n}function q3(e,t,r){let n=[],a=e.length;for(let s=0;s<a;s++)s!==t?n.push(e[s]):n.push(r);return n}function K3(e,t,r,n){let a=t.shape.length,s=e.shape.length;if(n!==0&&(n<-a||n>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${n}`);if(n<0&&(n+=a),n>s)throw new Error(`batchDims (${n}) must be less than rank(x) (
    ${s}).`);if(r<n)throw new Error(`batchDims (${n}) must be less than or equal to axis (${r}).`);for(let d=0;d<n;++d)if(e.shape[d]!==t.shape[d])throw new Error(`x.shape[${d}]: ${e.shape[d]} should be equal to indices.shape[${d}]: ${t.shape[d]}.`);let i=e.shape[r],o=[],u=1,p=1,l=1;for(let d=0;d<n;++d)o.push(e.shape[d]),u*=e.shape[d];for(let d=n;d<r;d++)o.push(e.shape[d]),p*=e.shape[d];for(let d=n;d<a;d++)o.push(t.shape[d]);for(let d=r+1;d<s;d++)o.push(e.shape[d]),l*=e.shape[d];return{batchSize:u,sliceSize:l,outerSize:p,dimSize:i,outputShape:o}}function X3(e){try{return e.map(t=>lh(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function Z3(e){return e.map(t=>Dp(t))}var jn={};Ee(jn,{nonMaxSuppressionV3Impl:()=>A1,nonMaxSuppressionV4Impl:()=>F1,nonMaxSuppressionV5Impl:()=>R1,whereImpl:()=>w1});gO();var pk={kernelName:Qo,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>L(e,io(se(r,"float32"),-1))}}},J3={kernelName:Vs,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>{let n=nt(se(r,"float32")),a=nr(he(ve(1),n));return ht(me(e,a))}}}},Y3={kernelName:Us,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>{let n=nr(he(nt(se(r,"float32")),1));return me(e,n)}}}},Q3={kernelName:Ga,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t,a=st(r.shape,n.shape);return{a:()=>{let s=e,i=At(r.shape,a);return i.length>0&&(s=ge(s,i)),P(s,r.shape)},b:()=>{let s=e,i=At(n.shape,a);return i.length>0&&(s=ge(s,i)),P(s,n.shape)}}}},ez={kernelName:Gs,saveAllInputs:!0,gradFunc:(e,t)=>{let r={};return t.forEach((n,a)=>{r[a]=()=>e.clone()}),r}},tz={kernelName:rl,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>He(r)}}},rz={kernelName:nl,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>He(r)}}},nz={kernelName:Hs,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>me(e,nr(he(ve(1),nt(se(r,"float32")))))}}},az={kernelName:js,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>{let n=nr(J(ve(1),nt(se(r,"float32"))));return me(e,n)}}}},sz={kernelName:Xs,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t,a=st(r.shape,n.shape);return{a:()=>{let s=J(nt(r),nt(n)),i=L(e,me(n,s)),o=At(r.shape,a);return o.length>0&&(i=ge(i,o)),P(i,r.shape)},b:()=>{let s=J(nt(r),nt(n)),i=ht(L(e,me(r,s))),o=At(n.shape,a);return o.length>0&&(i=ge(i,o)),P(i,n.shape)}}}},iz={kernelName:qs,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>me(e,J(nt(se(r,"float32")),1))}}},oz={kernelName:Ks,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>me(e,he(ve(1),nt(se(r,"float32"))))}}};function lz(e,t,r,n,a,s){let i=C(e,"dy","avgPool3dGrad"),o=C(t,"input","avgPool3dGrad"),u=i,p=o,l=!1;o.rank===4&&(l=!0,u=P(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),p=P(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),$(u.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),$(p.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),yr("avgPool3dGrad",a,s);let d={dy:u,input:p},h={filterSize:r,strides:n,pad:a,dimRoundingMode:s},c=O.runKernel(fp,d,h);return l?P(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var uz=z({avgPool3dGrad_:lz}),pz={kernelName:al,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=r;return{x:()=>uz(e,n,a,s,i,o)}}};function dz(e,t,r,n,a){let s=C(e,"dy","avgPoolGrad"),i=C(t,"input","avgPoolGrad");$(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let o=i,u=s,p=!1;i.rank===3&&(p=!0,o=P(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=P(s,[1,s.shape[0],s.shape[1],s.shape[2]])),$(u.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),$(o.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);let l={dy:u,input:o},d={filterSize:r,strides:n,pad:a},h=O.runKernel(Lh,l,d);return p?P(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var hz=z({avgPoolGrad_:dz}),cz={kernelName:Zs,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{filterSize:a,strides:s,pad:i}=r;return{x:()=>hz(e,n,a,s,i)}}},fz={kernelName:Js,inputsToSave:["a","b"],gradFunc:(e,t,r)=>{let[n,a]=t,{transposeA:s,transposeB:i}=r;return!s&&!i?{a:()=>Me(e,a,!1,!0),b:()=>Me(n,e,!0,!1)}:!s&&i?{a:()=>Me(e,a,!1,!1),b:()=>Me(e,n,!0,!1)}:s&&!i?{a:()=>Me(a,e,!1,!0),b:()=>Me(n,e,!1,!1)}:{a:()=>Me(a,e,!0,!0),b:()=>Me(e,n,!0,!0)}}},mz={kernelName:sl,gradFunc:(e,t,r)=>{let{blockShape:n,crops:a}=r;return{x:()=>Hp(e,n,a)}}},gz={kernelName:r0,gradFunc:(e,t,r)=>{let n=r,a=n.inputShape,s=n.shape,i=Array.from(s);for(let u=a.length-1;u>=0;u--)if(a[u]===s[u])i[u]=1;else if(a[u]!==1)throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);let o=[];for(let u=0;u<i.length;u++)i[u]>1&&o.push(u);return{x:()=>ge(e,o,!0)}}},yz={kernelName:Ys,gradFunc:e=>({x:()=>e.clone()})},bz={kernelName:Qs,gradFunc:e=>({x:()=>He(e)})},xz={kernelName:Ha,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{clipValueMin:a,clipValueMax:s}=r;return{x:()=>Gt(cn(da(n,a),Xa(n,s)),e,He(e))}}},wz={kernelName:gp,inputsToSave:["x"],gradFunc:pk.gradFunc},vz={kernelName:ol,saveAllInputs:!0,gradFunc:(e,t,r)=>{let n=t.map(o=>o.shape),{axis:a}=r,s=fn(a,t[0].shape)[0],i=n.map(o=>o[s]);return Nr(e,i,s).map(o=>()=>o)}},kz={kernelName:ei,inputsToSave:["x","filter"],gradFunc:(e,t,r)=>{let[n,a]=t,{dilations:s,strides:i,pad:o,dataFormat:u}=r;return $(Ra(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>vg(n.shape,e,a,i,o,u),filter:()=>sy(n,e,a.shape,i,o,u)}}},Iz={kernelName:ti,inputsToSave:["dy","filter"],gradFunc:(e,t,r)=>{let[n,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:u}=r;return{dy:()=>cr(e,a,s,i,o,1,u),filter:()=>sy(e,n,a.shape,s,i,o,u)}}};function Sz(e,t,r,n,a){let s=e;e.rank===4&&(s=P(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;i.rank===4&&(i=P(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),$(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),$(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),$(r.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${r}.`),$(s.shape[4]===r[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${r[3]}.`),$(i.shape[4]===r[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${r[4]}).`);let o={x:s,dy:i},u={strides:n,pad:a,filterShape:r};return O.runKernel(ll,o,u)}var Nz=z({conv3DBackpropFilter_:Sz}),Tz={kernelName:ri,inputsToSave:["x","filter"],gradFunc:(e,t,r)=>{let{dilations:n,strides:a,pad:s}=r;$(Ra(n),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${n}'`);let[i,o]=t;return{x:()=>M0(i.shape,e,o,a,s),filter:()=>Nz(i,e,o.shape,a,s)}}},Cz={kernelName:ni,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>L(ht(xc(se(r,"float32"))),e)}}},_z={kernelName:ai,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>L(wc(se(r,"float32")),e)}}},Ez={kernelName:si,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{axis:a,exclusive:s,reverse:i}=r;return{x:()=>{let o=W0([a],n.rank),u=oc(e,a,s,!i);return o!=null&&(u=Oe(u,o)),u}}}},$z={kernelName:ii,inputsToSave:["x","filter"],gradFunc:(e,t,r)=>{let{dilations:n,strides:a,pad:s,dimRoundingMode:i}=r,o=n==null?[1,1]:n;$(Ra(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);let[u,p]=t;return $(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),$(p.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${p.rank}.`),$(u.shape[3]===p.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),$(Gn(a,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`),yr("depthwiseConv2d",s,i),{x:()=>_1(u.shape,e,p,a,s,o,i),filter:()=>C1(u,e,p.shape,a,s,o,i)}}},Az={kernelName:oi,inputsToSave:["x","filter"],gradFunc:(e,t,r)=>{let[n,a]=t,s={x:n,filter:a,dy:e},i={x:n,filter:a,dy:e};return{x:()=>O.runKernel($o,s,r),filter:()=>O.runKernel(Ao,i,r)}}},Fz={kernelName:ui,outputsToSave:[!0],gradFunc:(e,t)=>{let[r]=t,n={dy:e,y:r};return{x:()=>O.runKernel(cl,n)}}},Rz={kernelName:fl,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t,n=L(fr(ht(nt(r))),2/Math.sqrt(Math.PI));return{x:()=>L(e,n)}}},Dz={kernelName:pi,outputsToSave:[!0],gradFunc:(e,t)=>{let[r]=t;return{x:()=>L(e,r)}}},Mz={kernelName:gl,inputsToSave:["input"],gradFunc:(e,t)=>{let[r]=t;return{input:()=>P(e,r.shape)}}},Oz={kernelName:di,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>L(e,fr(r))}}},zz={kernelName:hi,gradFunc:e=>({x:()=>He(e)})},Lz={kernelName:ci,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t,a=st(r.shape,n.shape);return{a:()=>{let s=me(e,se(n,"float32")),i=At(r.shape,a);return i.length>0?P(ge(s,i),r.shape):s},b:()=>{let s=L(e,se(r,"float32")),i=At(n.shape,a);i.length>0&&(s=P(ge(s,i),n.shape));let o=nt(n);return ht(me(s,se(o,"float32")))}}}},Pz={kernelName:fi,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,r)=>{let{varianceEpsilon:n}=r,[a,s,i,o]=t,u=o==null?ve(1):o,p=At(s.shape,a.shape),l=[];if(s.rank===1){for(let m=0;m<a.shape.length-1;++m)l.push(a.shape[m]);l.push(1)}let d=he(a,s),h=L(e,u),c=yc(J(i,ve(n))),f=L(L(L(c,c),c),ve(-.5));return{x:()=>s.rank===1?P(L(L(e,Lr(P(c,[1,1,1,s.shape[0]]),l)),u),a.shape):P(L(L(e,c),u),a.shape),mean:()=>{let m=L(L(c,ve(-1)),h);return s.rank===1&&(m=ge(m,p)),P(m,s.shape)},variance:()=>{let m=L(L(f,d),h);return s.rank===1&&(m=ge(m,p)),P(m,s.shape)},scale:()=>{let m=L(d,c),g=L(e,m);return s.rank===1&&(g=ge(g,p)),P(g,s.shape)},offset:()=>{let m=e;return s.rank===1&&(m=ge(m,p)),P(m,s.shape)}}}},Bz={kernelName:bl,inputsToSave:["x","indices"],gradFunc:(e,t,r)=>{let[n,a]=t,{axis:s}=r,i=fn(s,n.shape)[0];return{x:()=>{let o=n.shape,u=a.size,p=o.slice(0,i),l=p.length,d=o.slice(s,o.length).slice(1),h=d.length,c=vw(0,l),f=vw(l+1,l+1+h),m=kw([p,[u],d]),g=P(e,m),y=P(a,[u]),b=kw([[l],c,f]),x=Oe(g,b),v=_c(x,y,n.shape[i]),I=$g(b);return v=Oe(v,I),v},indices:()=>a}}};function vw(e,t){let r=[];for(let n=e;n<t;++n)r.push(n);return r}function kw(e){let t=[];for(let r=0;r<e.length;++r)for(let n=0;n<e[r].length;++n)t.push(e[r][n]);return t}var Wz={kernelName:mi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t;return{a:()=>He(r),b:()=>He(n)}}},Vz={kernelName:gi,gradFunc:e=>({x:()=>se(e,"float32")})},Uz={kernelName:yi,gradFunc:e=>({x:()=>He(e)})},Gz={kernelName:bi,gradFunc:e=>({x:()=>He(e)})},Hz={kernelName:xi,gradFunc:e=>({x:()=>He(e)})},jz={kernelName:wi,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{alpha:a}=r,s=br(n,0);return{x:()=>Gt(s,e,L(e,a))}}},qz={kernelName:ki,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>me(e,J(r,1))}}},Kz={kernelName:vi,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>me(e,se(r,"float32"))}}},Xz={kernelName:a0,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,r)=>{let[n]=t,{axis:a}=r;return{logits:()=>{let s=fr(n);return he(e,L(ge(e,a,!0),s))}}}};function Zz(e,t,r,n=5,a=1,s=1,i=.5){let o={x:e,y:t,dy:r},u={depthRadius:n,bias:a,alpha:s,beta:i};return O.runKernel(Cl,o,u)}var Jz=z({localResponseNormalizationBackprop_:Zz}),Yz={kernelName:Ii,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,r)=>{let[n,a]=t,{depthRadius:s,bias:i,alpha:o,beta:u}=r;return{x:()=>Jz(n,a,e,s,i,o,u)}}};function dk(e,t,r,n){return t.rank<r.rank&&(t=P(t,Fs(t.shape,n))),e.rank<r.rank&&(e=P(e,Fs(e.shape,n))),{x:()=>L(e,se(Wr(r,t),e.dtype))}}var Iw={kernelName:Si,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,r)=>{let n=r,{reductionIndices:a}=n,s=t[0],i=t[1],o=fn(a,s.shape),u=dk(e,i,s,o);return{x:()=>u.x()}}},Qz={kernelName:Ni,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t;return{a:()=>L(e,se(da(r,n),"float32")),b:()=>L(e,se(Do(r,n),"float32"))}}};function eL(e,t,r,n,a,s,i){let o=C(e,"dy","maxPool3dGrad"),u=C(t,"input","maxPool3dGrad"),p=C(r,"output","maxPool3dGrad"),l=o,d=u,h=p,c=!1;u.rank===4&&(c=!0,l=P(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),d=P(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),h=P(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),$(l.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),$(d.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),$(h.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`),yr("maxPool3dGrad",s,i);let f={dy:l,input:d,output:h},m={filterSize:n,strides:a,pad:s,dimRoundingMode:i},g=O.runKernel(wp,f,m);return c?P(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var tL=z({maxPool3dGrad_:eL}),rL={kernelName:_l,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,r)=>{let[n,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;return{x:()=>tL(e,n,a,s,i,o,u)}}};function nL(e,t,r,n,a,s,i){let o=C(e,"dy","maxPoolGrad"),u=C(t,"input","maxPoolGrad"),p=C(r,"output","maxPoolGrad");$(u.rank===o.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`),$(o.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),$(u.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),yr("maxPoolGrad",s,i);let l={dy:o,input:u,output:p},d={filterSize:n,strides:a,pad:s,dimRoundingMode:i};return O.runKernel(qh,l,d)}var aL=z({maxPoolGrad_:nL}),sL={kernelName:Ti,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,r)=>{let[n,a]=t,{filterSize:s,strides:i,pad:o}=r;return{x:()=>aL(e,n,a,s,i,o)}}},iL={kernelName:Ci,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{axis:a}=r,s=fn(a,n.shape),i=B0(n.shape,s)[1],o=dt(i);return{x:()=>{let u=n.shape.slice();s.forEach(l=>{u[l]=1});let p=P(e,u);return me(L(p,Pr(n.shape,"float32")),o)}}}},oL={kernelName:_i,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,r)=>{let n=r,{axis:a}=n,[s,i]=t,o=fn(a,s.shape),u=dk(e,i,s,o);return{x:()=>u.x()}}},lL={kernelName:Ei,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t;return{a:()=>L(e,se(Xa(r,n),"float32")),b:()=>L(e,se(br(r,n),"float32"))}}},uL={kernelName:$i,inputsToSave:["x"],gradFunc:(e,t,r)=>{let n=t[0],{paddings:a}=r,s=a.map(i=>i[0]);return{x:()=>Ve(e,s,n.shape)}}},pL={kernelName:El,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t,a=st(r.shape,n.shape);return{a:()=>{let s=At(r.shape,a);return s.length>0?P(ge(e,s),r.shape):e},b:()=>{let s=L(e,ht(iu(me(r,n)))),i=At(n.shape,a);return i.length>0?P(ge(s,i),n.shape):s}}}},dL={kernelName:Ai,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t,a=st(r.shape,n.shape);return{a:()=>{let s=L(e,se(n,"float32")),i=At(r.shape,a);return i.length>0?P(ge(s,i),r.shape):s},b:()=>{let s=L(e,se(r,"float32")),i=At(n.shape,a);return i.length>0?P(ge(s,i),n.shape):s}}}},hL={kernelName:Al,gradFunc:e=>({x:()=>ht(e)})},cL={kernelName:Fi,inputsToSave:["indices"],gradFunc:(e,t)=>{let r=t[0];return{indices:()=>wt(r.shape,"float32")}}},fL={kernelName:Ol,gradFunc:e=>({x:()=>He(e)})},mL={kernelName:zl,saveAllInputs:!0,gradFunc:(e,t,r)=>{let{axis:n}=r;return Nt(e,n).map(a=>()=>a)}},Sw={kernelName:Ri,inputsToSave:["x"],gradFunc:(e,t,r)=>{let n=t[0],{paddings:a}=r,s=a.map(i=>i[0]);return{x:()=>Ve(e,s,n.shape)}}},gL={kernelName:Di,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[r,n,a]=t,s=r,i=n,o=st(s.shape,i.shape);return{a:()=>{let u=se(i,"float32"),p=L(e,L(u,oa(s,he(u,ve(1))))),l=At(s.shape,o);return l.length>0&&(p=ge(p,l)),P(p,s.shape)},b:()=>{let u=br(s,0),p=Gt(u,Vr(s),He(s)),l=L(e,L(a,p)),d=At(i.shape,o);return d.length>0&&(l=ge(l,d)),P(l,i.shape)}}}},yL={kernelName:Mi,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[r,n]=t,a=br(r,0);return{x:()=>Gt(a,e,L(e,n)),alpha:()=>{let s=Gt(a,He(e),L(e,r)),i=At(n.shape,e.shape);return i.length>0&&(s=ge(s,i)),P(s,n.shape)}}}};function bL(e,t,r){let n=e.shape.slice();n[r]=1;let a=P(t,n),s=tp(e,r,!0,!1),i=tp(e,r,!0,!0),o=L(s,i);return L(a,o)}function xL(e,t,r){let n=e.shape.length,a=n-r.length,s=N.getAxesPermutation(r,n),i=e;s!=null&&(i=Oe(e,s));let o=i.shape.slice(),u=o.splice(n-r.length,r.length).reduce((d,h)=>d*h,1);o.push(u);let p=i.reshape(o),l=bL(p,t,a);if(l=l.reshape(i.shape),s!=null){let d=N.getUndoAxesPermutation(s);l=Oe(l,d)}return l}var wL={kernelName:Oi,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{axis:a}=r,s=[];return a==null?s=n.shape.map((i,o)=>o):typeof a=="number"?s=[a]:s=a,{x:()=>xL(n,e,s)}}},vL={kernelName:li,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t,a=st(r.shape,n.shape);return{a:()=>{let s=me(e,se(n,"float32")),i=At(r.shape,a);return i.length>0?P(ge(s,i),r.shape):s},b:()=>{let s=L(e,se(r,"float32")),i=At(n.shape,a);i.length>0&&(s=P(ge(s,i),n.shape));let o=nt(n);return ht(me(s,se(o,"float32")))}}}},kL={kernelName:zi,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>me(e,ht(nt(r)))}}},IL={kernelName:Wi,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t,n=L(Xa(r,6),io(r));return{x:()=>L(e,se(n,"float32"))}}},SL={kernelName:Li,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>L(e,se(io(r),"float32"))}}},NL={kernelName:Ll,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>P(e,r.shape)}}},TL={kernelName:Bi,inputsToSave:["images"],gradFunc:(e,t,r)=>{let[n]=t,a={dy:e,images:n};return{images:()=>O.runKernel(Bl,a,r)}}},CL={kernelName:Pi,inputsToSave:["images"],gradFunc:(e,t,r)=>{let[n]=t,a={dy:e,images:n};return{images:()=>O.runKernel(Pl,a,r)}}},_L={kernelName:Vi,gradFunc:(e,t,r)=>{let{dims:n}=r,a=fn(n,e.shape);return{x:()=>tn(e,a)}}},EL={kernelName:Ui,gradFunc:e=>({x:()=>He(e)})},$L={kernelName:Gi,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>ht(me(e,L(oa(r,1.5),2)))}}},AL={kernelName:Gl,inputsToSave:["condition"],gradFunc:(e,t)=>{let[r]=t;return{condition:()=>se(He(r),"float32"),t:()=>L(e,se(r,e.dtype)),e:()=>L(e,se(Up(r),e.dtype))}}},FL={kernelName:Hi,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>{let n=br(r,ve(0)),a=ve(ok),s=ve(lk),i=L(e,s),o=L(L(e,a),fr(se(r,"float32")));return Gt(n,i,o)}}}},RL={kernelName:Ki,outputsToSave:[!0],gradFunc:(e,t)=>{let[r]=t;return{x:()=>L(e,L(r,he(ve(1),r)))}}},DL={kernelName:qi,gradFunc:e=>({x:()=>He(e)})},ML={kernelName:ji,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>L(Pp(se(r,"float32")),e)}}},OL={kernelName:jl,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>L(ic(se(r,"float32")),e)}}},zL={kernelName:Hl,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{begin:a,size:s}=r,i=n.shape,[o,u]=sk(n,a,s),p=[];for(let l=0;l<e.rank;l++)p.push([o[l],i[l]-o[l]-u[l]]);return{x:()=>_n(e,p)}}},LL={kernelName:Yi,outputsToSave:[!0],gradFunc:(e,t,r)=>{let[n]=t,{dim:a}=r,s=!0,i=L(e,n);return{logits:()=>he(i,L(ge(i,[a],s),n))}}},PL={kernelName:Xi,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>L(e,hn(r))}}},Nw={kernelName:ql,gradFunc:(e,t,r)=>{let{blockShape:n,paddings:a}=r;return{x:()=>Lp(e,n,a)}}},Tw={kernelName:Kl,gradFunc:(e,t,r)=>{let{axis:n}=r;return{x:()=>at(e,n)}}},BL={kernelName:Zi,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>me(e,L(nr(se(r,"float32")),2))}}},WL={kernelName:Np,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>L(e,L(se(r,"float32"),2))}}},VL={kernelName:Qi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t,a=ve(2);return{a:()=>L(e,L(a,he(r,n))),b:()=>L(e,L(a,he(n,r)))}}},UL={kernelName:qa,gradFunc:e=>({x:()=>He(e)})},GL={kernelName:eo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t,a=st(r.shape,n.shape);return{a:()=>{let s=e,i=At(r.shape,a);return i.length>0&&(s=ge(s,i)),P(s,r.shape)},b:()=>{let s=e,i=At(n.shape,a);return i.length>0&&(s=ge(s,i)),P(ht(s),n.shape)}}}},HL={kernelName:Ji,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,a=n.shape.slice(),{axis:s}=r;fn(s,n.shape).forEach(u=>{a[u]=1});let i=P(e,a),o=L(i,Pr(n.shape,"float32"));return{x:()=>o}}},jL={kernelName:to,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>me(e,nt(Pp(r)))}}},qL={kernelName:ro,outputsToSave:[!0],gradFunc:(e,t)=>{let[r]=t;return{x:()=>L(he(ve(1),nt(r)),e)}}},KL={kernelName:ja,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{reps:a}=r;return{x:()=>{let s=He(n);if(n.rank===1)for(let i=0;i<a[0];++i)s=J(s,Ve(e,[i*n.shape[0]],[n.shape[0]]));else if(n.rank===2)for(let i=0;i<a[0];++i)for(let o=0;o<a[1];++o)s=J(s,Ve(e,[i*n.shape[0],o*n.shape[1]],[n.shape[0],n.shape[1]]));else if(n.rank===3)for(let i=0;i<a[0];++i)for(let o=0;o<a[1];++o)for(let u=0;u<a[2];++u)s=J(s,Ve(e,[i*n.shape[0],o*n.shape[1],u*n.shape[2]],[n.shape[0],n.shape[1],n.shape[2]]));else if(n.rank===4)for(let i=0;i<a[0];++i)for(let o=0;o<a[1];++o)for(let u=0;u<a[2];++u)for(let p=0;p<a[3];++p)s=J(s,Ve(e,[i*n.shape[0],o*n.shape[1],u*n.shape[2],p*n.shape[3]],[n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${n.rank} tensors yet.`);return s}}}},XL={kernelName:aa,gradFunc:(e,t,r)=>{let n=r,{perm:a}=n,s=$g(a);return{x:()=>Oe(e,s)}}},ZL={kernelName:eu,gradFunc:(e,t,r)=>{let n=r,{axis:a}=n;return{value:()=>Ot(e,a)}}},JL={kernelName:Ap,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>YL(e,r)}}};function YL(e,t){let r=Hn(t,He(t)),n=ou(e,r),a=da(t,ve(0,"int32")),s=n.rank-a.rank;for(let o=0;o<s;++o)a=Qt(a,o+1);a=cn(a,Pr(n.shape,"bool"));let i=He(n);return Gt(a,n,i)}var QL={kernelName:tu,gradFunc:e=>({x:()=>He(e)})},eP=[pk,J3,Y3,Q3,ez,tz,rz,nz,az,sz,iz,oz,pz,cz,fz,mz,gz,yz,bz,xz,wz,vz,Iz,kz,Tz,Cz,_z,Ez,$z,Az,vL,Fz,Rz,Dz,Mz,Oz,Lz,zz,Pz,Bz,Wz,Vz,Uz,Gz,Hz,jz,qz,Kz,Xz,Yz,Iw,Iw,Qz,rL,sL,iL,oL,lL,uL,pL,dL,hL,cL,fL,mL,Sw,Sw,gL,yL,wL,kL,IL,SL,NL,TL,CL,_L,EL,$L,AL,FL,RL,DL,ML,OL,zL,LL,PL,Nw,Nw,Tw,Tw,BL,VL,WL,UL,GL,HL,jL,qL,KL,XL,ZL,JL,QL];for(let e of eP)s0(e);Y().prototype.abs=function(){return this.throwIfDisposed(),_t(this)};Y().prototype.acos=function(){return this.throwIfDisposed(),rg(this)};Y().prototype.acosh=function(){return this.throwIfDisposed(),ng(this)};Y().prototype.add=function(e){return this.throwIfDisposed(),J(this,e)};Y().prototype.all=function(e,t){return this.throwIfDisposed(),nc(this,e,t)};Y().prototype.any=function(e,t){return this.throwIfDisposed(),Yu(this,e,t)};Y().prototype.argMax=function(e){return this.throwIfDisposed(),Es(this,e)};Y().prototype.argMin=function(e){return this.throwIfDisposed(),ag(this,e)};Y().prototype.asScalar=function(){return this.throwIfDisposed(),$(this.size===1,()=>"The array must have only 1 element."),P(this,[])};Y().prototype.asType=function(e){return this.throwIfDisposed(),se(this,e)};Y().prototype.as1D=function(){return this.throwIfDisposed(),P(this,[this.size])};Y().prototype.as2D=function(e,t){return this.throwIfDisposed(),P(this,[e,t])};Y().prototype.as3D=function(e,t,r){return this.throwIfDisposed(),P(this,[e,t,r])};Y().prototype.as4D=function(e,t,r,n){return this.throwIfDisposed(),P(this,[e,t,r,n])};Y().prototype.as5D=function(e,t,r,n,a){return this.throwIfDisposed(),P(this,[e,t,r,n,a])};Y().prototype.asin=function(){return this.throwIfDisposed(),sg(this)};Y().prototype.asinh=function(){return this.throwIfDisposed(),ig(this)};Y().prototype.atan=function(){return this.throwIfDisposed(),og(this)};Y().prototype.atan2=function(e){return this.throwIfDisposed(),lg(this,e)};Y().prototype.atanh=function(){return this.throwIfDisposed(),ug(this)};Y().prototype.avgPool=function(e,t,r,n){return this.throwIfDisposed(),pa(this,e,t,r,n)};Y().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Lp(this,e,t)};Y().prototype.batchNorm=function(e,t,r,n,a){return this.throwIfDisposed(),no(this,e,t,r,n,a)};Y().prototype.broadcastTo=function(e){return this.throwIfDisposed(),bs(this,e)};Y().prototype.cast=function(e){return this.throwIfDisposed(),se(this,e)};Y().prototype.ceil=function(){return this.throwIfDisposed(),gg(this)};Y().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),ir(this,e,t)};Y().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Ue&&(e=[e]),at([this,...e],t)};Y().prototype.conv1d=function(e,t,r,n,a,s){return this.throwIfDisposed(),ac(this,e,t,r,n,a,s)};Y().prototype.conv2dTranspose=function(e,t,r,n,a){return this.throwIfDisposed(),sc(this,e,t,r,n,a)};Y().prototype.conv2d=function(e,t,r,n,a,s){return this.throwIfDisposed(),cr(this,e,t,r,n,a,s)};Y().prototype.cos=function(){return this.throwIfDisposed(),Pp(this)};Y().prototype.cosh=function(){return this.throwIfDisposed(),ic(this)};Y().prototype.cumprod=function(e,t,r){return this.throwIfDisposed(),tp(this,e,t,r)};Y().prototype.cumsum=function(e,t,r){return this.throwIfDisposed(),oc(this,e,t,r)};Y().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Sg(this,e,t)};Y().prototype.depthwiseConv2d=function(e,t,r,n,a,s){return this.throwIfDisposed(),ao(this,e,t,r,n,a,s)};Y().prototype.dilation2d=function(e,t,r,n,a){return this.throwIfDisposed(),Ng(this,e,t,r,n,a)};Y().prototype.divNoNan=function(e){return this.throwIfDisposed(),Tg(this,e)};Y().prototype.div=function(e){return this.throwIfDisposed(),me(this,e)};Y().prototype.dot=function(e){return this.throwIfDisposed(),Cg(this,e)};Y().prototype.elu=function(){return this.throwIfDisposed(),au(this)};Y().prototype.equal=function(e){return this.throwIfDisposed(),Wr(this,e)};Y().prototype.erf=function(){return this.throwIfDisposed(),_g(this)};Y().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),Ag(this,e,t)};Y().prototype.exp=function(){return this.throwIfDisposed(),fr(this)};Y().prototype.expandDims=function(e){return this.throwIfDisposed(),Qt(this,e)};Y().prototype.expm1=function(){return this.throwIfDisposed(),Fg(this)};Y().prototype.fft=function(){return this.throwIfDisposed(),Xp(this)};Y().prototype.flatten=function(){return this.throwIfDisposed(),P(this,[this.size])};Y().prototype.floor=function(){return this.throwIfDisposed(),iu(this)};Y().prototype.floorDiv=function(e){return this.throwIfDisposed(),rc(this,e)};Y().prototype.gather=function(e,t,r){return this.throwIfDisposed(),ou(this,e,t,r)};Y().prototype.greaterEqual=function(e){return this.throwIfDisposed(),da(this,e)};Y().prototype.greater=function(e){return this.throwIfDisposed(),br(this,e)};Y().prototype.ifft=function(){return this.throwIfDisposed(),Lo(this)};Y().prototype.irfft=function(){return this.throwIfDisposed(),kc(this)};Y().prototype.isFinite=function(){return this.throwIfDisposed(),Rg(this)};Y().prototype.isInf=function(){return this.throwIfDisposed(),Dg(this)};Y().prototype.isNaN=function(){return this.throwIfDisposed(),Mg(this)};Y().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Wp(this,e)};Y().prototype.lessEqual=function(e){return this.throwIfDisposed(),Xa(this,e)};Y().prototype.less=function(e){return this.throwIfDisposed(),Do(this,e)};Y().prototype.localResponseNormalization=function(e,t,r,n){return this.throwIfDisposed(),Og(this,e,t,r,n)};Y().prototype.logSigmoid=function(){return this.throwIfDisposed(),zg(this)};Y().prototype.logSoftmax=function(e){return this.throwIfDisposed(),pc(this,e)};Y().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),dc(this,e,t)};Y().prototype.log=function(){return this.throwIfDisposed(),Vr(this)};Y().prototype.log1p=function(){return this.throwIfDisposed(),Vp(this)};Y().prototype.logicalAnd=function(e){return this.throwIfDisposed(),cn(this,e)};Y().prototype.logicalNot=function(){return this.throwIfDisposed(),Up(this)};Y().prototype.logicalOr=function(e){return this.throwIfDisposed(),hc(this,e)};Y().prototype.logicalXor=function(e){return this.throwIfDisposed(),Lg(this,e)};Y().prototype.matMul=function(e,t,r){return this.throwIfDisposed(),Me(this,e,t,r)};Y().prototype.maxPool=function(e,t,r,n){return this.throwIfDisposed(),Wt(this,e,t,r,n)};Y().prototype.max=function(e,t){return this.throwIfDisposed(),Qr(this,e,t)};Y().prototype.maximum=function(e){return this.throwIfDisposed(),Hn(this,e)};Y().prototype.mean=function(e,t){return this.throwIfDisposed(),xt(this,e,t)};Y().prototype.min=function(e,t){return this.throwIfDisposed(),Ro(this,e,t)};Y().prototype.minimum=function(e){return this.throwIfDisposed(),Da(this,e)};Y().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Bg(this,e,t)};Y().prototype.mod=function(e){return this.throwIfDisposed(),Wg(this,e)};Y().prototype.mul=function(e){return this.throwIfDisposed(),L(this,e)};Y().prototype.neg=function(){return this.throwIfDisposed(),ht(this)};Y().prototype.norm=function(e,t,r){return this.throwIfDisposed(),su(this,e,t,r)};Y().prototype.notEqual=function(e){return this.throwIfDisposed(),Rs(this,e)};Y().prototype.oneHot=function(e,t=1,r=0){return this.throwIfDisposed(),Mo(this,e,t,r)};Y().prototype.onesLike=function(){return this.throwIfDisposed(),Ur(this)};Y().prototype.pad=function(e,t){return this.throwIfDisposed(),_n(this,e,t)};Y().prototype.pool=function(e,t,r,n,a,s){return this.throwIfDisposed(),Vg(this,e,t,r,n,a,s)};Y().prototype.pow=function(e){return this.throwIfDisposed(),oa(this,e)};Y().prototype.prelu=function(e){return this.throwIfDisposed(),jp(this,e)};Y().prototype.prod=function(e,t){return this.throwIfDisposed(),Ug(this,e,t)};Y().prototype.reciprocal=function(){return this.throwIfDisposed(),Kg(this)};Y().prototype.relu=function(){return this.throwIfDisposed(),et(this)};Y().prototype.relu6=function(){return this.throwIfDisposed(),mc(this)};Y().prototype.reshapeAs=function(e){return this.throwIfDisposed(),P(this,e.shape)};Y().prototype.reshape=function(e){return this.throwIfDisposed(),P(this,e)};Y().prototype.resizeBilinear=function(e,t,r){return this.throwIfDisposed(),D1(this,e,t,r)};Y().prototype.resizeNearestNeighbor=function(e,t,r){return this.throwIfDisposed(),M1(this,e,t,r)};Y().prototype.reverse=function(e){return this.throwIfDisposed(),tn(this,e)};Y().prototype.rfft=function(){return this.throwIfDisposed(),Zp(this)};Y().prototype.round=function(){return this.throwIfDisposed(),gc(this)};Y().prototype.rsqrt=function(){return this.throwIfDisposed(),yc(this)};Y().prototype.selu=function(){return this.throwIfDisposed(),bc(this)};Y().prototype.separableConv2d=function(e,t,r,n,a,s){return this.throwIfDisposed(),uu(this,e,t,r,n,a,s)};Y().prototype.sigmoid=function(){return this.throwIfDisposed(),hn(this)};Y().prototype.sign=function(){return this.throwIfDisposed(),Xg(this)};Y().prototype.sin=function(){return this.throwIfDisposed(),xc(this)};Y().prototype.sinh=function(){return this.throwIfDisposed(),wc(this)};Y().prototype.slice=function(e,t){return this.throwIfDisposed(),Ve(this,e,t)};Y().prototype.softmax=function(e){return this.throwIfDisposed(),Za(this,e)};Y().prototype.softplus=function(){return this.throwIfDisposed(),so(this)};Y().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Hp(this,e,t)};Y().prototype.split=function(e,t){return this.throwIfDisposed(),Nr(this,e,t)};Y().prototype.sqrt=function(){return this.throwIfDisposed(),nr(this)};Y().prototype.square=function(){return this.throwIfDisposed(),nt(this)};Y().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Ic(this,e)};Y().prototype.squeeze=function(e){return this.throwIfDisposed(),Ja(this,e)};Y().prototype.stack=function(e,t){this.throwIfDisposed();let r=e instanceof Ue?[this,e]:[this,...e];return Ot(r,t)};Y().prototype.step=function(e){return this.throwIfDisposed(),io(this,e)};Y().prototype.stridedSlice=function(e,t,r,n,a,s,i,o){return this.throwIfDisposed(),Zg(this,e,t,r,n,a,s,i,o)};Y().prototype.sub=function(e){return this.throwIfDisposed(),he(this,e)};Y().prototype.sum=function(e,t){return this.throwIfDisposed(),ge(this,e,t)};Y().prototype.tan=function(){return this.throwIfDisposed(),Jg(this)};Y().prototype.tanh=function(){return this.throwIfDisposed(),As(this)};Y().prototype.tile=function(e){return this.throwIfDisposed(),Lr(this,e)};Y().prototype.toBool=function(){return this.throwIfDisposed(),se(this,"bool")};Y().prototype.toFloat=function(){return this.throwIfDisposed(),se(this,"float32")};Y().prototype.toInt=function(){return this.throwIfDisposed(),se(this,"int32")};Y().prototype.topk=function(e,t){return this.throwIfDisposed(),Qg(this,e,t)};Y().prototype.transpose=function(e){return this.throwIfDisposed(),Oe(this,e)};Y().prototype.unique=function(e){return this.throwIfDisposed(),ey(this,e)};Y().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),_c(this,e,t)};Y().prototype.unstack=function(e){return this.throwIfDisposed(),Nt(this,e)};Y().prototype.where=function(e,t){return this.throwIfDisposed(),Gt(e,this,t)};Y().prototype.zerosLike=function(){return this.throwIfDisposed(),He(this)};var Qn=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Qn.prototype)}},wn=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,wn.prototype)}},V=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,V.prototype)}},Le=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Le.prototype)}},hk=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,hk.prototype)}},ck=class{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let r=this.cache.keys().next().value;this.cache.delete(r)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let r=this.cache.keys().next().value;this.cache.delete(r)}this.maxEntries=e}};function Ms(e,t){if(Array.isArray(e)){let r=[];for(let n=0;n<t;n++)r=r.concat(e);return r}else{let r=new Array(t);return r.fill(e),r}}function Mn(e,t){if(!e)throw new hk(t)}function Cw(e,t){let r=0;for(let n of e)n===t&&r++;return r}function Sr(e){return e.length===1?e[0]:e}function ft(e){return Array.isArray(e)?e:[e]}function ea(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function cs(e){return e.length<=1||e.indexOf("_")===-1?e:e.replace(/[_]+(\w|$)/g,(t,r)=>r.toUpperCase())}var sn={};function xy(e){if(e==null)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function tm(e){if(!(e==null||typeof e!="object"))if(Array.isArray(e))e.forEach(t=>tm(t));else{let t=Object.keys(e);for(let r of t){let n=e[r];n!=null&&typeof n=="object"&&(!Array.isArray(n)&&n.type==="ndarray"&&typeof n.value=="number"?e[r]=n.value:tm(n))}}}function Jp(e,t={},r={},n="object",a=!1){if(typeof e=="string"){let s=e,i;if(s in r)i=r[s];else if(s in sn)i=sn[s];else if(i=t[s],i==null)throw new V(`Unknown ${n}: ${e}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{let s=e;if(s.className==null||s.config==null)throw new V(`${n}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let i=s.className,o,u;if(i in r?[o,u]=r[i]:i in sn?[o,u]=sn.className:i in t&&([o,u]=t[i]),o==null)throw new V(`Unknown ${n}: ${i}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(u!=null){let p={};for(let c of Object.keys(sn))p[c]=sn[c];for(let c of Object.keys(r))p[c]=r[c];let l=s.config;l.customObjects=p;let d=Object.assign({},sn);for(let c of Object.keys(r))sn[c]=r[c];tm(s.config);let h=u(o,s.config,r,a);return sn=Object.assign({},d),h}else{let p=Object.assign({},sn);for(let d of Object.keys(r))sn[d]=r[d];let l=new o(s.config);return sn=Object.assign({},p),l}}}function tP(e,t){return e<t?-1:e>t?1:0}function Fd(e,t){return-1*tP(e,t)}function Ea(e){if(e==null)return e;let t=[];for(let r of e)t.indexOf(r)===-1&&t.push(r);return t}function rP(e){if(e==null)throw new V(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function oo(e,t,r){if(r!=null&&e.indexOf(r)<0)throw new V(`${r} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function wy(e,t,r=0,n=1/0){return Mn(r>=0),Mn(n>=r),Array.isArray(e)&&e.length>=r&&e.length<=n&&e.every(a=>typeof a===t)}function Ut(e,t){Array.isArray(e)?(w.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((r,n)=>Ut(r,`element ${n+1} of ${t}`))):w.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${fk(e)}.`)}function fk(e){return e===null?"null":Array.isArray(e)?"["+e.map(t=>fk(t)).join(",")+"]":typeof e=="string"?`"${e}"`:`${e}`}function nP(e,t,r){let n=r!=null?r():w.now(),a;return(...s)=>{let i=r!=null?r():w.now();return i-n<t||(n=i,a=e(...s)),a}}function mk(e){return e==="relu"?"relu":e==="linear"?"linear":e==="elu"?"elu":null}var aP=0;function gk(){return aP++}var Rd={};function Oc(e=""){return e in Rd||(Rd[e]=0),Rd[e]+=1,e+Rd[e].toString()}var sP=["channelsFirst","channelsLast"],iP=["nearest","bilinear"],oP=["valid","same","causal"],lP=["max","avg"],uP=["sum","mul","concat","ave"],xo=new Map;function Tt(e){oo(sP,"DataFormat",e)}function pP(e){oo(iP,"InterpolationFormat",e)}function nn(e){oo(oP,"PaddingMode",e)}function yk(e){oo(lP,"PoolMode",e)}var Uu=[],_w="/";function xs(e,t){Uu.push(e);try{let r=t();return Uu.pop(),r}catch(r){throw Uu.pop(),r}}function dP(){return Uu.length===0?"":Uu.join(_w)+_w}function bk(e){if(!wk(e))throw new Error("Not a valid tensor name: '"+e+"'");return dP()+e}function xk(e){if(!wk(e))throw new Error("Not a valid tensor name: '"+e+"'");xo.has(e)||xo.set(e,0);let t=xo.get(e);if(xo.set(e,xo.get(e)+1),t>0){let r=`${e}_${t}`;return xo.set(r,1),r}else return e}var hP=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function wk(e){return!!e.match(hP)}function cP(e){return e===parseInt(e.toString(),10)}function $a(e,t,r){t==null&&(t=0),r==null&&(r=e.length);let n=1;for(let a=t;a<r;++a)n*=e[a];return n}function Wo(e){if(e.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let r=0;r<e.length;r++){let n=e[r];n<t&&(t=n)}return t}function Oa(e){if(e.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let r=0;r<e.length;r++){let n=e[r];n>t&&(t=n)}return t}function Nn(e,t){if(t<e)throw new V(`end (${t}) < begin (${e}) is forbidden.`);let r=[];for(let n=e;n<t;++n)r.push(n);return r}var Nf;function Mt(){return Nf==null&&(Nf=_0().epsilon()),Nf}function Tn(){return"channelsLast"}function la(e,t){return se(e,t)}function Yp(e,t=-1){let r=e.shape.slice();return t<0&&(t=r.length+t+1),r.splice(t,0,1),P(e,r)}function fP(e,t){return W(()=>{if(e.shape.length!==2)throw new V(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);let r=Yp(e,1);return rm(r,[1,t,1])})}function mP(e){let t=[$a(e.shape)];return P(e,t)}function gP(e){if(e.rank<=1)throw new V(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],$a(e.shape,1)];return P(e,t)}function ws(e,t,r){return W(()=>{switch(e.rank){case 1:return qp(e,t,r);case 2:return vc(e,[t,0],[r,e.shape[1]]);case 3:return Kp(e,[t,0,0],[r,e.shape[1],e.shape[2]]);case 4:return zo(e,[t,0,0,0],[r,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Ve(e,[t,0,0,0,0],[r,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Ve(e,[t,0,0,0,0,0],[r,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new V(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Tf(e,t,r){return W(()=>{switch(e.rank){case 1:return qp(e,t,r);case 2:return vc(e,[0,t],[e.shape[0],r]);case 3:return Kp(e,[0,0,t],[e.shape[0],e.shape[1],r]);case 4:return zo(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],r]);default:throw new V(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Dd(e,t,r,n){return W(()=>{switch(e.rank){case 1:return qp(e,t,r);case 2:switch(n){case 1:return ws(e,t,r);case 2:return Tf(e,t,r);default:throw new V(`The axis is not within the rank of the tensor ${n}`)}case 3:switch(n){case 1:return ws(e,t,r);case 2:return Kp(e,[0,t,0],[e.shape[0],r,e.shape[2]]);case 3:return Tf(e,t,r);default:throw new V(`The axis is not within the rank of the tensor ${n}`)}case 4:switch(n){case 1:return ws(e,t,r);case 2:return zo(e,[0,t,0,0],[e.shape[0],r,e.shape[2],e.shape[3]]);case 3:return zo(e,[0,0,t,0],[e.shape[0],e.shape[1],r,e.shape[3]]);case 4:return Tf(e,t,r);default:throw new V(`The axis is not within the rank of the tensor ${n}`)}default:throw new V(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function vy(e,t=-1){let r;return t<0&&(r=e[0].rank,r!==0?t=r:t=0),t===e[0].rank&&(t=-1),at(e,t)}function Ew(e,t){switch(e.rank){case 1:return yg([e,t]);case 2:return bg([e,t],0);case 3:return xg([e,t],0);case 4:return wg([e,t],0);default:throw new V(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function rm(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new V(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Lr(e,t)}function zc(e,t=0,r=1,n,a){return fc(e,t,r,n,a)}function Bn(e,t,r,n){if(e.rank<2||t.rank<2)throw new Le(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let a=e.shape.slice(-1)[0],s=t.shape.slice(-2)[0];if(a!==s)throw new Le(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(e.rank===2&&t.rank===2)return Po.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:n?nm(e.rank,n,Tn()):null,activation:r});{let a=e.shape.slice(),s=a.pop();e=P(e,[-1,s]);let i=t.shape.slice(),o=i.pop(),u=i.pop(),p=[...i,o],l=Array.from({length:t.rank},(f,m)=>m===0?t.rank-2:m<=t.rank-2?m-1:m);t=P(Oe(t,l),[u,-1]);let d=[...a,...p];return P(Po.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:n?nm(e.rank,n,Tn()):null,activation:r}),d)}}function vk(e,t,r){return W(()=>(Array.isArray(t)?t=Qe(t,"int32"):t=se(t,"int32"),ou(e,t,r)))}function Qp(e){return L(e,e)}function nm(e,t,r){let n=t.shape;if(t.rank!==1&&t.rank!==e)throw new V(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(e===5){if(r==="channelsFirst")return n.length===1?P(t,[1,n[0],1,1,1]):P(t,[1,n[3],n[0],n[1],n[2]]);if(r==="channelsLast")return n.length===1?P(t,[1,1,1,1,n[0]]):P(t,[1].concat(n))}else if(e===4){if(r==="channelsFirst")return n.length===1?P(t,[1,n[0],1,1]):P(t,[1,n[2],n[0],n[1]]);if(r==="channelsLast")return n.length===1?P(t,[1,1,1,n[0]]):P(t,[1].concat(n))}else if(e===3){if(r==="channelsFirst")return n.length===1?P(t,[1,n[0],1]):P(t,[1,n[1],n[0]]);if(r==="channelsLast")return n.length===1?P(t,[1,1,n[0]]):P(t,[1].concat(n))}else if(e<3)return t;throw new V(`Unsupported input rank by biasAdd: ${t.rank}`)}function En(e,t,r){return W(()=>(r==null&&(r=Tn()),Tt(r),J(e,nm(e.rank,t,r))))}function yP(e,t=1){if(t!==1)throw new Le(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return au(e)}function bP(e){return W(()=>me(e,J(_t(e),1)))}function kk(e,t,r,n){return W(()=>ny(e,t,r,n))}function xP(e){return W(()=>{let t=J(.5,L(.2,e));return ir(t,0,1)})}function ed(e,t,r=!1){return r?e():t()}var wP=["fanIn","fanOut","fanAvg"],vP=["normal","uniform","truncatedNormal"];function kP(e){oo(wP,"FanMode",e)}function IP(e){oo(vP,"Distribution",e)}var mn=class extends re.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},ky=class extends mn{apply(e,t){return wt(e,t)}};ky.className="Zeros";re.registerClass(ky);var Lc=class extends mn{apply(e,t){return Pr(e,t)}};Lc.className="Ones";re.registerClass(Lc);var Iy=class extends mn{constructor(e){if(super(),typeof e!="object")throw new V(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new V(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return W(()=>L(ve(this.value),Pr(e,t)))}getConfig(){return{value:this.value}}};Iy.className="Constant";re.registerClass(Iy);var Sy=class extends mn{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return lu(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};Sy.className="RandomUniform";re.registerClass(Sy);var Ny=class extends mn{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Le(`randomNormal does not support dType ${t}.`);return zc(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Ny.className="RandomNormal";re.registerClass(Ny);var Ty=class extends mn{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Le(`truncatedNormal does not support dType ${t}.`);return Cc(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Ty.className="TruncatedNormal";re.registerClass(Ty);var Cy=class extends mn{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return W(()=>{if(e.length!==2||e[0]!==e[1])throw new V("Identity matrix initializer can only be used for 2D square matrices.");return L(this.gain,lc(e[0]))})}getConfig(){return{gain:this.gain}}};Cy.className="Identity";re.registerClass(Cy);function SP(e,t="channelsLast"){let r,n;if(Tt(t),e.length===2)r=e[0],n=e[1];else if([3,4,5].indexOf(e.length)!==-1){if(t==="channelsFirst"){let a=$a(e,2);r=e[1]*a,n=e[0]*a}else if(t==="channelsLast"){let a=$a(e,0,e.length-2);r=e[e.length-2]*a,n=e[e.length-1]*a}}else{let a=$a(e);r=Math.sqrt(a),n=Math.sqrt(a)}return[r,n]}var _r=class extends mn{constructor(e){if(super(),e.scale<0)throw new V(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,kP(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,IP(this.distribution),this.seed=e.seed}apply(e,t){let r=SP(e),n=r[0],a=r[1],s=this.scale;if(this.mode==="fanIn"?s/=Math.max(1,n):this.mode==="fanOut"?s/=Math.max(1,a):s/=Math.max(1,(n+a)/2),this.distribution==="normal"){let i=Math.sqrt(s);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Le(`${this.getClassName()} does not support dType ${t}.`);return Cc(e,0,i,t,this.seed)}else{let i=Math.sqrt(3*s);return lu(e,-i,i,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};_r.className="VarianceScaling";re.registerClass(_r);var Pc=class extends _r{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return _r.className}};Pc.className="GlorotUniform";re.registerClass(Pc);var Bc=class extends _r{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return _r.className}};Bc.className="GlorotNormal";re.registerClass(Bc);var Wc=class extends _r{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return _r.className}};Wc.className="HeNormal";re.registerClass(Wc);var Vc=class extends _r{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return _r.className}};Vc.className="HeUniform";re.registerClass(Vc);var Uc=class extends _r{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return _r.className}};Uc.className="LeCunNormal";re.registerClass(Uc);var Gc=class extends _r{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return _r.className}};Gc.className="LeCunUniform";re.registerClass(Gc);var _y=class extends mn{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return W(()=>{if(e.length<2)throw new Le("Shape must be at least 2D.");if(t!=="int32"&&t!=="float32"&&t!==void 0)throw new TypeError(`Unsupported data type ${t}.`);t=t;let r=w.sizeFromShape(e.slice(0,-1)),n=e[e.length-1],a=r*n;a>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${a}) elements: Slowness may result.`);let s=[Math.max(n,r),Math.min(n,r)],i=zc(s,0,1,t,this.seed),o=oy.qr(i,!1),u=o[0],p=o[1].flatten().stridedSlice([0],[Math.min(n,r)*Math.min(n,r)],[Math.min(n,r)+1]);return u=L(u,p.sign()),r<n&&(u=u.transpose()),L(ve(this.gain),u.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}};_y.className="Orthogonal";re.registerClass(_y);var $w={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Aw(e,t={}){return Jp(e,re.SerializationMap.getMap().classNameMap,t,"initializer")}function vt(e){return xy(e)}function gt(e){if(typeof e=="string"){let t=e in $w?$w[e]:e;if(t==="GlorotNormal")return new Bc;if(t==="GlorotUniform")return new Pc;if(t==="HeNormal")return new Wc;if(t==="HeUniform")return new Vc;if(t==="LeCunNormal")return new Uc;if(t==="LeCunUniform")return new Gc;{let r={};return r.className=t,r.config={},Aw(r)}}else return e instanceof mn?e:Aw(e)}function am(e){return Array.isArray(e)&&Array.isArray(e[0])}function dh(e){return e.length===0?[]:Array.isArray(e[0])?e:[e]}function Ce(e){let t;if(Array.isArray(e)){if(e.length!==1)throw new V(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Ze(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(e.length===1)return e=e,e[0];throw new V(`Expected exactly 1 Shape; got ${e.length}`)}else return e}function hh(e){let t=0;for(let r of e)r.shape.length===0?t+=1:t+=r.shape.reduce((n,a)=>n*a);return t}var Fw="Variable",Ik=class{constructor(e,t="float32",r=Fw,n=!0,a=null){this.dtype=t==null?"float32":t,this.shape=e.shape,this.id=gk(),r=r==null?Fw:r,this.originalName=bk(r),this.name=xk(this.originalName),this.trainable_=n,this.constraint=a,this.val=ty(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),NP(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function NP(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function sm(e){return e.map(t=>t.read())}function Ey(e){e.forEach(t=>{t[0].write(t[1])})}var Et=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},vn=class{constructor(e,t,r,n,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=r,this.inputs=n,this.callArgs=a,this.outputTensorIndex=i,this.id=gk(),s!=null&&(this.originalName=bk(s),this.name=xk(this.originalName)),this.rank=t.length}},TP=0,Hc=class{constructor(e,t){this.callArgs=t,this.id=TP++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let r of e.inboundLayers)r!=null&&r.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},CP=0,We=class extends re.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=CP++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let r=this.getClassName();t=ea(r)+"_"+Oc(r)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let r;if(e.batchInputShape!=null)r=e.batchInputShape;else if(e.inputShape!=null){let a=null;e.batchSize!=null&&(a=e.batchSize),r=[a].concat(e.inputShape)}this.batchInputShape=r;let n=e.dtype;n==null&&(n=e.inputDType),n==null&&(n="float32"),this.dtype=n}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new wn(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new V(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Sr(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Sr(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Qn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Qn(`Layer ${this.name} is not connected, no input to return.`);return Sr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Qn(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Qn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Sr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=ft(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=ft(this.inputSpec);if(e.length!==t.length)throw new V(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let r=0;r<e.length;r++){let n=e[r],a=t[r];if(a==null)continue;let s=n.rank;if(a.ndim!=null&&s!==a.ndim)throw new V(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(a.maxNDim!=null&&s>a.maxNDim)throw new V(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(a.minNDim!=null&&s<a.minNDim)throw new V(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(a.dtype!=null&&n.dtype!==a.dtype)throw new V(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${n.dtype}.`);if(a.axes){let i=n.shape;for(let o in a.axes){let u=Number(o),p=a.axes[o],l=u>=0?i[u]:i[i.length+u];if(p!=null&&[p,null].indexOf(l)===-1)throw new V(`Input ${r} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${p} but got shape ${i}.`)}}if(a.shape!=null)for(let i=0;i<a.shape.length;++i){let o=a.shape[i],u=n.shape[i];if(o!=null&&u!=null&&o!==u)throw new V(`Input ${r} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${n.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let r=ft(e),n=!0;for(let s of r)if(!(s instanceof vn)){n=!1;break}let a=!0;for(let s of r)if(s instanceof vn){a=!1;break}if(n===a)throw new V("Arguments to apply() must be all SymbolicTensors or all Tensors");return xs(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let s=[];for(let i of ft(e))s.push(i.shape);this.build(Sr(s)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let s=this.call(e,t),i=ft(s),o=[];for(let u of i)r.indexOf(u)!==-1&&(u=u.clone()),o.push(u);if(s=Sr(o),this.activityRegularizer!=null)throw new Le("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}else{let s=_P(e),i=this.computeOutputShape(s),o,u=EP(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?s[0]:s),i!=null&&i.length>0&&Array.isArray(i[0])?o=i.map((p,l)=>new vn(u,p,this,ft(e),t,this.name,l)):o=new vn(u,i,this,ft(e),t,this.name),this.addInboundNode(e,o,null,null,s,i,t),this._refCount++,this.activityRegularizer!=null)throw new Le("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return o}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((r,n)=>{r!=null&&e[n]!=null&&e[n]!==r&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Qn(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let r=JSON.stringify(t.outputShapes);e.indexOf(r)===-1&&e.push(r)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Qn(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new wn(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return hh(this.weights)}build(e){this.built=!0}getWeights(e=!1){return sm(e?this.trainableWeights:this.weights)}setWeights(e){W(()=>{let t=this.weights;if(t.length!==e.length)throw new V(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let r=[],n=sm(t);for(let a=0;a<n.length;++a){let s=n[a],i=t[a],o=e[a];if(!w.arraysEqual(s.shape,o.shape))throw new V(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);r.push([i,o])}Ey(r)})}addWeight(e,t,r,n,a,s,i,o){if(this._addedWeightNames.indexOf(e)!==-1)throw new V(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),r==null&&(r="float32"),this.fastWeightInitDuringBuild&&(n=o!=null?o():gt("zeros"));let u=n.apply(t,r),p=new Ik(u,r,e,s,i);return u.dispose(),a!=null&&this.addLoss(()=>a.apply(p.read())),s==null&&(s=!0),s?this._trainableWeights.push(p):this._nonTrainableWeights.push(p),p}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=ft(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(r=>{if(r!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,r,n,a,s,i=null){let o=ft(e);t=ft(t),r=ft(r),n=ft(n),a=dh(a),s=dh(s);let u=[],p=[],l=[];for(let d of o)u.push(d.sourceLayer),p.push(d.nodeIndex),l.push(d.tensorIndex);new Hc({outboundLayer:this,inboundLayers:u,nodeIndices:p,tensorIndices:l,inputTensors:o,outputTensors:t,inputMasks:r,outputMasks:n,inputShapes:a,outputShapes:s},i);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function _P(e){e=ft(e);let t=[];for(let r of e)t.push(r.shape);return Sr(t)}function EP(e){return"float32"}function Sk(e,t,r){if((t==null||r!=null&&r>0)&&(t=e.sourceLayer,r=e.nodeIndex),t.inboundNodes.length===0)return[e];{let n=t.inboundNodes[r];if(n.inboundLayers.length===0)return n.inputTensors;{let a=[];for(let s=0;s<n.inboundLayers.length;s++){let i=n.inputTensors[s],o=n.inboundLayers[s],u=n.nodeIndices[s],p=Sk(i,o,u);for(let l of p)a.indexOf(l)===-1&&a.push(l)}return a}}}var du=class extends We{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:Oc("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new V("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new V("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new V("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let r=e.dtype||"float32";this.batchInputShape=t,this.dtype=r,this.inputSpec=[{shape:t}];let n=new vn(this.dtype,this.batchInputShape,this,[],{},this.name);n.nodeIndex=0,n.tensorIndex=0,new Hc({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[n],outputTensors:[n],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new V(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};du.className="InputLayer";re.registerClass(du);function Nk(e){if(e.batchShape==null&&e.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(e.batchShape!=null&&e.shape!=null)throw new V("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;e.shape!=null&&t==null&&(t=[null].concat(e.shape));let r=e.dtype;return r==null&&(r="float32"),new du({batchInputShape:t,name:e.name,dtype:r,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}function $P(e,t){if(e.dtype==null||e.dtype===t.dtype)return t;try{return se(t,e.dtype)}catch{throw new V(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}var gs=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof gs)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,r){if(this.id2Value[e.id]==null)this.id2Value[e.id]=$P(e,t),this.name2Id[e.name]=e.id,r!=null&&(this.id2Mask[e.id]=r);else throw new V(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof vn){if(this.id2Value[e.id]==null)throw new V(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new V(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof vn){if(this.id2Value[e.id]==null)throw new V(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new V(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&_e(this.id2Mask)}},ch=new ck,fh=new ck;function AP(e){ch!=null&&ch.setMaxEntries(e),fh!=null&&fh.setMaxEntries(e)}function Du(e,t,r,n){let a=r==null?!1:r.training,s=Array.isArray(e),i=s?e:[e],o=i.map(f=>f.name),u=[],p=t.names();for(let f of o)p.indexOf(f)!==-1?u.push(t.getValue(f)):u.push(null);let l=o.join(",")+"|"+t.names().sort().join(","),d=ch.get(l),h;if(d==null){let f=FP(i,t);d=f.sorted,h=f.recipientCounts,ch.put(l,d),fh.put(l,h)}h={},a||Object.assign(h,fh.get(l));let c=new gs(t);for(let f=0;f<d.length;++f){let m=d[f],g=m.sourceLayer;if(g instanceof du)continue;let y=[],b=[],x=[],v=!1;for(let A of m.inputs){let R=c.getValue(A),F=c.getMask(A);y.push(R),b.push(F),F!=null&&(v=!0),a||(h[A.name]--,h[A.name]===0&&!t.hasKey(A)&&o.indexOf(A.name)===-1&&!R.isDisposed&&A.sourceLayer.stateful!==!0&&x.push(R))}v&&(r=r||{},r.mask=b[0]);let I=ft(g.apply(y,r)),T=null;g.supportsMasking&&(T=g.computeMask(y,b));let _=DP(m),E=Array.isArray(_)?_:[_];for(let A=0;A<E.length;++A){c.hasKey(E[A])||c.add(E[A],I[A],Array.isArray(T)?T[0]:T);let R=o.indexOf(E[A].name);R!==-1&&(u[R]=I[A])}a||_e(x)}return c.disposeMasks(),s?u:u[0]}function FP(e,t){w.assert(e!=null&&e.length>0,()=>"Expected at least one fetch, got none");let r=[],n={};if(e.length===1){let a=Rw(e[0],t);r=a.sorted,n=a.recipientMap}else{let a=new Set;for(let s of e){let{sorted:i,recipientMap:o}=Rw(s,t);for(let u of i)a.has(u.name)||(r.push(u),a.add(u.name));for(let u in o)n[u]==null&&(n[u]=new Set),o[u].forEach(p=>n[u].add(p))}}return{sorted:r,recipientCounts:RP(n)}}function RP(e){let t={};for(let r in e)t[r]=e[r].size;return t}function Rw(e,t){let r=new Set,n=[],a={};for(let o of t.names())r.add(o);let s=[],i=[];for(s.push(e);s.length>0;){let o=s[s.length-1];if(r.has(o.name)){s.pop();continue}let u=i[i.length-1]===s.length-1;if(o.inputs.length===0||u)s.pop(),n.push(o),r.add(o.name),u&&i.pop();else{i.push(s.length-1);for(let p of o.inputs)a[p.name]==null&&(a[p.name]=new Set),a[p.name].add(o.name),!r.has(p.name)&&s.push(p)}}return{sorted:n,recipientMap:a}}function DP(e){let t;if(e.sourceLayer.inboundNodes.length===1)t=e.sourceLayer.output;else{let r=null;for(let n=0;n<e.sourceLayer.inboundNodes.length;++n)for(let a of e.sourceLayer.inboundNodes[n].outputTensors)if(a.id===e.id){r=n;break}t=e.sourceLayer.getOutputAt(r)}return t}var MP=H();MP.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,AP);var Tk={};Ee(Tk,{maxNorm:()=>OP,minMaxNorm:()=>PP,nonNeg:()=>LP,unitNorm:()=>zP});function $y(e,t){return W(()=>nr(ge(L(e,e),t,!0)))}var td=class extends re.Serializable{getConfig(){return{}}},Ay=class extends td{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return W(()=>{let t=$y(e,this.axis),r=ir(t,0,this.maxValue);return L(e,me(r,J(Mt(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};Ay.className="MaxNorm";re.registerClass(Ay);var Fy=class extends td{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return W(()=>me(e,J(Mt(),$y(e,this.axis))))}getConfig(){return{axis:this.axis}}};Fy.className="UnitNorm";re.registerClass(Fy);var Ry=class extends td{apply(e){return et(e)}};Ry.className="NonNeg";re.registerClass(Ry);var Dy=class extends td{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return W(()=>{let t=$y(e,this.axis),r=J(L(this.rate,ir(t,this.minValue,this.maxValue)),L(1-this.rate,t));return L(e,me(r,J(Mt(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};Dy.className="MinMaxNorm";re.registerClass(Dy);var Dw={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Lt(e){return xy(e)}function Mw(e,t={}){return Jp(e,re.SerializationMap.getMap().classNameMap,t,"constraint")}function Pt(e){if(e==null)return null;if(typeof e=="string"){let t={className:e in Dw?Dw[e]:e,config:{}};return Mw(t)}else return e instanceof td?e:Mw(e)}function OP(e){return new Ay(e)}function zP(e){return new Fy(e)}function LP(){return new Ry}function PP(e){return new Dy(e)}var Ck={};Ee(Ck,{constant:()=>VP,glorotNormal:()=>XP,glorotUniform:()=>KP,heNormal:()=>ZP,heUniform:()=>JP,identity:()=>jP,leCunNormal:()=>YP,leCunUniform:()=>QP,ones:()=>WP,orthogonal:()=>eB,randomNormal:()=>GP,randomUniform:()=>UP,truncatedNormal:()=>HP,varianceScaling:()=>qP,zeros:()=>BP});function BP(){return new ky}function WP(){return new Lc}function VP(e){return new Iy(e)}function UP(e){return new Sy(e)}function GP(e){return new Ny(e)}function HP(e){return new Ty(e)}function jP(e){return new Cy(e)}function qP(e){return new _r(e)}function KP(e){return new Pc(e)}function XP(e){return new Bc(e)}function ZP(e){return new Wc(e)}function JP(e){return new Vc(e)}function YP(e){return new Uc(e)}function QP(e){return new Gc(e)}function eB(e){return new _y(e)}var _k={};Ee(_k,{Layer:()=>We,RNN:()=>qn,RNNCell:()=>id,activation:()=>CW,add:()=>OW,alphaDropout:()=>x4,average:()=>zW,averagePooling1d:()=>Gb,averagePooling2d:()=>Hb,averagePooling3d:()=>jb,avgPool1d:()=>jW,avgPool2d:()=>KW,avgPool3d:()=>ZW,avgPooling1d:()=>qW,avgPooling2d:()=>XW,avgPooling3d:()=>JW,batchNormalization:()=>UW,bidirectional:()=>d4,categoryEncoding:()=>S4,centerCrop:()=>k4,concatenate:()=>LW,conv1d:()=>bW,conv2d:()=>xW,conv2dTranspose:()=>wW,conv3d:()=>vW,conv3dTranspose:()=>kW,convLstm2d:()=>o4,convLstm2dCell:()=>l4,cropping2D:()=>SW,dense:()=>_W,depthwiseConv2d:()=>TW,dot:()=>VW,dropout:()=>EW,elu:()=>hW,embedding:()=>MW,flatten:()=>AW,gaussianDropout:()=>b4,gaussianNoise:()=>y4,globalAveragePooling1d:()=>YW,globalAveragePooling2d:()=>QW,globalMaxPool1d:()=>c4,globalMaxPool2d:()=>f4,globalMaxPooling1d:()=>xI,globalMaxPooling2d:()=>wI,gru:()=>t4,gruCell:()=>r4,input:()=>jk,inputLayer:()=>dW,layerNormalization:()=>GW,leakyReLU:()=>fW,lstm:()=>n4,lstmCell:()=>a4,masking:()=>w4,maxPool1d:()=>m4,maxPool2d:()=>g4,maxPooling1d:()=>vI,maxPooling2d:()=>kI,maxPooling3d:()=>e4,maximum:()=>PW,minimum:()=>BW,multiply:()=>WW,permute:()=>DW,prelu:()=>mW,reLU:()=>cW,repeatVector:()=>FW,rescaling:()=>v4,reshape:()=>RW,resizing:()=>I4,rnn:()=>u4,separableConv2d:()=>IW,simpleRNN:()=>s4,simpleRNNCell:()=>i4,softmax:()=>gW,spatialDropout1d:()=>$W,stackedRNNCells:()=>p4,thresholdedReLU:()=>yW,timeDistributed:()=>h4,upSampling2d:()=>NW,zeroPadding2d:()=>HW});async function wa(e){if(e==null)return;let t=[],r=[],n=[];for(let a in e){let s=e[a];if(typeof s!="number"){let i=s;t.push(i.data()),r.push(a),n.push(i)}}if(t.length>0){let a=await Promise.all(t);for(let s=0;s<a.length;++s)e[r[s]]=a[s][0];_e(n)}}function Ek(e){if(e!=null)for(let t in e){let r=e[t];typeof r!="number"&&r.dispose()}}var Ow;(function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"})(Ow||(Ow={}));var tB=125,Vo=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},$k=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let r of this.callbacks)await r.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let r of this.callbacks)await r.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let r of this.callbacks)await r.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let r of this.callbacks)await r.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},rB=class extends Vo{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let r=t.size==null?0:t.size;this.seen+=r;for(let n in t){let a=t[n];if(typeof a=="number")this.totals.hasOwnProperty(n)||(this.totals[n]=0),this.totals[n]=this.totals[n]+a*r;else{let s;n in this.totals?s=this.totals[n]:this.totals[n]=0;let i=W(()=>J(this.totals[n],L(a,r)));this.totals[n]=i,s!=null&&s.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let r of this.params.metrics)this.totals[r]!=null&&(typeof this.totals[r]=="number"?t[r]=this.totals[r]/this.seen:W(()=>{let n=L(me(1,this.seen),this.totals[r]);t[r]=n,this.totals[r].dispose(),Dt(t[r])}))}},Ak=class extends Vo{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let r in t)this.history[r]==null&&(this.history[r]=[]),this.history[r].push(t[r])}async syncData(){let e=[],t=[],r=[];for(let a in this.history){let s=this.history[a];for(let i=0;i<s.length;++i)if(typeof s[i]!="number"){let o=s[i];e.push(o.data()),t.push(a),r.push(i)}}let n=await Promise.all(e);for(let a=0;a<n.length;++a)this.history[t[a]][r[a]].dispose(),this.history[t[a]][r[a]]=n[a][0]}},Fk=class extends Vo{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||yy,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=tB),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");w.isNumber(this.yieldEvery)&&(this.maybeWait=nP(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,r){let n=[];this.yield!=null&&(await wa(r),n.push(this.yield(e,t,r))),n.push(this.nextFrameFunc()),await Promise.all(n)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await wa(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let r=[];this.epochEnd!=null&&(await wa(t),r.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&r.push(this.nextFrameFunc()),await Promise.all(r)}async onBatchBegin(e,t){this.batchBegin!=null&&(await wa(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let r=[];this.batchEnd!=null&&(await wa(t),r.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?r.push(this.nextFrameFunc()):w.isNumber(this.yieldEvery)&&r.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(r)}async onTrainBegin(e){this.trainBegin!=null&&(await wa(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await wa(e),await this.trainEnd(e))}};function Rk(e,t){return e==null&&(e={}),e instanceof Vo?[e]:Array.isArray(e)&&e[0]instanceof Vo?e:ft(e).map(r=>new Fk(r,t))}var un=class{constructor(){}static registerCallbackConstructor(e,t){w.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),un.checkForDuplicate(t),un.constructors[e]==null&&(un.constructors[e]=[]),un.constructors[e].push(t)}static checkForDuplicate(e){for(let t in un.constructors)un.constructors[+t].forEach(r=>{if(r===e)throw new V("Duplicate callback constructor.")})}static clear(){un.constructors={}}static createCallbacks(e){let t=[];for(let r in un.constructors){let n=+r;e>=n&&t.push(...un.constructors[n])}return t.map(r=>new r)}};un.constructors={};function Dk(e,t,r,n,a,s,i,o,u){let p=new Ak,l=[new rB,...un.createCallbacks(t)];e!=null&&l.push(...e),l.push(p);let d=new $k(l);return d.setParams({epochs:r,initialEpoch:n,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:d,history:p}}function In(e,t={},r=!1){return Jp(e,re.SerializationMap.getMap().classNameMap,t,"layer",r)}function mh(e,t){return W(()=>{e.dtype!=="float32"&&(e=se(e,"float32"));let r=ge(Qp(e),t,!0),n=Br(r.shape,Mt()),a=nr(Hn(r,n));return me(e,a)})}function lo(e,t){return W(()=>xt(Qp(he(t,e)),-1))}function jc(e,t){return W(()=>xt(_t(he(t,e)),-1))}function hu(e,t){return W(()=>{let r=he(e,t),n=ir(_t(e),Mt(),Number.MAX_VALUE),a=_t(me(r,n));return L(100,xt(a,-1))})}function nB(e,t){return W(()=>{let r=ir(t,Mt(),Number.MAX_VALUE),n=Vr(J(1,r)),a=ir(e,Mt(),Number.MAX_VALUE),s=Vr(J(1,a));return xt(Qp(he(n,s)),-1)})}function aB(e,t){return W(()=>{let r=Hn(0,he(1,L(e,t)));return xt(Qp(r),-1)})}function sB(e,t){return W(()=>{let r=Hn(0,he(1,L(e,t)));return xt(r,-1)})}function iB(e,t){return W(()=>{let r=ge(L(e,t),-1),n=Qr(L(he(1,e),t),-1);return Hn(0,J(1,he(n,r)))})}function oB(e,t){return W(()=>{let r=Math.log(2),n=he(t,e),a=he(J(n,so(L(-2,n))),r);return xt(a,-1)})}function rp(e,t,r=!1){return W(()=>{if(r)t=Za(t);else{let n=ge(t,t.shape.length-1,!0);t=me(t,n)}return t=ir(t,Mt(),1-Mt()),ht(ge(L(se(e,"float32"),Vr(t)),t.shape.length-1))})}function gh(e,t,r=!1){return W(()=>{let n=se(iu(mP(e)),"int32");t=ir(t,Mt(),1-Mt());let a=t.shape,s=P(Mo(n,a[a.length-1]),a);return rp(s,t,r)})}function lB(e,t){if(!w.arraysEqual(e.shape,t.shape))throw new V(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return W(()=>{let r=et(t),n=ht(_t(t));return J(he(r,L(t,e)),Vp(fr(n)))})}function qc(e,t){return W(()=>{let r;return r=ir(t,Mt(),1-Mt()),r=Vr(me(r,he(1,r))),xt(lB(e,r),-1)})}function uB(e,t){return W(()=>{let r=ir(e,Mt(),1),n=ir(t,Mt(),1);return ge(L(e,Vr(me(r,n))),-1)})}function pB(e,t){return W(()=>{let r=Vr(J(Mt(),t));return xt(he(t,L(e,r)),-1)})}function My(e,t){return W(()=>{let r=mh(e,-1),n=mh(t,-1),a=L(r,n);return ht(ge(a,-1))})}var yh={meanSquaredError:lo,meanAbsoluteError:jc,meanAbsolutePercentageError:hu,meanSquaredLogarithmicError:nB,squaredHinge:aB,hinge:sB,categoricalHinge:iB,logcosh:oB,categoricalCrossentropy:rp,sparseCategoricalCrossentropy:gh,binaryCrossentropy:qc,kullbackLeiblerDivergence:uB,poisson:pB,cosineProximity:My};function Cf(e){if(typeof e=="string"){if(e in yh)return yh[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new V(t)}else return e}function Oy(e,t){return W(()=>{let r=L(.5,Ur(t)),n=la(br(t,r),e.dtype);return xt(Wr(e,n),-1)})}function zy(e,t){return W(()=>la(Wr(Es(e,-1),Es(t,-1)),"float32"))}function Mk(e,t){return W(()=>se(ge(cn(Wr(e,1),Wr(t,1))),"float32"))}function dB(e,t){return W(()=>se(ge(cn(Wr(e,1),Wr(t,0))),"float32"))}function hB(e,t){return W(()=>se(ge(cn(Wr(e,0),Wr(t,1))),"float32"))}function Ok(e,t){return W(()=>{let r=Mk(e,t),n=hB(e,t),a=J(r,n);return se(Gt(br(a,0),me(r,a),0),"float32")})}function cB(e,t){return W(()=>{let r=Mk(e,t),n=dB(e,t),a=J(r,n);return se(Gt(br(a,0),me(r,a),0),"float32")})}function zk(e,t){return qc(e,t)}function Lk(e,t){return e.rank===t.rank&&(e=Ja(e,[e.rank-1])),t=Es(t,-1),t.dtype!==e.dtype&&(t=se(t,e.dtype)),se(Wr(e,t),"float32")}var fB=lo,mB=lo,gB=jc,yB=jc,bB=hu,xB=hu,Ly=rp,wB=My,Pk=gh,bh={binaryAccuracy:Oy,categoricalAccuracy:zy,precision:Ok,categoricalCrossentropy:Ly,sparseCategoricalCrossentropy:Pk,mse:fB,MSE:mB,mae:gB,MAE:yB,mape:bB,MAPE:xB,cosine:wB};function vB(e){if(typeof e=="string"&&e in bh)return bh[e];if(typeof e!="string"&&e!=null)return e;throw new V(`Unknown metric ${e}`)}function Md(e){if(Mn(e!==null,`Unknown LossOrMetricFn ${e}`),typeof e=="string")return e;{let t;for(let r of Object.keys(yh))if(yh[r]===e){t=r;break}if(t!==void 0)return t;for(let r of Object.keys(bh))if(bh[r]===e){t=r;break}return t!==void 0?t:e.name}}function kB(e){let t={Adagrad:()=>ps.adagrad(.01),Adadelta:()=>ps.adadelta(1,.95,Mt()),Adam:()=>ps.adam(.001,.9,.999,Mt()),Adamax:()=>ps.adamax(.002,.9,.999,Mt(),0),RMSProp:()=>ps.rmsprop(.001,.9,0,Mt()),SGD:()=>ps.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new V(`Unknown Optimizer ${e}`)}function zw(e,t,r=!1){if(e==null||typeof e!="object"||Object.getPrototypeOf(e)!==Object.prototype||!im(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(r){let n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function im(e){if(e===null)return!0;if(typeof e=="object")if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let r of t)if(typeof r!="string"||!im(e[r]))return!1;return!0}else if(Array.isArray(e)){for(let t of e)if(!im(t))return!1;return!0}else return!1;else{let t=typeof e;return t==="string"||t==="number"||t==="boolean"}}function IB(e,t,r,n=console.log){let a=NB(e),s=["Layer (type)","Input Shape","Output shape","Param #"];a?(t=t||90,r=r||[.32,.61,.89,1]):(t=t||115,r=r||[.24,.48,.7,.8,1]),r[r.length-1]<=1&&(r=r.map(l=>Math.floor(t*l)));let i;if(!a){s.push("Receives inputs"),i=[];for(let l in e.nodesByDepth)i.push(...e.nodesByDepth[l])}n("_".repeat(t)),xh(s,r,n),n("=".repeat(t));let o=e.layers;for(let l=0;l<o.length;++l)a?TB(o[l],r,n):CB(o[l],r,i,n),n((l===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let u=SB(e),p=hh(e.nonTrainableWeights);n(`Total params: ${u+p}`),n(`Trainable params: ${u}`),n(`Non-trainable params: ${p}`),n("_".repeat(t))}function SB(e){let t;return e.collectedTrainableWeights!=null?t=hh(e.collectedTrainableWeights):t=hh(e.trainableWeights),t}function NB(e){let t=!0,r=[],n=[];for(let a in e.nodesByDepth)r.push(e.nodesByDepth[a]);for(let a of r){if(a.length>1||a.length===1&&a[0].inboundLayers.length>1){t=!1;break}n.push(...a)}if(t)for(let a of e.layers){let s=!1;for(let i of a.inboundNodes)if(n.indexOf(i)!==-1)if(s){t=!1;break}else s=!0;if(!t)break}return t}function xh(e,t,r=console.log){let n="";for(let a=0;a<e.length;++a)a>0&&(n=n.slice(0,n.length-1)+" "),n+=e[a],n=n.slice(0,t[a]),n+=" ".repeat(t[a]-n.length);r(n)}function TB(e,t,r){let n,a;try{a=e.inboundNodes.map(u=>JSON.stringify(u.inputShapes)).join(",")}catch{a="multiple"}try{n=JSON.stringify(e.outputShape)}catch{n="multiple"}let s=e.name,i=e.getClassName(),o=[`${s} (${i})`,a,n,e.countParams().toString()];xh(o,t,r)}function CB(e,t,r,n){let a,s;try{s=e.inboundNodes.map(d=>JSON.stringify(d.inputShapes)).join(",")}catch{s="multiple"}try{a=JSON.stringify(e.outputShape)}catch{a="multiple"}let i=[];for(let d of e.inboundNodes)if(!(r!=null&&r.length>0&&r.indexOf(d)===-1))for(let h=0;h<d.inboundLayers.length;++h){let c=d.inboundLayers[h].name,f=d.nodeIndices[h],m=d.tensorIndices[h];i.push(`${c}[${f}][${m}]`)}let o=e.name,u=e.getClassName(),p=i.length===0?"":i[0],l=[`${o} (${u})`,s,a,e.countParams().toString(),p];xh(l,t,n);for(let d=1;d<i.length;++d)xh(["","","","",i[d]],t,n)}function Bk(e,t,r){return(e==="inboundNodes"||e==="outputLayers"||e==="inputLayers")&&t===0&&typeof r=="string"}function np(e,t){if(e===null)return null;if(typeof e=="string")return cs(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let r=[],n=e.length;for(let a=0;a<n;++a){let s=e[a];Bk(t,a,s)?r.push(s):r.push(np(s,t))}return r}else{let r={};for(let n of Object.keys(e)){let a=e[n];if(n==="name"&&typeof a=="string")r[n]=a;else{let s=cs(n);r[s]=np(a,s)}}return r}}function om(e,t){if(e==null)return null;if(typeof e=="string")return ea(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let r=[],n=e.length;for(let a=0;a<n;++a){let s=e[a];Bk(t,a,s)?r.push(s):r.push(om(s,t))}return r}else{let r={};for(let n of Object.keys(e)){let a=e[n],s=ea(n);(n==="name"||n==="className")&&typeof a=="string"?r[s]=a:r[s]=om(a,n)}return r}}var Py="4.3.0",Fn=class extends We{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){let y=this.getClassName().toLowerCase();this.name=Oc(y)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Ea(this.inputs).length!==this.inputs.length)throw new V(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(y=>y.name)}`);Ea(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(y=>y.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let y of this.outputs){let b=y.sourceLayer,x=y.nodeIndex,v=y.tensorIndex;this.outputLayers.push(b),this.outputLayersNodeIndices.push(x),this.outputLayersTensorIndices.push(v)}for(let y of this.inputs){let b=y.sourceLayer,x=y.nodeIndex,v=y.tensorIndex;Mn(x===0,"input layer has >1 nodes"),Mn(v===0,"input layer has >1 tensors"),this.inputLayers.push(b),this.inputLayersNodeIndices.push(x),this.inputLayersTensorIndices.push(v)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){let b=this.inputLayers[y];if(!(b instanceof du))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${b.getClassName()}.`);this.inputNames.push(b.name),this.feedInputShapes.push(b.batchInputShape),this.feedInputNames.push(b.name)}for(let y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(y=>y.shape),this.internalOutputShapes=this.outputs.map(y=>y.shape);let t={},r={},n={},a={},s={},i=[],o=(y,b,x,v,I,T)=>{(v==null||I==null||T==null)&&(v=y.sourceLayer,I=y.nodeIndex,T=y.tensorIndex);let _=v.inboundNodes[I];if(x.indexOf(_)!==-1)throw new wn(`The tensor ${y.name} at layer "${v.name}" is part of a cycle.`);if(b.indexOf(_)!==-1)return;this.containerNodes.add(Fn.nodeKey(v,I)),v.id in s||(s[v.id]=Object.keys(s).length),x.indexOf(_)===-1&&x.push(_);let E=_.inboundLayers.length;for(let A=0;A<E;A++){let R=_.inputTensors[A],F=_.inboundLayers[A],S=_.nodeIndices[A],M=_.tensorIndices[A];o(R,b,x,F,S,M)}for(b.push(_);x.indexOf(_)>=0;)x.splice(x.indexOf(_),1);i.push(_)},u=[],p=[];for(let y of this.outputs)o(y,u,p);let l=i.slice().reverse();for(let y of l){r[y.id]=y,y.id in t||(t[y.id]=0);let b=t[y.id],x=n[y.outboundLayer.id]==null?0:n[y.outboundLayer.id];b=Math.max(b,x),n[y.outboundLayer.id]=b,a[y.outboundLayer.id]=y.outboundLayer,t[y.id]=b;for(let v=0;v<y.inboundLayers.length;v++){let I=y.inboundLayers[v],T=y.nodeIndices[v],_=I.inboundNodes[T],E=t[_.id]==null?0:t[_.id];t[_.id]=Math.max(b+1,E),r[_.id]=_}}let d={};for(let y in t){let b=t[y];b in d||(d[b]=[]),d[b].push(r[y])}let h={};for(let y in n){let b=n[y];b in h||(h[b]=[]),h[b].push(a[y])}let c=Object.keys(h).map(y=>parseInt(y,10)).sort(Fd);this.layers=[];for(let y of c){let b=h[y];b.sort((x,v)=>{let I=s[x.id],T=s[v.id];return I<T?-1:I>T?1:0});for(let x of b)x instanceof Fn&&this.internalContainerRefs.push(x),this.layers.push(x)}this.layersByDepth=h,c=Object.keys(d).map(y=>parseInt(y,10)).sort(Fd);let f=this.inputs.slice(),m=[];for(let y of c)for(let b of d[y]){let x=b.outboundLayer;if(x!=null){for(let v of b.inputTensors)if(f.indexOf(v)===-1)throw new wn(`Graph disconnected: cannot obtain value for tensor ${v} at layer "${x.name}". The following previous layers were accessed without issue: ${m}`);for(let v of b.outputTensors)f.push(v);m.push(x.name)}}this.nodesByDepth=d;let g=this.layers.map(y=>y.name);for(let y of g){let b=g.filter(x=>x===y).length;if(b!==1)throw new wn(`The name "${y}" is used ${b} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Hc({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(y=>null),outputMasks:this.outputs.map(y=>null),inputShapes:this.inputs.map(y=>y.shape),outputShapes:this.outputs.map(y=>y.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(r=>r.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new V("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let r of this.layers)t.push(...r.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let r={},n=0;for(let s of this.layers)for(let i of s.weights){if(r[i.originalName]!=null)throw new V(`Duplicate weight name: ${i.originalName}`);r[i.originalName]=i,n++}let a=[];for(let s in e){let i=s;if(r[s]==null){let o=s.split("/");i=o.slice(0,-2).concat([o[o.length-1]]).join("/")}if(r[i]!=null)a.push([r[i],e[s]]);else if(t)throw new V(`Provided weight data has no target variable: ${s}`);delete r[i]}if(t){let s=[];for(let i in r)s.push(i);if(s.length>0)throw new V(`${s.length} of ${n} weights are not set: ${s}`)}Ey(a)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Py}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let r=om(this.updatedConfig());return t?JSON.stringify(r):r}call(e,t){return W(()=>{e=ft(e);let r=new gs;for(let n=0;n<this.inputs.length;++n)r.add(this.inputs[n],e[n]);return Du(this.outputs,r,t)})}computeMask(e,t){return W(()=>{e=ft(e);let r;return t==null?r=Ms(null,e.length):r=ft(t),this.runInternalGraph(e,r)[1]})}computeOutputShape(e){let t=dh(e);if(t.length!==this.inputLayers.length)throw new V(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let r={};for(let i=0;i<t.length;i++){let o=this.inputLayers[i],u=t[i],p=o.name+"_0_0";r[p]=u}let n=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(Fd);if(n.length>1)for(let i of n){let o=this.nodesByDepth[i];for(let u of o){let p=u.outboundLayer;if(this.inputLayers.map(f=>f.id).indexOf(p.id)!==-1)continue;let l=[];for(let f=0;f<u.inboundLayers.length;f++){let m=u.inboundLayers[f],g=u.nodeIndices[f],y=u.tensorIndices[f],b=`${m.name}_${g}_${y}`,x=r[b];l.push(x)}let d=p.computeOutputShape(Sr(l)),h=dh(d),c=p.inboundNodes.indexOf(u);for(let f=0;f<h.length;f++){let m=`${p.name}_${c}_${f}`;r[m]=h[f]}}}let a=[],s=[];for(let i=0;i<this.outputLayers.length;i++){let o=this.outputLayers[i],u=this.outputLayersNodeIndices[i],p=this.outputLayersTensorIndices[i],l=`${o.name}_${u}_${p}`;s.push(l)}for(let i=0;i<s.length;i++){let o=s[i];Mn(o in r),a.push(r[o])}return Sr(a)}runInternalGraph(e,t){t==null&&(t=Ms(null,e.length));let r={};for(let o=0;o<this.inputs.length;++o){let u=this.inputs[o],p=e[o],l=t[o];r[u.id]=[p,l]}let n=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(Fd);for(let o of n){let u=this.nodesByDepth[o];for(let p of u){let l=p.outboundLayer,d=p.inputTensors,h=p.outputTensors,c=new Array;for(let f of d)f.id in r&&c.push(r[f.id]);if(c.length===d.length){let f={},m,g,y,b;if(p.callArgs!=null&&(f=p.callArgs),c.length===1){let[x,v]=c[0];f.mask==null&&(f.mask=v),y=ft(l.call(x,f)),b=ft(l.computeMask(x,v)),m=[x],g=[v]}else m=c.map(x=>x[0]),g=c.map(x=>x[1]),f.mask==null&&(f.mask=g),y=ft(l.call(m,f)),b=ft(l.computeMask(m,g));if(l.activityRegularizer)throw new Le("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let x=0;x<h.length;++x){let v=h[x],I=y[x],T=b[x];r[v.id]=[I,T]}}}}let a=[],s=[],i=[];for(let o of this.outputs){Mn(o.id in r,`Could not compute output ${o.name} : ${o.id}`);let[u,p]=r[o.id];i.push(u.shape),a.push(u),s.push(p)}return[a,s,i]}buildNodeConversionMap(e){let t={},r;for(let n of this.layers){r=n instanceof Fn?1:0;for(let a=0;a<n.inboundNodes.length;a++){let s=Fn.nodeKey(n,a);this.containerNodes.has(s)&&(t[s]=r,r+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new V(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new V("Provide either a layer name or layer index");for(let r of this.layers)if(r.name===e)return r;throw new V(`No such layer: ${e}`)}calculateLosses(){return W(()=>{let e=[];for(let t of this.layers)for(let r=0;r<t.inboundNodes.length;++r){let n=Fn.nodeKey(t,r);this.containerNodes.has(n)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),r=[];for(let s of this.layers){let i=s.getClassName(),o=s.getConfig(),u=[];for(let l=0;l<s.inboundNodes.length;l++){let d=s.inboundNodes[l],h=Fn.nodeKey(s,l),c={};if(this.containerNodes.has(h)){if(d.callArgs)try{JSON.stringify(d.callArgs),c=d.callArgs}catch{console.warn(`Layer ${s.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),c={}}if(d.inboundLayers.length>0){let f=[];for(let m=0;m<d.inboundLayers.length;m++){let g=d.inboundLayers[m],y=d.nodeIndices[m],b=d.tensorIndices[m],x=Fn.nodeKey(g,y),v=t[x];v==null&&(v=0),f.push([g.name,v,b,c])}u.push(f)}}}let p={};p.name=s.name,p.className=i,p.config=o,p.inboundNodes=u,r.push(p)}e.layers=r;let n=[];for(let s=0;s<this.inputLayers.length;s++){let i=this.inputLayers[s],o=this.inputLayersNodeIndices[s],u=Fn.nodeKey(i,o);if(!this.containerNodes.has(u))continue;let p=t[u];p==null&&(p=0);let l=this.inputLayersTensorIndices[s];n.push([i.name,p,l])}e.inputLayers=n;let a=[];for(let s=0;s<this.outputLayers.length;s++){let i=this.outputLayers[s],o=this.outputLayersNodeIndices[s],u=Fn.nodeKey(i,o);if(!this.containerNodes.has(u))continue;let p=t[u];p==null&&(p=0);let l=this.outputLayersTensorIndices[s];a.push([i.name,p,l])}return e.outputLayers=a,e}static fromConfig(e,t,r={},n=!1){let a={},s={};function i(m,g){m.name in s?s[m.name].push(g):s[m.name]=[g]}function o(m,g){let y=[],b;for(let x of g){let v=x[0],I=x[1],T=x[2];if(b=x[3]==null?{}:x[3],!(v in a)){i(m,g);return}let _=a[v];if(_.inboundNodes.length<=I){i(m,g);return}let E=_.inboundNodes[I];y.push(E.outputTensors[T])}y.length>0&&m.apply(Sr(y),b)}function u(m){let g=m.name,y=In(m,t.customObjects!=null?t.customObjects:{});y.setFastWeightInitDuringBuild(n),a[g]=y,m.inboundNodes.forEach(b=>{if(!(b instanceof Array))throw new V(`Corrupted configuration, expected array for nodeData: ${b}`);i(y,b)})}let p=t.name,l=t.layers;for(let m of l)u(m);for(;!rP(s);)for(let m of l){let g=a[m.name];if(g.name in s){let y=s[g.name];delete s[g.name];for(let b of y)o(g,b)}}let d=[],h=[],c=t.inputLayers;for(let m of c){let g=m[0],y=m[1],b=m[2];Mn(g in a);let x=a[g].inboundNodes[y].outputTensors;d.push(x[b])}let f=t.outputLayers;for(let m of f){let g=m[0],y=m[1],b=m[2];Mn(g in a);let x=a[g].inboundNodes[y].outputTensors;h.push(x[b])}return new e({inputs:d,outputs:h,name:p})}get stateful(){if(this._stateful)throw new V("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){W(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function _B(e,t,r){let n=t.length;if(e==null||Array.isArray(e)&&e.length===0)return t.map(a=>null);if(n===1)return Array.isArray(e)&&e.length===1?e:typeof e=="object"&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==n)throw new Error(`Provided ${r} is an array of ${e.length} element(s), but the model has ${n} outputs. Make sure a set of weights is provided for each model output.`);return e}else if(typeof e=="object"&&Object.keys(e).length>0&&typeof e[Object.keys(e)[0]]=="object"){let a=[];return t.forEach(s=>{s in e?a.push(e[s]):a.push(null)}),a}else throw new Error(`The model has multiple (${n}) outputs, so ${r} must be either an array with ${n} elements or an object with ${t} keys. Provided ${r} not understood: ${JSON.stringify(e)}`)}function Wk(e,t){return _B(e,t,"classWeight")}async function Vk(e,t,r,n){if(r!=null){let a=W(()=>{if(e.shape.length===1)return Ln(e);if(e.shape.length===2){if(e.shape[1]>1)return Es(e,1);if(e.shape[1]===1)return P(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(await a.data());_e(a);let i=[];return s.forEach(o=>{if(r[o]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${o} exists in the data but not in classWeight`);i.push(r[o])}),Qe(i,"float32")}else return null}function EB(e,t){return L(e,t)}var $B=32;function Uk(e,t){let r,n,a=t;r=a.xs,n=a.ys,w.assert(r!=null&&n!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let s=Lw("input",e.inputNames,r),i=Lw("output",e.outputNames,n),o=s[0].shape[0];w.assert(s.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),w.assert(i.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let u=0;u<s.length;u++)w.assert(s[u].shape[0]===o,()=>`Batch size mismatch: input ${e.inputNames[u]} has ${s[u].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);for(let u=0;u<i.length;u++)w.assert(i[u].shape[0]===o,()=>`Batch size mismatch: output ${e.outputNames[u]} has ${i[u].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);return{xs:s,ys:i}}function Lw(e,t,r){if(r instanceof Ue)return[r];if(Array.isArray(r))return w.assert(r.length===t.length,()=>`Received an array of ${r.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),r;{let n=[];for(let a of t){if(r[a]==null)throw new V(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);n.push(r[a])}return n}}function AB(e){if(e.length===3)throw new Le("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function FB(e,t,r){let n=r.batchesPerEpoch!=null;if(w.assert(e.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),w.assert(r!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),w.assert(r.epochs!=null&&r.epochs>0&&Number.isInteger(r.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${r.epochs}`),w.assert(!n||r.batchesPerEpoch>0&&Number.isInteger(r.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${r.batchesPerEpoch}`),w.assert(r.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let a=r.validationData!=null,s,i;if(a)if(Pw(r.validationData))w.assert(r.validationBatches==null||r.validationBatches>0&&Number.isInteger(r.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${r.validationBatches}`);else{let g=AB(r.validationData);s=g.xs,i=g.ys}let o=e.makeTrainFunction(),u=e.getDedupedMetricsNames(),p;a?p=u.slice().concat(u.map(g=>"val_"+g)):p=u.slice();let l=Rk(r.callbacks,r.yieldEvery),d=r.verbose==null?1:r.verbose,{callbackList:h,history:c}=Dk(l,d,r.epochs,null,null,RB(t,r),null,a,p);h.setModel(e),e.history=c,await h.onTrainBegin(),e.stopTraining_=!1;let f=r.initialEpoch==null?0:r.initialEpoch,m=await t.iterator();for(;f<r.epochs;){let g={};await h.onEpochBegin(f);let y=0,b=0;for(n||(m=await t.iterator());!n||y<r.batchesPerEpoch;){let x=await m.next();if(n&&x.done){console.warn(`You provided \`batchesPerEpoch\` as ${r.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${r.batchesPerEpoch*r.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(x.value!=null){let{xs:v,ys:I}=Uk(e,x.value),T={};T.batch=b,T.size=v[0].shape[0],await h.onBatchBegin(b,T);let _=[];if(r.classWeight!=null){let R=Wk(r.classWeight,e.outputNames);for(let F=0;F<R.length;++F)_.push(await Vk(I[F],null,R[F]))}let E=v.concat(I).concat(_),A=o(E);_e(E);for(let R=0;R<u.length;++R){let F=u[R],S=A[R];T[F]=S,Dt(S)}await h.onBatchEnd(b,T),Ek(T),b++,y++}if(n?y>=r.batchesPerEpoch:x.done){if(a){let v;Pw(r.validationData)?v=ft(await e.evaluateDataset(r.validationData,{batches:r.validationBatches})):v=ft(e.evaluate(s,i,{batchSize:r.validationBatchSize==null?$B:r.validationBatchSize,verbose:0}));for(let I=0;I<e.metricsNames.length;++I)g[`val_${e.metricsNames[I]}`]=v[I]}break}if(e.stopTraining_)break}if(await h.onEpochEnd(f,g),f++,e.stopTraining_)break}return await h.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function RB(e,t){let r=null;return t.batchesPerEpoch!=null?r=t.batchesPerEpoch:Number.isFinite(e.size)&&(r=e.size),r}function Pw(e){return typeof e.iterator=="function"}function DB(e){return typeof e.next=="function"}async function MB(e,t,r){r=r||{};let n=r.batches!=null,a=e.testFunction,s=[];if(r.verbose>0)throw new Le("Verbose mode is not implemented yet.");w.assert(!n||r.batches>0&&Number.isInteger(r.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(r.batches)}`);let i=DB(t)?t:await t.iterator(),o=0,u=0;for(;!n||u<r.batches;){let p=await i.next();if(s=W(()=>{if(p.value){let{xs:l,ys:d}=Uk(e,p.value),h=l.concat(d),c=W(()=>a(h));if(_e(h),u===0)for(let m=0;m<c.length;++m)s.push(ve(0));let f=h[0].shape[0];for(let m=0;m<c.length;++m){let g=c[m],y=s[m];s[m]=W(()=>J(s[m],L(f,g))),u>0&&_e(y)}_e(c),o+=f,++u}return s}),p.done){n&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${r.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let p=0;p<s.length;++p){let l=s[p];s[p]=me(s[p],o),_e(l)}return Sr(s)}function _f(e){w.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function _u(e,t,r){return e==null?[null]:Array.isArray(e)?e.map(n=>ws(n,t,r-t)):ws(e,t,r-t)}function lm(e,t){return W(()=>e==null?null:Array.isArray(e)?e.map(r=>lm(r,t)):vk(e,t.dtype==="int32"?t:se(t,"int32")))}function Ef(e,t){let r=[],n=0,a=null;for(;n<e;)a=n+t,a>=e&&(a=e),r.push([n,a]),n=a;return r}function Gk(e){let t=[];e instanceof Ue&&(e=[e]);for(let r=0;r<e.length;++r){let n=e[r];if(n.rank===1)t.push(Yp(n,1));else{if(n.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(n)}}return t}function yn(e,t){if(e==null)return;let r=[];if(t instanceof Ue)r.push(t.id);else if(Array.isArray(t))t.forEach(a=>r.push(a.id));else if(t!=null)for(let a in t){let s=t[a];r.push(s.id)}let n=[];if(e instanceof Ue)r.indexOf(e.id)===-1&&n.push(e);else if(Array.isArray(e))e.forEach(a=>{r.indexOf(a.id)===-1&&n.push(a)});else if(e!=null)for(let a in e){let s=e[a];r.indexOf(s.id)===-1&&n.push(s)}n.forEach(a=>{a.isDisposed||a.dispose()})}function OB(e){return e instanceof Ue}function um(e){return Array.isArray(e)}function Bw(e){return!OB(e)&&!um(e)}function Ww(e,t,r,n=!0,a=""){if(t==null||t.length===0){if(e!=null){let i=!1;if(um(e)&&e.length>0)i=!0;else if(Bw(e)){for(let o in e)if(e.hasOwnProperty(o)){i=!0;break}}else i=!0;if(i)throw new V(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(e==null)return t.map(i=>null);let s;if(Bw(e)){e=e,s=[];for(let i of t){if(e[i]==null)throw new V(`No data provided for "${i}". Need data for each key in: ${t}`);s.push(e[i])}}else if(um(e)){if(e=e,e.length!==t.length)throw new V(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(e=e,t.length>1)throw new V(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=Gk(s),r!=null)for(let i=0;i<t.length;++i){if(r[i]==null)continue;let o=s[i];if(o.shape.length!==r[i].length)throw new V(`Error when checking ${a}: expected ${t[i]} to have ${r[i].length} dimension(s). but got array with shape ${o.shape}`);for(let u=0;u<r[i].length;++u){if(u===0&&!n)continue;let p=o.shape[u],l=r[i][u];if(l!=null&&l>=0&&p!==l)throw new V(`${a} expected a batch of elements where each example has shape [${r[i].slice(1,r[i].length)}] (i.e.,tensor shape [*,${r[i].slice(1,r[i].length)}]) but the ${a} received an input with ${o.shape[0]} examples, each with shape [${o.shape.slice(1,o.shape.length)}] (tensor shape [${o.shape}])`)}}return s}function zB(e,t,r){let n=Ea(e.map(s=>s.shape[0]));n.sort();let a=Ea(t.map(s=>s.shape[0]));if(a.sort(),n.length>1)throw new V(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(s=>s.shape))}`);if(a.length>1)throw new V(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(s=>s.shape))}`);if(n.length>0&&a.length>0&&!w.arraysEqual(n,a))throw new V(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${a[0]} target sample(s).`)}function LB(e,t,r){let n=[lo,qc,rp];for(let a=0;a<e.length;++a){let s=e[a],i=t[a],o=r[a];if(i!=null){if(i===rp&&s.shape[s.shape.length-1]===1)throw new V(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(n.indexOf(i)!==-1){let u=s.shape.slice(1),p=o.slice(1);for(let l=0;l<u.length;++l){let d=u[l],h=p[l];if(h!=null&&d!==h)throw new V(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function Vw(e,t,r,n=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new V(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new V(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(r!=null)for(let i=0;i<t.length;++i){if(r[i]==null)continue;let o=s[i];if(o.shape.length!==r[i].length)throw new V(`Error when checking ${a}: expected ${t[i]} to have ${r[i].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let u=0;u<r[i].length;++u){if(u===0&&!n)continue;let p=o.shape[u],l=r[i][u];if(l!=null&&l!==p)throw new V(`Error when checking ${a}: expected ${t[i]} to have shape ${JSON.stringify(r[i])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}function PB(e,t){if(e==null||Array.isArray(e)&&e.length===0)return t.map(n=>[]);let r;if(typeof e=="string"||typeof e=="function")r=[e];else if(Array.isArray(e)||typeof e=="object")r=e;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(r))return t.map(n=>r);{let n=[];for(let a of t){let s=r.hasOwnProperty(a)?r[a]:[];Array.isArray(s)||(s=[s]),n.push(s)}return n}}var BB="layers-model",sa=class extends Fn{constructor(e){super(e),this.isTraining=!1}summary(e,t,r=console.log){if(!this.built)throw new V("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");IB(this,e,t,r)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=kB(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof ca))throw new V("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let s in e.loss)if(this.outputNames.indexOf(s)===-1)throw new V(`Unknown entry in loss dictionary: "${s}". Only expected the following keys: ${this.outputNames}`);for(let s of this.outputNames)e.loss[s]==null&&console.warn(`Output "${s}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${s} during training`),t.push(Cf(e.loss[s]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new V(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(s=>Cf(s))}else{let s=Cf(e.loss);this.outputs.forEach(i=>{t.push(s)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){let i=this.internalOutputShapes[s],o=this.outputNames[s];this.feedOutputNames.push(o),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[s])}let r=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],xs("loss",()=>{for(let s=0;s<this.outputs.length;++s){if(r.indexOf(s)!==-1)continue;let i=this.lossFunctions[s];this.outputs.length>1&&(this.metricsTensors.push([i,s]),this.metricsNames.push(this.outputNames[s]+"_loss"))}});let n=PB(e.metrics,this.outputNames),a=(s,i,o)=>{this.outputNames.length>1&&(i=this.outputNames[s]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([o,s])};xs("metric",()=>{for(let s=0;s<this.outputs.length;++s){if(r.indexOf(s)!==-1)continue;let i=n[s];(o=>{let u="",p,l,d;for(let h of o){if(typeof h=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(h)!==-1){let f=this.internalOutputShapes[s];f[f.length-1]===1||this.lossFunctions[s]===qc?["accuracy","acc"].indexOf(h)!==-1?l=Oy:["crossentropy","ce"].indexOf(h)!==-1&&(l=zk):this.lossFunctions[s]===gh?["accuracy","acc"].indexOf(h)!==-1?l=Lk:["crossentropy","ce"].indexOf(h)!==-1&&(l=Pk):["accuracy","acc"].indexOf(h)!==-1?l=zy:["crossentropy","ce"].indexOf(h)!==-1&&(l=Ly);let m;["accuracy","acc"].indexOf(h)!==-1?m="acc":["crossentropy","ce"].indexOf(h)!==-1&&(m="ce"),d=l,p=u+m}else d=vB(h),p=u+Md(h);let c;xs(p,()=>{c=d}),a(s,p,c)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,r={}){let n=r.batchSize==null?32:r.batchSize;_f(n);let a=!0,s=this.standardizeUserDataXY(e,t,a,n);try{let i=s[0].concat(s[1]);this.makeTestFunction();let o=this.testFunction,u=this.testLoop(o,i,n,r.verbose,r.steps);return Sr(u)}finally{yn(s[0],e),yn(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),MB(this,e,t)}checkNumSamples(e,t,r,n="steps"){let a;if(r!=null){if(a=null,t!=null)throw new V(`If ${n} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?a=e[0].shape[0]:a=e.shape[0];else throw new V(`Either the input data should have a defined shape, or ${n} shoud be specified.`);return a}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new V("`outputs` is an empty Array, which is not allowed.");let r=Array.isArray(t),n=r?t:[t],a=this.retrieveSymbolicTensors(n),s=new gs;if(e instanceof Ue&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new V(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let o=0;o<this.inputs.length;++o)s.add(this.inputs[o],e[o])}else for(let o of this.inputs){let u=e[o.name];if(u==null)throw new V(`No value is provided for the model's input ${o.name}`);s.add(o,u)}let i=Du(a,s);return r?i:i[0]}retrieveSymbolicTensors(e){let t=Ms(null,e.length),r=e.length;for(let n of this.layers){let a=Array.isArray(n.output)?n.output:[n.output],s=a.map(i=>i.name);for(let i=0;i<e.length;++i){let o=s.indexOf(e[i]);if(o!==-1&&(t[i]=a[o],r--),r===0)break}if(r===0)break}if(r>0){let n=[];throw t.forEach((a,s)=>{a==null&&n.push(e[s])}),new V(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,r=!1){return W(()=>{let n=this.checkNumSamples(e);if(r)throw new Le("Verbose predictLoop() is not implemented yet.");let a=Ef(n,t),s=this.outputs.map(i=>[]);for(let i=0;i<a.length;++i)W(()=>{let o=a[i][0],u=a[i][1],p=_u(e,o,u),l=[];if(Array.isArray(p))for(let h=0;h<p.length;++h)l.push({key:this.inputs[h],value:p[h]});else l.push({key:this.inputs[0],value:p});let d=new gs(l);return Du(this.outputs,d)}).forEach((o,u)=>s[u].push(o));return Sr(s.map(i=>at(i,0)))})}predict(e,t={}){let r=Gk(e);Vw(r,this.inputNames,this.feedInputShapes,!1);try{let n=t.batchSize==null?32:t.batchSize;return _f(n),this.predictLoop(r,n)}finally{yn(r,e)}}predictOnBatch(e){Vw(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,r=!0,n){if(this.optimizer_==null)throw new wn("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let a=[];for(let s=0;s<this.feedOutputShapes.length;++s){let i=this.feedOutputShapes[s];this.feedLossFns[s]===gh?a.push(i.slice(0,i.length-1).concat([1])):a.push(i)}if(e=Ww(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Ww(t,this.feedOutputNames,a,!1,"target"),zB(e,t),LB(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&n!=null&&n>0&&e[0].shape[0]%n!==0)throw new V(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${n}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,r,n,a=!0,s){let[i,o]=this.standardizeUserDataXY(e,t,a,s);if(r!=null)throw new Error("sample weight is not supported yet.");let u=null;if(n!=null){let p=Wk(n,this.outputNames);u=[];for(let l=0;l<p.length;++l)u.push(await Vk(o[l],null,p[l]))}return[i,o,u]}testLoop(e,t,r,n=0,a){return W(()=>{let s=this.checkNumSamples(t,r,a,"steps"),i=[];if(n>0)throw new Le("Verbose mode is not implemented yet.");if(a!=null)throw new Le("steps mode in testLoop() is not implemented yet");{let o=Ef(s,r),u=Qe(Nn(0,s));for(let p=0;p<o.length;++p){let l=o[p][0],d=o[p][1],h=ws(u,l,d-l),c=lm(t,h),f=e(c);if(p===0)for(let m=0;m<f.length;++m)i.push(ve(0));for(let m=0;m<f.length;++m){let g=f[m];i[m]=J(i[m],L(d-l,g))}}for(let p=0;p<i.length;++p)i[p]=me(i[p],s)}return i})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let r=0;r<e.length;++r){let n=e[r],a=n;if(Cw(e,n)>1){let s=Cw(e.slice(0,r),n);a+=`_${s}`}t.push(a)}return t}makeTrainFunction(){return e=>{let t=[],r=e.slice(0,this.inputs.length),n=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),s=[],i=()=>{let p=[];for(let c=0;c<this.inputs.length;++c)p.push({key:this.inputs[c],value:r[c]});let l=new gs(p),d=Du(this.outputs,l,{training:!0}),h;for(let c=0;c<this.lossFunctions.length;++c){let f=this.lossFunctions[c],m=f(n[c],d[c]);a[c]!=null&&(m=EB(m,a[c]));let g=xt(m);t.push(g),c===0?h=m:h=J(h,m)}for(let c=0;c<this.metricsTensors.length;++c){let f;if(this.outputs.length>1&&c<this.outputs.length)f=t[c];else{let m=this.metricsTensors[c][0],g=this.metricsTensors[c][1];f=xt(m(n[g],d[g]))}Dt(f),s.push(f)}return h=xt(h),this.calculateLosses().forEach(c=>{h=J(h,c)}),h},o=this.collectedTrainableWeights.map(p=>p.read());return[this.optimizer_.minimize(i,!0,o)].concat(s)}}makeTestFunction(){this.testFunction=e=>W(()=>{let t=[],r,n=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let u=0;u<this.inputs.length;++u)s.push({key:this.inputs[u],value:n[u]});let i=new gs(s),o=Du(this.outputs,i);for(let u=0;u<this.lossFunctions.length;++u){let p=this.lossFunctions[u],l=xt(p(a[u],o[u]));u===0?r=l:r=J(r,l),t.push(r)}for(let u=0;u<this.metricsTensors.length;++u){let p=this.metricsTensors[u][0],l=this.metricsTensors[u][1],d=xt(p(a[l],o[l]));t.push(d)}return t})}async fit(e,t,r={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let n,a,s,i,o,u,p,l,d;try{let h=r.batchSize==null?32:r.batchSize;_f(h);let c=!1,f=await this.standardizeUserData(e,t,r.sampleWeight,r.classWeight,c,h);n=f[0],a=f[1],d=f[2];let m=!1,g;if(r.validationData!=null&&r.validationData.length>0){if(m=!0,r.validationData.length===2)o=r.validationData[0],u=r.validationData[1];else throw r.validationData.length===3?new Le("validationData including sample weights is not supported yet."):new V(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);let _=!0,E=await this.standardizeUserData(o,u,null,null,_,h);p=E[0],l=E[1],g=p.concat(l)}else if(r.validationSplit!=null&&r.validationSplit>0&&r.validationSplit<1){m=!0;let _=Math.floor(n[0].shape[0]*(1-r.validationSplit)),E=n[0].shape[0];p=_u(n,_,E),s=n,n=_u(n,0,_),l=_u(a,_,E),i=a,a=_u(a,0,_),g=p.concat(l)}else r.validationSteps!=null&&(m=!0);let y=n.concat(a).concat(d);this.checkTrainableWeightsConsistency();let b=this.makeTrainFunction(),x=this.getDedupedMetricsNames(),v,I;m?(this.makeTestFunction(),v=this.testFunction,I=x.slice().concat(x.map(_=>"val_"+_))):(v=null,g=[],I=x.slice());let T=Rk(r.callbacks,r.yieldEvery);return await this.fitLoop(b,y,x,h,r.epochs,r.verbose,T,v,g,r.shuffle,I,r.initialEpoch,null,null)}finally{this.isTraining=!1,yn(n,e),yn(a,t),yn(s,e),yn(i,t),yn(p,o),yn(l,u),d!=null&&_e(d)}}async fitLoop(e,t,r,n,a,s,i,o,u,p,l,d,h,c){n==null&&(n=32),a==null&&(a=1),p==null&&(p=!0),d==null&&(d=0);let f=!1;if(o!=null&&u!=null&&(f=!0),c!=null&&(f=!0,h==null))throw new V("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let m=this.checkNumSamples(t,n,h,"steps_per_epoch"),g;m!=null&&(g=Nn(0,m)),s==null&&(s=1);let{callbackList:y,history:b}=Dk(i,s,a,d,m,h,n,f,l);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let x=d;x<a;++x){await y.onEpochBegin(x);let v={};if(h!=null)throw new Le("stepsPerEpoch mode is not implemented yet.");{if(p==="batch")throw new Le("batch shuffling is not implemneted yet");p&&w.shuffle(g);let I=Qe(g),T=Ef(m,n);for(let _=0;_<T.length;++_){let E={};if(await y.onBatchBegin(_,E),W(()=>{let A=T[_][0],R=T[_][1],F=ws(I,A,R-A);E.batch=_,E.size=R-A;let S=lm(t,F),M=e(S);for(let B=0;B<r.length;++B){let U=r[B],G=M[B];E[U]=G,Dt(G)}if(_===T.length-1&&f){let B=this.testLoop(o,u,n);for(let U=0;U<r.length;++U){let G=r[U],K=B[U];Dt(K),v["val_"+G]=K}}}),await y.onBatchEnd(_,E),Ek(E),this.stopTraining_)break}I.dispose()}if(await y.onEpochEnd(x,v),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return FB(this,e,t)}async trainOnBatch(e,t){let r=await this.standardizeUserData(e,t),n=r[0],a=r[1],s=this.makeTrainFunction()(n.concat(a)),i=[];for(let o of s){let u=await o.data();i.push(u[0])}return _e(s),yn(r[0],e),yn(r[1],t),Sr(i)}getNamedWeights(e){let t=[],r=e!=null&&e.trainableOnly,n=r?this.trainableWeights:this.weights,a=this.getWeights(r);for(let s=0;s<n.length;++s)r&&!n[s].trainable||t.push({name:n[s].originalName,tensor:a[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=Zf().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Zf().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=ea(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>ea(t))}else{let t=Object.keys(this.loss);e={};let r=this.loss;for(let n of t)if(typeof r[n]=="string")e[n]=ea(r[n]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[ea(Md(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>ea(Md(e)));{let e={};for(let t in this.metrics)e[t]=ea(Md(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=np(e.optimizer_config),r=In(t),n;if(typeof e.loss=="string")n=cs(e.loss);else if(Array.isArray(e.loss))n=e.loss.map(s=>cs(s));else if(e.loss!=null){n={};for(let s in e.loss)n[s]=cs(e.loss[s])}let a;if(Array.isArray(e.metrics))a=e.metrics.map(s=>cs(s));else if(e.metrics!=null){a={};for(let s in e.metrics)a[s]=cs(e.metrics[s])}this.compile({loss:n,metrics:a,optimizer:r})}async save(e,t){if(typeof e=="string"){let i=rr.getSaveHandlers(e);if(i.length===0)throw new V(`Cannot find any save handlers for URL '${e}'`);if(i.length>1)throw new V(`Found more than one (${i.length}) save handlers for URL '${e}'`);e=i[0]}if(e.save==null)throw new V("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let r=await rr.encodeWeights(this.getNamedWeights(t)),n=!1,a=null,s={modelTopology:this.toJSON(a,n),format:BB,generatedBy:`TensorFlow.js tfjs-layers v${Py}`,convertedBy:null};if(t!=null&&t.includeOptimizer&&this.optimizer!=null){s.trainingConfig=this.getTrainingConfig();let i="optimizer",{data:o,specs:u}=await rr.encodeWeights(await this.optimizer.getWeights(),i);r.specs.push(...u),r.data=rr.concatenateArrayBuffers([r.data,o])}return this.userDefinedMetadata!=null&&(zw(this.userDefinedMetadata,this.name,!0),s.userDefinedMetadata=this.userDefinedMetadata),s.weightData=r.data,s.weightSpecs=r.specs,e.save(s)}setUserDefinedMetadata(e){zw(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};sa.className="Model";re.registerClass(sa);var Hk=class extends sa{};Hk.className="Functional";re.registerClass(Hk);async function WB(e,t){"modelTopology"in e||(e={modelTopology:e}),e=e;let r=e.modelTopology;r.model_config!=null&&(r=r.model_config);let n=np(r),a=In(n,t);if(e.weightsManifest!=null){let s=await rr.loadWeights(e.weightsManifest,e.pathPrefix,a.weights.map(o=>o.originalName)),i={};for(let o of a.weights)i[o.originalName]=s[o.originalName];a.loadWeights(i),_e(s)}return a}async function VB(e,t){if(t==null&&(t={}),typeof e=="string"){let r=rr.getLoadHandlers(e,t);if(r.length===0)r.push(rr.browserHTTPRequest(e,t));else if(r.length>1)throw new V(`Found more than one (${r.length}) load handlers for URL '${e}'`);e=r[0]}return UB(e,void 0,t)}async function UB(e,t,r){if(r==null&&(r={}),e.load==null)throw new V("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let n=await e.load(),a=n.modelTopology;a.model_config!=null&&(a=a.model_config);let s=r.strict==null?!0:r.strict,i=n.weightData!=null&&n.weightSpecs!=null&&s,o=In(np(a),t,i),u=n.trainingConfig;if(u!=null&&o.loadTrainingConfig(u),n.userDefinedMetadata!=null&&o.setUserDefinedMetadata(n.userDefinedMetadata),n.weightData!=null){if(n.weightSpecs==null)throw new V("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:p,optimizerWeights:l}=GB(n.weightData,n.weightSpecs);o.loadWeights(p,s),o.optimizer!=null&&l.length>0&&await o.optimizer.setWeights(l),_e(p),_e(l.map(d=>d.tensor))}return o}function GB(e,t){let r=rr.decodeWeights(e,t),n={},a=[];return t.forEach(s=>{s.group==="optimizer"?a.push({name:s.name,tensor:r[s.name]}):n[s.name]=r[s.name]}),{modelWeights:n,optimizerWeights:a}}var Uo=class extends sa{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:Oc("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(t=>t<0))throw new V(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof Uo||e instanceof sa,r;if(t){if(r=e,r.outputs.length!==1)throw new V("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(r.inputs.length!==1)throw new V("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new V("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let n=Nk({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(n)}if(t)this.outputs=r.outputs,this.inputs=r.inputs;else{if(e.inboundNodes.length!==1)throw new V(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new V("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Sk(this.outputs[0])}this.inboundNodes=[],new Hc({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Ms(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(n=>n.shape),outputShapes:this.outputs[0].shape})}else{let n=e.apply(this.outputs[0]);if(Array.isArray(n))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[n],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(Ze(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new sa({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,r=console.log){this.built||this.build(),super.summary(e,t,r)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,r={}){if(!this.built)throw new wn("The model needs to be compiled before being used.");return this.model.evaluate(e,t,r)}async evaluateDataset(e,t){if(!this.built)throw new wn("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,r={}){if(!this.built)throw new wn("The model needs to be compiled before being used.");return this.model.fit(e,t,r)}async fitDataset(e,t){if(!this.built)throw new wn("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,r={},n=!1){let a,s={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new V("Legacy serialization format not supported yet.");a=t}else w.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),a=t.layers,delete t.layers,s=t;let i=new e(s);if(!(i instanceof Uo))throw new Le(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let o of a){let u=In(o,void 0,n);n&&u.setFastWeightInitDuringBuild(!0),i.add(u)}return i}set stopTraining(e){if(this.model==null)throw new V("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new V("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let r={};r.className=t.getClassName(),r.config=t.getConfig(),e.push(r)}return{name:this.name,layers:e}}};Uo.className="Sequential";re.registerClass(Uo);function HB(e){return new sa(e)}function jB(e){return new Uo(e)}function jk(e){return Nk(e)}function qB(e,t){un.registerCallbackConstructor(e,t)}var Ar=class extends re.Serializable{getConfig(){return{}}},qk=class extends Ar{apply(e,t=1){return yP(e,t)}};qk.className="elu";re.registerClass(qk);var Kk=class extends Ar{apply(e){return bc(e)}};Kk.className="selu";re.registerClass(Kk);var Xk=class extends Ar{apply(e){return et(e)}};Xk.className="relu";re.registerClass(Xk);var Zk=class extends Ar{apply(e){return W(()=>Da(6,et(e)))}};Zk.className="relu6";re.registerClass(Zk);var Jk=class extends Ar{apply(e){return e}};Jk.className="linear";re.registerClass(Jk);var Yk=class extends Ar{apply(e){return hn(e)}};Yk.className="sigmoid";re.registerClass(Yk);var Qk=class extends Ar{apply(e){return xP(e)}};Qk.className="hardSigmoid";re.registerClass(Qk);var eI=class extends Ar{apply(e){return so(e)}};eI.className="softplus";re.registerClass(eI);var tI=class extends Ar{apply(e){return bP(e)}};tI.className="softsign";re.registerClass(tI);var rI=class extends Ar{apply(e){return As(e)}};rI.className="tanh";re.registerClass(rI);var By=class extends Ar{apply(e,t=-1){return Za(e,t)}};By.className="softmax";re.registerClass(By);var nI=class extends Ar{apply(e,t=-1){return pc(e,t)}};nI.className="logSoftmax";re.registerClass(nI);var aI=class extends Ar{apply(e,t=1){return W(()=>L(hn(L(e,t)),e))}};aI.className="swish";re.registerClass(aI);var sI=class extends Ar{apply(e){return W(()=>L(e,As(so(e))))}};sI.className="mish";re.registerClass(sI);function za(e){return e.getClassName()}function $f(e,t={}){return Jp(e,re.SerializationMap.getMap().classNameMap,t,"activation")}function La(e){if(e==null){let t={};return t.className="linear",t.config={},$f(t)}if(typeof e=="string"){let t={};return t.className=e,t.config={},$f(t)}else return e instanceof Ar?e:$f(e)}function Wy(e){if(e!=null&&typeof e!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}var iI=class extends re.Serializable{},rd=class extends iI{constructor(e){super(),Wy(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return W(()=>{let t=wt([1]);return this.hasL1&&(t=J(t,ge(L(this.l1,_t(e))))),this.hasL2&&(t=J(t,ge(L(this.l2,Qp(e))))),P(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};rd.className="L1L2";re.registerClass(rd);function KB(e){return Wy(e),new rd({l1:e!=null?e.l1:null,l2:0})}function XB(e){return Wy(e),new rd({l2:e!=null?e.l2:null,l1:0})}var Uw={l1l2:"L1L2"};function ot(e){return xy(e)}function Gw(e,t={}){return Jp(e,re.SerializationMap.getMap().classNameMap,t,"regularizer")}function yt(e){if(e==null)return null;if(typeof e=="string"){let t={className:e in Uw?Uw[e]:e,config:{}};return Gw(t)}else return e instanceof iI?e:Gw(e)}var Vy=class extends We{constructor(e){super(e==null?{}:e),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Ce(e);let r=et(e);return this.maxValue!=null&&(r=ir(r,0,this.maxValue)),r}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};Vy.className="ReLU";re.registerClass(Vy);var Uy=class extends We{constructor(e){super(e==null?{}:e),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let r=Ce(e);return Wp(r,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Uy.className="LeakyReLU";re.registerClass(Uy);var Gy=class extends We{constructor(e){if(super(e==null?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=gt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=yt(e.alphaRegularizer),this.alphaConstraint=Pt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new V(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=Ze(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let n of this.sharedAxes)t[n-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let r={};if(this.sharedAxes!=null)for(let n=1;n<e.length;++n)r[n]=e[n];this.inputSpec=[new Et({ndim:e.length,axes:r})],this.built=!0}call(e,t){return e=Ce(e),jp(e,this.alpha.read())}getConfig(){let e={alphaInitializer:vt(this.alphaInitializer),alphaRegularizer:ot(this.alphaRegularizer),alphaConstraint:Lt(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};Gy.className="PReLU";re.registerClass(Gy);var Hy=class extends We{constructor(e){if(super(e==null?{}:e),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Le(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let r=Ce(e);return au(r)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Hy.className="ELU";re.registerClass(Hy);var jy=class extends We{constructor(e){super(e==null?{}:e),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let r=Ce(e);return L(r,se(br(r,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};jy.className="ThresholdedReLU";re.registerClass(jy);var qy=class extends We{constructor(e){super(e==null?{}:e),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new By().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let r=Ce(e);return this.softmax(r,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};qy.className="Softmax";re.registerClass(qy);function _o(e,t,r){if(typeof e=="number")return Ms(e,t);if(e.length!==t)throw new V(`The ${r} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let n=0;n<t;++n){let a=e[n];if(!cP(a))throw new V(`The ${r} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e}function Sn(e,t,r,n,a=1){if(e==null)return e;let s=t+(t-1)*(a-1),i;return r==="same"?i=e:i=e-s+1,Math.floor((i+n-1)/n)}function On(e,t,r,n){if(e==null)return null;if(n==="valid")e=e*t+Oa([r-t,0]);else if(n==="same")e=e*t;else throw new V(`Unsupport padding mode: ${n}.`);return e}function Ky(e,t){return W(()=>(Tt(t),t==="channelsFirst"?Oe(e,[0,2,3,1]):e))}function oI(e,t){return W(()=>(Tt(t),t==="channelsFirst"?Oe(e,[0,2,3,4,1]):e))}function ZB(e,t,r,n=1,a="valid",s,i=1){return W(()=>{if(s==null&&(s=Tn()),Tt(s),e.shape.length!==3)throw new V(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(t.shape.length!==3)throw new V(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(r!=null&&r.shape.length!==1)throw new V(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(s==="channelsFirst"&&(e=Oe(e,[0,2,1])),a==="causal")throw new Le("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=ac(e,t,n,a==="same"?"same":"valid","NWC",i);return r!=null&&(o=En(o,r)),o})}function Hw(e,t,r,n=[1,1],a="valid",s,i,o=null){return W(()=>{if(s==null&&(s=Tn()),Tt(s),e.rank!==3&&e.rank!==4)throw new V(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(t.rank!==3&&t.rank!==4)throw new V(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=Ky(e,s);if(a==="causal")throw new Le("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=Po.conv2d({x:u,filter:t,strides:n,pad:a==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:r,activation:o}),s==="channelsFirst"&&(u=Oe(u,[0,3,1,2])),u})}function JB(e,t,r,n=[1,1,1],a="valid",s,i){return W(()=>{if(s==null&&(s=Tn()),Tt(s),e.rank!==4&&e.rank!==5)throw new V(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(t.rank!==4&&t.rank!==5)throw new V(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=oI(e,s);if(a==="causal")throw new Le("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=kg(o,t,n,a==="same"?"same":"valid","NDHWC",i),r!=null&&(o=En(o,r)),s==="channelsFirst"&&(o=Oe(o,[0,4,1,2,3])),o})}var Xy=class extends We{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Xy.verifyArgs(t),this.rank=e,Ut(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Le(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=_o(t.kernelSize,e,"kernelSize"),this.strides=_o(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,nn(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Tt(this.dataFormat),this.activation=La(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=gt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Pt(t.biasConstraint),this.biasRegularizer=yt(t.biasRegularizer),this.activityRegularizer=yt(t.activityRegularizer),this.dilationRate=_o(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new V(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new V(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new V(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Mn("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!wy(e.kernelSize,"number",1,3))throw new V(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:za(this.activation),useBias:this.useBias,biasInitializer:vt(this.biasInitializer),biasRegularizer:ot(this.biasRegularizer),activityRegularizer:ot(this.activityRegularizer),biasConstraint:Lt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},nd=class extends Xy{constructor(e,t){super(e,t),this.kernel=null,nd.verifyArgs(t),this.filters=t.filters,Ut(this.filters,"filters"),this.kernelInitializer=gt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Pt(t.kernelConstraint),this.kernelRegularizer=yt(t.kernelRegularizer)}build(e){e=Ze(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new V(`The channel dimension of the input should be defined. Found ${e[t]}`);let r=e[t],n=this.kernelSize.concat([r,this.filters]);this.kernel=this.addWeight("kernel",n,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:r}}],this.built=!0}call(e,t){return W(()=>{e=Ce(e);let r,n=this.bias==null?null:this.bias.read(),a=mk(this.activation.getClassName());if(a!=null&&this.rank===2)r=Hw(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(this.rank===1)r=ZB(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)r=Hw(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)r=JB(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Le("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(r=this.activation.apply(r))}return r})}computeOutputShape(e){e=Ze(e);let t=[],r=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let a=0;a<r.length;++a){let s=Sn(r[a],this.kernelSize[a],this.padding,this.strides[a],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[a]);t.push(s)}let n=[e[0]];return this.dataFormat==="channelsLast"?(n=n.concat(t),n.push(this.filters)):(n.push(this.filters),n=n.concat(t)),n}getConfig(){let e={filters:this.filters,kernelInitializer:vt(this.kernelInitializer),kernelRegularizer:ot(this.kernelRegularizer),kernelConstraint:Lt(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new V(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},ad=class extends nd{constructor(e){super(2,e),ad.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!wy(e.kernelSize,"number",1,2))throw new V(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};ad.className="Conv2D";re.registerClass(ad);var sd=class extends nd{constructor(e){super(3,e),sd.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new V(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};sd.className="Conv3D";re.registerClass(sd);var Zy=class extends ad{constructor(e){if(super(e),this.inputSpec=[new Et({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new V(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Ze(e),e.length!==4)throw new V("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new V("The channel dimension of the inputs should be defined. Found `None`.");let r=e[t],n=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",n,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Et({ndim:4,axes:{[t]:r}})],this.built=!0}call(e,t){return W(()=>{let r=Ce(e);if(r.shape.length!==4)throw new V(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);let n=r.shape,a=n[0],s,i;this.dataFormat==="channelsFirst"?(s=2,i=3):(s=1,i=2);let o=n[s],u=n[i],p=this.kernelSize[0],l=this.kernelSize[1],d=this.strides[0],h=this.strides[1],c=On(o,d,p,this.padding),f=On(u,h,l,this.padding),m=[a,c,f,this.filters];this.dataFormat!=="channelsLast"&&(r=Oe(r,[0,2,3,1]));let g=sc(r,this.kernel.read(),m,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=Oe(g,[0,3,1,2])),this.bias!=null&&(g=En(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(e){e=Ze(e);let t=e.slice(),r,n,a;this.dataFormat==="channelsFirst"?(r=1,n=2,a=3):(r=3,n=1,a=2);let s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[r]=this.filters,t[n]=On(t[n],o,s,this.padding),t[a]=On(t[a],u,i,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Zy.className="Conv2DTranspose";re.registerClass(Zy);var Jy=class extends sd{constructor(e){if(super(e),this.inputSpec=[new Et({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new V(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Ze(e),e.length!==5)throw new V("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new V("The channel dimension of the inputs should be defined. Found `None`.");let r=e[t],n=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",n,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Et({ndim:5,axes:{[t]:r}})],this.built=!0}call(e,t){return W(()=>{let r=Ce(e);if(r.shape.length!==5)throw new V(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);let n=r.shape,a=n[0],s,i,o;this.dataFormat==="channelsFirst"?(o=2,s=3,i=4):(o=1,s=2,i=3);let u=n[o],p=n[s],l=n[i],d=this.kernelSize[0],h=this.kernelSize[1],c=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],y=On(u,f,d,this.padding),b=On(p,m,h,this.padding),x=On(l,g,c,this.padding),v=[a,y,b,x,this.filters];this.dataFormat!=="channelsLast"&&(r=Oe(r,[0,2,3,4,1]));let I=Ig(r,this.kernel.read(),v,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(I=Oe(I,[0,4,1,2,3])),this.bias!==null&&(I=En(I,this.bias.read(),this.dataFormat)),this.activation!==null&&(I=this.activation.apply(I)),I})}computeOutputShape(e){e=Ze(e);let t=e.slice(),r,n,a,s;this.dataFormat==="channelsFirst"?(r=1,n=2,a=3,s=4):(r=4,n=1,a=2,s=3);let i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],p=this.strides[0],l=this.strides[1],d=this.strides[2];return t[r]=this.filters,t[n]=On(t[n],p,i,this.padding),t[a]=On(t[a],l,o,this.padding),t[s]=On(t[s],d,u,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Jy.className="Conv3DTranspose";re.registerClass(Jy);var lI=class extends nd{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new V("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new V("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new V(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=gt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=yt(t.depthwiseRegularizer),this.depthwiseConstraint=Pt(t.depthwiseConstraint),this.pointwiseInitializer=gt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=yt(t.pointwiseRegularizer),this.pointwiseConstraint=Pt(t.pointwiseConstraint)}build(e){if(e=Ze(e),e.length<this.rank+2)throw new V(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new V(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let r=e[t],n=this.kernelSize.concat([r,this.depthMultiplier]),a=[];for(let i=0;i<this.rank;++i)a.push(1);a.push(r*this.depthMultiplier,this.filters);let s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",n,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new Et({ndim:this.rank+2,axes:{[t]:r}})],this.built=!0}call(e,t){return W(()=>{e=Ce(e);let r;if(this.rank===1)throw new Le("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Oe(e,[0,2,3,1])),r=uu(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(r=En(r,this.bias.read(),this.dataFormat)),this.activation!=null&&(r=this.activation.apply(r)),this.dataFormat==="channelsFirst"&&(r=Oe(r,[0,3,1,2])),r})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=vt(this.depthwiseInitializer),e.pointwiseInitializer=vt(this.pointwiseInitializer),e.depthwiseRegularizer=ot(this.depthwiseRegularizer),e.pointwiseRegularizer=ot(this.pointwiseRegularizer),e.depthwiseConstraint=Lt(this.depthwiseConstraint),e.pointwiseConstraint=Lt(this.pointwiseConstraint),e}};lI.className="SeparableConv";var Yy=class extends lI{constructor(e){super(2,e)}};Yy.className="SeparableConv2D";re.registerClass(Yy);var Kc=class extends nd{constructor(e){super(1,e),Kc.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!wy(e.kernelSize,"number",1,1))throw new V(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};Kc.className="Conv1D";re.registerClass(Kc);var Qy=class extends We{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return W(()=>{if(e=Ce(e),this.dataFormat==="channelsLast"){let r=Dd(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Dd(r,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let r=Dd(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Dd(r,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Qy.className="Cropping2D";re.registerClass(Qy);var eb=class extends We{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Tt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,pP(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],r=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,r]}else{let t=e[1]==null?null:this.size[0]*e[1],r=e[2]==null?null:this.size[1]*e[2];return[e[0],t,r,e[3]]}}call(e,t){return W(()=>{let r=Ce(e),n=r.shape;if(this.dataFormat==="channelsFirst"){r=Oe(r,[0,2,3,1]);let a=this.size[0]*n[2],s=this.size[1]*n[3],i=this.interpolation==="nearest"?xn.resizeNearestNeighbor(r,[a,s]):xn.resizeBilinear(r,[a,s]);return Oe(i,[0,3,1,2])}else{let a=this.size[0]*n[1],s=this.size[1]*n[2];return this.interpolation==="nearest"?xn.resizeNearestNeighbor(r,[a,s]):xn.resizeBilinear(r,[a,s])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}};eb.className="UpSampling2D";re.registerClass(eb);function YB(e,t,r=[1,1],n="valid",a,s){return W(()=>{a==null&&(a=Tn()),Tt(a);let i=Ky(e,a);if(e.rank!==4)throw new V(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(t.rank!==4)throw new V(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=ao(i,t,r,n==="same"?"same":"valid","NHWC",s),a==="channelsFirst"&&(i=Oe(i,[0,3,1,2])),i})}var tb=class extends Xy{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=gt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Pt(e.depthwiseConstraint),this.depthwiseRegularizer=yt(e.depthwiseRegularizer)}build(e){if(e=Ze(e),e.length<4)throw new V(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new V(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let r=e[t],n=[this.kernelSize[0],this.kernelSize[1],r,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",n,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[r*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return W(()=>{e=Ce(e);let r=YB(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(r=En(r,this.bias.read(),this.dataFormat)),this.activation!=null&&(r=this.activation.apply(r)),r})}computeOutputShape(e){e=Ze(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],r=this.dataFormat==="channelsFirst"?e[3]:e[2],n=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=Sn(t,this.kernelSize[0],this.padding,this.strides[0]),s=Sn(r,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],n,a,s]:[e[0],a,s,n]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=vt(this.depthwiseInitializer),e.depthwiseRegularizer=ot(this.depthwiseRegularizer),e.depthwiseConstraint=Lt(this.depthwiseRegularizer),e}};tb.className="DepthwiseConv2D";re.registerClass(tb);function uI(e,t,r,n){if(Array.isArray(e)){if(t!=null||r!=null)throw new V("When inputs is an array, neither initialState or constants should be provided");n!=null&&(r=e.slice(e.length-n,e.length),e=e.slice(0,e.length-n)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(s){return s==null||Array.isArray(s)?s:[s]}return t=a(t),r=a(r),{inputs:e,initialState:t,constants:r}}function pI(e,t,r,n=!1,a,s,i=!1,o=!1){return W(()=>{let u=t.shape.length;if(u<3)throw new V(`Input should be at least 3D, but is ${u}D.`);let p=[1,0].concat(Nn(2,u));t=Oe(t,p),s!=null,i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),a!=null&&(a=se(se(a,"bool"),"float32"),a.rank===u-1&&(a=Qt(a,-1)),a=Oe(a,p)),n&&(t=tn(t,0),a!=null&&(a=tn(a,0)));let l=[],d,h=r,c=t.shape[0],f=Nt(t),m;a!=null&&(m=Nt(a));for(let y=0;y<c;++y){let b=f[y],x=W(()=>e(b,h));if(a==null)d=x[0],h=x[1];else{let v=W(()=>{let I=m[y],T=he(Ur(I),I),_=J(L(x[0],I),L(h[0],T)),E=h.map((A,R)=>J(L(x[1][R],I),L(A,T)));return{output:_,newStates:E}});d=v.output,h=v.newStates}o&&l.push(d)}let g;return o&&(g=Ot(l,1)),[d,g,h]})}var qn=class extends We{constructor(e){super(e);let t;if(e.cell==null)throw new V("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new Jc({cells:e.cell}):t=e.cell,t.stateSize==null)throw new V("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Et({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Nn(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){am(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let r=t[0],n;if(this.returnSequences?n=[e[0],e[1],r]:n=[e[0],r],this.returnState){let a=[];for(let s of t)a.push([e[0],s]);return[n].concat(a)}else return n}computeMask(e,t){return W(()=>{Array.isArray(t)&&(t=t[0]);let r=this.returnSequences?t:null;if(this.returnState){let n=this.states.map(a=>null);return[r].concat(n)}else return r})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let r=0;r<e;++r)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new Le("Constants support is not implemented in RNN yet.");am(e)&&(e=e[0]),e=e;let t=this.stateful?e[0]:null,r=e.slice(2);this.inputSpec[0]=new Et({shape:[t,null,...r]});let n=[e[0]].concat(e.slice(2));this.cell.build(n);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!w.arraysEqual(this.stateSpec.map(s=>s.shape[s.shape.length-1]),a))throw new V(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(s=>new Et({shape:[null,s]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){W(()=>{if(!this.stateful)throw new Qn("Cannot call resetStates() on an RNN Layer that is not stateful.");let r=this.inputSpec[0].shape[0];if(r==null)throw new V("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(n=>wt([r,n])):this.states_=[wt([r,this.cell.stateSize])];else if(e==null)_e(this.states_),this.keptStates!=null&&(_e(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(n=>wt([r,n])):this.states_[0]=wt([r,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new V(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):_e(this.states_);for(let n=0;n<this.states_.length;++n){let a=e[n],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[n]:this.cell.stateSize,i=[r,s];if(!w.arraysEqual(a.shape,i))throw new V(`State ${n} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${a.shape}`);this.states_[n]=a}}this.states_=this.states_.map(n=>Dt(n.clone()))})}apply(e,t){let r=t==null?null:t.initialState,n=t==null?null:t.constants;t==null&&(t={});let a=uI(e,r,n,this.numConstants);e=a.inputs,r=a.initialState,n=a.constants;let s=[],i=[];if(r!=null){t.initialState=r,s=s.concat(r),this.stateSpec=[];for(let o of r)this.stateSpec.push(new Et({shape:o.shape}));i=i.concat(this.stateSpec)}if(n!=null&&(t.constants=n,s=s.concat(n),this.numConstants=n.length),s[0]instanceof vn){let o=[e].concat(s),u=this.inputSpec.concat(i),p=this.inputSpec;this.inputSpec=u;let l=super.apply(o,t);return this.inputSpec=p,l}else return super.apply(e,t)}call(e,t){return W(()=>{let r=t==null?null:t.mask,n=t==null?null:t.training,a=t==null?null:t.initialState;e=Ce(e),a==null&&(this.stateful?a=this.states_:a=this.getInitialState(e));let s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new V(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:n},o=pI((h,c)=>{let f=this.cell.call([h].concat(c),i);return[f[0],f.slice(1)]},e,a,this.goBackwards,r,null,this.unroll,this.returnSequences),u=o[0],p=o[1],l=o[2];this.stateful&&this.resetStates(l,n);let d=this.returnSequences?p:u;return this.returnState?[d].concat(l):d})}getInitialState(e){return W(()=>{let t=wt(e.shape);return t=ge(t,[1,2]),t=Yp(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(r=>r>1?rm(t,[1,r]):t):this.cell.stateSize>1?[rm(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let r=this.cell.getConfig();return this.getClassName()===qn.className&&(t.cell={className:this.cell.getClassName(),config:r}),Object.assign(Object.assign(Object.assign({},r),e),t)}static fromConfig(e,t,r={}){let n=t.cell,a=In(n,r);return new e(Object.assign(t,{cell:a}))}};qn.className="RNN";re.registerClass(qn);var id=class extends We{},Xc=class extends id{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Ut(this.units,"units"),this.activation=La(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=gt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=gt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=gt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=yt(e.kernelRegularizer),this.recurrentRegularizer=yt(e.recurrentRegularizer),this.biasRegularizer=yt(e.biasRegularizer),this.kernelConstraint=Pt(e.kernelConstraint),this.recurrentConstraint=Pt(e.recurrentConstraint),this.biasConstraint=Pt(e.biasConstraint),this.dropout=Wo([1,Oa([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Wo([1,Oa([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ze(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return W(()=>{if(e=e,e.length!==2)throw new V(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let r=e[1];e=e[0];let n=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Pa({ones:()=>Ur(e),rate:this.dropout,training:n,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Pa({ones:()=>Ur(r),rate:this.recurrentDropout,training:n,dropoutFunc:this.dropoutFunc}));let a,s=this.dropoutMask,i=this.recurrentDropoutMask;s!=null?a=Bn(L(e,s),this.kernel.read()):a=Bn(e,this.kernel.read()),this.bias!=null&&(a=En(a,this.bias.read())),i!=null&&(r=L(r,i));let o=J(a,Bn(r,this.recurrentKernel.read()));return this.activation!=null&&(o=this.activation.apply(o)),[o,o]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:za(this.activation),useBias:this.useBias,kernelInitializer:vt(this.kernelInitializer),recurrentInitializer:vt(this.recurrentInitializer),biasInitializer:vt(this.biasInitializer),kernelRegularizer:ot(this.kernelRegularizer),recurrentRegularizer:ot(this.recurrentRegularizer),biasRegularizer:ot(this.biasRegularizer),activityRegularizer:ot(this.activityRegularizer),kernelConstraint:Lt(this.kernelConstraint),recurrentConstraint:Lt(this.recurrentConstraint),biasConstraint:Lt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}};Xc.className="SimpleRNNCell";re.registerClass(Xc);var rb=class extends qn{constructor(e){e.cell=new Xc(e),super(e)}call(e,t){return W(()=>{this.cell.dropoutMask!=null&&(_e(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(_e(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let r=t==null?null:t.mask,n=t==null?null:t.training,a=t==null?null:t.initialState;return super.call(e,{mask:r,training:n,initialState:a})})}static fromConfig(e,t){return new e(t)}};rb.className="SimpleRNN";re.registerClass(rb);var Zc=class extends id{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new V("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Ut(this.units,"units"),this.activation=La(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=La(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=gt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=gt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=gt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=yt(e.kernelRegularizer),this.recurrentRegularizer=yt(e.recurrentRegularizer),this.biasRegularizer=yt(e.biasRegularizer),this.kernelConstraint=Pt(e.kernelConstraint),this.recurrentConstraint=Pt(e.recurrentConstraint),this.biasConstraint=Pt(e.biasConstraint),this.dropout=Wo([1,Oa([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Wo([1,Oa([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ze(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return W(()=>{if(e=e,e.length!==2)throw new V(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let r=t.training==null?!1:t.training,n=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Pa({ones:()=>Ur(e),rate:this.dropout,training:r,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Pa({ones:()=>Ur(n),rate:this.recurrentDropout,training:r,count:3,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,s=this.recurrentDropoutMask,i,o,u;0<this.dropout&&this.dropout<1&&(e=L(e,a[0]));let p=Bn(e,this.kernel.read());this.useBias&&(p=En(p,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(n=L(n,s[0]));let l=this.recurrentKernel.read(),[d,h]=Nr(l,[2*this.units,this.units],l.rank-1),c=Bn(n,d),[f,m,g]=Nr(p,3,p.rank-1),[y,b]=Nr(c,2,c.rank-1);i=this.recurrentActivation.apply(J(f,y)),o=this.recurrentActivation.apply(J(m,b));let x=Bn(L(o,n),h);u=this.activation.apply(J(g,x));let v=J(L(i,n),L(J(1,ht(i)),u));return[v,v]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:za(this.activation),recurrentActivation:za(this.recurrentActivation),useBias:this.useBias,kernelInitializer:vt(this.kernelInitializer),recurrentInitializer:vt(this.recurrentInitializer),biasInitializer:vt(this.biasInitializer),kernelRegularizer:ot(this.kernelRegularizer),recurrentRegularizer:ot(this.recurrentRegularizer),biasRegularizer:ot(this.biasRegularizer),activityRegularizer:ot(this.activityRegularizer),kernelConstraint:Lt(this.kernelConstraint),recurrentConstraint:Lt(this.recurrentConstraint),biasConstraint:Lt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}};Zc.className="GRUCell";re.registerClass(Zc);var nb=class extends qn{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Zc(e),super(e)}call(e,t){return W(()=>{this.cell.dropoutMask!=null&&(_e(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(_e(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let r=t==null?null:t.mask,n=t==null?null:t.training,a=t==null?null:t.initialState;return super.call(e,{mask:r,training:n,initialState:a})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};nb.className="GRU";re.registerClass(nb);var od=class extends id{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Ut(this.units,"units"),this.activation=La(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=La(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=gt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=gt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=gt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=yt(e.kernelRegularizer),this.recurrentRegularizer=yt(e.recurrentRegularizer),this.biasRegularizer=yt(e.biasRegularizer),this.kernelConstraint=Pt(e.kernelConstraint),this.recurrentConstraint=Pt(e.recurrentConstraint),this.biasConstraint=Pt(e.biasConstraint),this.dropout=Wo([1,Oa([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Wo([1,Oa([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=Ze(e);let r=e[e.length-1];this.kernel=this.addWeight("kernel",[r,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let n;if(this.useBias){if(this.unitForgetBias){let a=this.biasInitializer,s=this.units;n=new(t=class extends mn{apply(i,o){let u=a.apply([s]),p=new Lc().apply([s]),l=a.apply([s*2]);return Ew(Ew(u,p),l)}},t.className="CustomInit",t)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return W(()=>{let r=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new V(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=e[1],a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Pa({ones:()=>Ur(e),rate:this.dropout,training:r,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Pa({ones:()=>Ur(n),rate:this.recurrentDropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));let s=this.dropoutMask,i=this.recurrentDropoutMask,o,u,p,l;0<this.dropout&&this.dropout<1&&(e=L(e,s[0]));let d=Bn(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(n=L(n,i[0])),d=J(d,Bn(n,this.recurrentKernel.read())),this.useBias&&(d=En(d,this.bias.read()));let[h,c,f,m]=Nr(d,4,d.rank-1);o=this.recurrentActivation.apply(h),u=this.recurrentActivation.apply(c),p=J(L(u,a),L(o,this.activation.apply(f))),l=this.recurrentActivation.apply(m);let g=L(l,this.activation.apply(p));return[g,g,p]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:za(this.activation),recurrentActivation:za(this.recurrentActivation),useBias:this.useBias,kernelInitializer:vt(this.kernelInitializer),recurrentInitializer:vt(this.recurrentInitializer),biasInitializer:vt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:ot(this.kernelRegularizer),recurrentRegularizer:ot(this.recurrentRegularizer),biasRegularizer:ot(this.biasRegularizer),activityRegularizer:ot(this.activityRegularizer),kernelConstraint:Lt(this.kernelConstraint),recurrentConstraint:Lt(this.recurrentConstraint),biasConstraint:Lt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}};od.className="LSTMCell";re.registerClass(od);var ab=class extends qn{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new od(e),super(e)}call(e,t){return W(()=>{this.cell.dropoutMask!=null&&(_e(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(_e(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let r=t==null?null:t.mask,n=t==null?null:t.training,a=t==null?null:t.initialState;return super.call(e,{mask:r,training:n,initialState:a})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};ab.className="LSTM";re.registerClass(ab);var Jc=class extends id{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return W(()=>{e=e;let r=e.slice(1),n=[];for(let i of this.cells.slice().reverse())Array.isArray(i.stateSize)?n.push(r.splice(0,i.stateSize.length)):n.push(r.splice(0,1));n.reverse();let a=[],s;for(let i=0;i<this.cells.length;++i){let o=this.cells[i];r=n[i],i===0?s=[e[0]].concat(r):s=[s[0]].concat(r),s=o.call(s,t),a.push(s.slice(1))}r=[];for(let i of a.slice().reverse())r.push(...i);return[s[0]].concat(r)})}build(e){am(e)&&(e=e[0]),e=e;let t;this.cells.forEach((r,n)=>{xs(`RNNCell_${n}`,()=>{r.build(e),Array.isArray(r.stateSize)?t=r.stateSize[0]:t=r.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=n=>({className:n.getClassName(),config:n.getConfig()}),r={cells:this.cells.map(t)};return Object.assign(Object.assign({},e),r)}static fromConfig(e,t,r={}){let n=[];for(let a of t.cells)n.push(In(a,r));return new e({cells:n})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let r of this.cells)t.push(...r.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return sm(e)}setWeights(e){let t=[];for(let r of this.cells){let n=r.weights.length,a=e.splice(n);for(let s=0;s<r.weights.length;++s)t.push([r.weights[s],a[s]])}Ey(t)}};Jc.className="StackedRNNCells";re.registerClass(Jc);function Pa(e){let{ones:t,rate:r,training:n=!1,count:a=1,dropoutFunc:s}=e,i=()=>s!=null?s(t(),r):kk(t(),r),o=()=>ed(i,t,n);return!a||a<=1?Dt(o().clone()):Array(a).fill(void 0).map(o).map(u=>Dt(u.clone()))}var QB=function(e,t){var r={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(e!=null&&typeof Object.getOwnPropertySymbols=="function")for(var a=0,n=Object.getOwnPropertySymbols(e);a<n.length;a++)t.indexOf(n[a])<0&&Object.prototype.propertyIsEnumerable.call(e,n[a])&&(r[n[a]]=e[n[a]]);return r},dI=class extends qn{constructor(e){if(e.unroll)throw new Le("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Le("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Et({ndim:5})]}call(e,t){return W(()=>{if(this.cell.dropoutMask!=null&&(_e(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(_e(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new V("ConvRNN2D cell does not support constants");let r=t==null?null:t.mask,n=t==null?null:t.training,a=t==null?null:t.initialState;return super.call(e,{mask:r,training:n,initialState:a})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return W(()=>{let{stateSize:t}=this.cell,r=e.shape,n=this.computeSingleOutputShape(r),a=[n[0],...n.slice(2)],s=wt(a);return Array.isArray(t)?Array(t.length).fill(s):[s]})}resetStates(e,t=!1){W(()=>{if(!this.stateful)throw new Qn("Cannot call resetStates() on an RNN Layer that is not stateful.");let r=this.inputSpec[0].shape,n=this.computeSingleOutputShape(r),a=[n[0],...n.slice(2)];if(r[0]==null)throw new V("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>wt(a)):this.states_=[wt(a)];else if(e==null)_e(this.states_),this.keptStates!=null&&(_e(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>wt(a)):this.states_[0]=wt(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new V(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):_e(this.states_);for(let s=0;s<this.states_.length;++s){let i=e[s],o=a;if(!w.arraysEqual(i.shape,o))throw new V(`State ${s} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${i.shape}`);this.states_[s]=i}}this.states_=this.states_.map(s=>Dt(s.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:r,kernelSize:n,padding:a,strides:s,dilationRate:i}=this.cell,o=t==="channelsFirst",u=e[o?3:2],p=e[o?4:3],l=Sn(u,n[0],a,s[0],i[0]),d=Sn(p,n[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[r,l,d]:[l,d,r]]}};dI.className="ConvRNN2D";var Yc=class extends od{constructor(e){let{filters:t,kernelSize:r,strides:n,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,Ut(this.filters,"filters"),this.kernelSize=_o(r,2,"kernelSize"),this.kernelSize.forEach(o=>Ut(o,"kernelSize")),this.strides=_o(n||1,2,"strides"),this.strides.forEach(o=>Ut(o,"strides")),this.padding=a||"valid",nn(this.padding),this.dataFormat=s||"channelsLast",Tt(this.dataFormat),this.dilationRate=_o(i||1,2,"dilationRate"),this.dilationRate.forEach(o=>Ut(o,"dilationRate"))}build(e){var t;e=Ze(e);let r=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[r]==null)throw new V(`The channel dimension of the input should be defined. Found ${e[r]}`);let n=e[r],a=4,s=this.kernelSize.concat([n,this.filters*a]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let i=this.kernelSize.concat([this.filters,this.filters*a]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let o;if(this.unitForgetBias){let u=this.biasInitializer,p=this.filters;o=new(t=class extends mn{apply(l,d){let h=u.apply([p]),c=Pr([p]),f=u.apply([p*2]);return vy([h,c,f])}},t.className="CustomInit",t)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*a],null,o,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return W(()=>{if(e.length!==3)throw new V(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=t.training||!1,n=e[0],a=e[1],s=e[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Pa({ones:()=>Ur(n),rate:this.dropout,training:r,count:i,dropoutFunc:this.dropoutFunc}));let o=this.dropoutMask,u=(X,ee,Z)=>!ee||!ee[Z]?X:L(ee[Z],X),p=u(n,o,0),l=u(n,o,1),d=u(n,o,2),h=u(n,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Pa({ones:()=>Ur(a),rate:this.recurrentDropout,training:r,count:i,dropoutFunc:this.dropoutFunc}));let c=this.recurrentDropoutMask,f=u(a,c,0),m=u(a,c,1),g=u(a,c,2),y=u(a,c,3),b=3,[x,v,I,T]=Nr(this.kernel.read(),i,b),[_,E,A,R]=this.useBias?Nr(this.bias.read(),i):[null,null,null,null];p=this.inputConv(p,x,_,this.padding),l=this.inputConv(l,v,E,this.padding),d=this.inputConv(d,I,A,this.padding),h=this.inputConv(h,T,R,this.padding);let[F,S,M,B]=Nr(this.recurrentKernel.read(),i,b);f=this.recurrentConv(f,F),m=this.recurrentConv(m,S),g=this.recurrentConv(g,M),y=this.recurrentConv(y,B);let U=this.recurrentActivation.apply(J(p,f)),G=this.recurrentActivation.apply(J(l,m)),K=J(L(G,s),L(U,this.activation.apply(J(d,g)))),j=L(this.recurrentActivation.apply(J(h,y)),this.activation.apply(K));return[j,j,K]})}getConfig(){let e=super.getConfig(),{units:t}=e,r=QB(e,["units"]),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},r),n)}inputConv(e,t,r,n){let a=cr(e,t,this.strides,n||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return r?En(a,r,this.dataFormat):a}recurrentConv(e,t){return cr(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};Yc.className="ConvLSTM2DCell";re.registerClass(Yc);var sb=class extends dI{constructor(e){let t=new Yc(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}};sb.className="ConvLSTM2D";re.registerClass(sb);var Qc=class extends We{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,r=[];for(let n=0;n<this.noiseShape.length;++n)r.push(this.noiseShape[n]==null?t[n]:this.noiseShape[n]);return r}call(e,t){return W(()=>{this.invokeCallHook(e,t);let r=Ce(e);if(0<this.rate&&this.rate<1){let n=t.training==null?!1:t.training,a=this.getNoiseShape(r);return ed(()=>kk(r,this.rate,a,this.seed),()=>r,n)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};Qc.className="Dropout";re.registerClass(Qc);var ib=class extends Qc{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};ib.className="SpatialDropout1D";re.registerClass(ib);var ob=class extends We{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Ut(this.units,"units"),this.activation=La(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=gt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=gt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Pt(e.kernelConstraint),this.biasConstraint=Pt(e.biasConstraint),this.kernelRegularizer=yt(e.kernelRegularizer),this.biasRegularizer=yt(e.biasRegularizer),this.activityRegularizer=yt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=Ze(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=Ze(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return W(()=>{this.invokeCallHook(e,t);let r=Ce(e),n=mk(this.activation.getClassName()),a;return n!=null?a=Bn(r,this.kernel.read(),n,this.bias?this.bias.read():null):(a=Bn(r,this.kernel.read()),this.bias!=null&&(a=En(a,this.bias.read())),this.activation!=null&&(a=this.activation.apply(a))),a})}getConfig(){let e={units:this.units,activation:za(this.activation),useBias:this.useBias,kernelInitializer:vt(this.kernelInitializer),biasInitializer:vt(this.biasInitializer),kernelRegularizer:ot(this.kernelRegularizer),biasRegularizer:ot(this.biasRegularizer),activityRegularizer:ot(this.activityRegularizer),kernelConstraint:Lt(this.kernelConstraint),biasConstraint:Lt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};ob.className="Dense";re.registerClass(ob);var lb=class extends We{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Ze(e);for(let t of e.slice(1))if(t==null)throw new V(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],$a(e,1)]}call(e,t){return W(()=>{this.invokeCallHook(e,t);let r=Ce(e);if(this.dataFormat==="channelsFirst"&&r.rank>1){let n=[0];for(let a=2;a<r.rank;++a)n.push(a);n.push(1),r=Oe(r,n)}return gP(r)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};lb.className="Flatten";re.registerClass(lb);var ub=class extends We{constructor(e){super(e),this.supportsMasking=!0,this.activation=La(e.activation)}call(e,t){return W(()=>{this.invokeCallHook(e,t);let r=Ce(e);return this.activation.apply(r)})}getConfig(){let e={activation:za(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};ub.className="Activation";re.registerClass(ub);var pb=class extends We{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return W(()=>(e=Ce(e),fP(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};pb.className="RepeatVector";re.registerClass(pb);var db=class extends We{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let r="Total size of new array must be unchanged.",n=t.slice(),a=1,s=null;for(let o=0;o<n.length;++o){let u=n[o];if(this.isUnknown(u))if(s===null)s=o;else throw new V("Can only specifiy one unknown dimension.");else a*=u}let i=$a(e);if(s!==null){if(a===0||i%a!==0)throw new V(r);n[s]=i/a}else if(i!==a)throw new V(r);return n}computeOutputShape(e){let t=!1;for(let r=0;r<e.length;++r)if(this.isUnknown(e[r])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return W(()=>{this.invokeCallHook(e,t);let r=Ce(e),n=r.shape,a=n.slice(0,1).concat(this.fixUnknownDimension(n.slice(1),this.targetShape));return P(r,a)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};db.className="Reshape";re.registerClass(db);var hb=class extends We{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=Nn(1,e.dims.length+1);if(!w.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Et({ndim:this.dims.length+1})]}computeOutputShape(e){e=Ze(e);let t=e.slice();return this.dims.forEach((r,n)=>{t[n+1]=e[r]}),t}call(e,t){return Oe(Ce(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};hb.className="Permute";re.registerClass(hb);var cb=class extends We{constructor(e){super(e==null?{}:e),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let r=Ce(e);return Yu(Rs(r,this.maskValue),-1)}call(e,t){return W(()=>{this.invokeCallHook(e,t);let r=Ce(e),n=-1,a=!0,s=Yu(Rs(r,this.maskValue),n,a);return L(r,se(s,r.dtype))})}};cb.className="Masking";re.registerClass(cb);var fb=class extends We{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(ft(e.inputLength))}this.inputDim=e.inputDim,Ut(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Ut(this.outputDim,"outputDim"),this.embeddingsInitializer=gt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=yt(e.embeddingsRegularizer),this.activityRegularizer=yt(e.activityRegularizer),this.embeddingsConstraint=Pt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return W(()=>this.maskZero?(e=Ce(e),Rs(e,He(e))):null)}computeOutputShape(e){if(e=Ze(e),this.inputLength==null)return[...e,this.outputDim];let t=ft(this.inputLength);if(t.length!==e.length-1)throw new V(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let r=0;for(let n=0;n<t.length;++n){let a=t[n],s=e[n+1];if(a!=null&&s!=null&&a!==s)throw new V(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);a==null&&(t[r]=s),r++}}return[e[0],...t,this.outputDim]}call(e,t){return W(()=>{this.invokeCallHook(e,t);let r=Ce(e);r.dtype!=="int32"&&(r=la(r,"int32"));let n=vk(this.embeddings.read(),P(r,[r.size]));return P(n,Ze(this.computeOutputShape(r.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:vt(this.embeddingsInitializer),embeddingsRegularizer:ot(this.embeddingsRegularizer),activityRegularizer:ot(this.activityRegularizer),embeddingsConstraint:Lt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};fb.className="Embedding";re.registerClass(fb);var uo=class extends We{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Le}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let r=e.slice(0,e.length-t.length);for(let n=0;n<t.length;++n){let a=e[e.length-t.length+n],s=t[n];if(a==null||s==null||a<0||s<0)r.push(null);else if(a===1)r.push(s);else if(s===1)r.push(a);else{if(a!==s)throw new V("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));r.push(a)}}return r}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Ze(e)]),e=e,e.length<2)throw new V(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let a of e)a!=null&&a[0]!==null&&t.push(a[0]);if(t=Ea(t),t.length>1)throw new V(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let r=e[0]==null?null:e[0].slice(1);for(let a=1;a<e.length;++a){let s=e[a]==null?null:e[a].slice(1);r=this.computeElementwiseOpOutputShape(r,s)}let n=e.map(a=>a.length);e.indexOf(null)===-1&&Ea(n).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return W(()=>{if(e=e,this.reshapeRequired){let r=[],n=e.map(a=>a.rank);if(n.indexOf(null)===-1){let a=Oa(n);for(let s of e){let i=s.rank;for(let o=0;o<a-i;++o)s=Yp(s,1);r.push(s)}return this.mergeFunction(r)}else{let a=!1;for(let o of e){let u=o.rank;if(u==null){let p=o.shape,l=p[0],d=p.slice(1).concat([l]),h=P(o,[l].concat($a(p.slice(1))));h=Oe(h,[1,0]),h=P(h,d),r.push(h),a=!0}else if(u>1){let p=Nn(1,u).concat([0]);r.push(Oe(o,p)),a=!0}else r.push(o)}let s=this.mergeFunction(r),i=s.rank;if(a){if(i==null){let o=s.shape,u=o.length,p=o[u-1],l=[p].concat(o.slice(0,o.length-1));s=P(Oe(P(s,[-1,p]),[1,0]),l)}else if(i>1){let o=[i-1].concat(Nn(0,i-1));s=Oe(s,o)}}return s}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let n=1;n<e.length;++n){let a=e[n]==null?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,a)}let r=[];for(let n of e)n!=null&&n[0]!==null&&r.push(n[0]);return r=Ea(r),r.length===1?t=r.concat(t):t=[null].concat(t),t}computeMask(e,t){return W(()=>{if(t==null)return null;if(!Array.isArray(t))throw new V("`mask` should be an Array");if(!Array.isArray(e))throw new V("`inputs` should be an Array");if(t.length!==e.length)throw new V(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(n=>n==null))return null;t=t.map(n=>n==null?n:Qt(n,0));let r=t[0];for(let n=1;n<t.length-1;++n)r=cn(r,t[n]);return r})}},mb=class extends uo{constructor(e){super(e)}mergeFunction(e){return W(()=>{let t=e[0].clone();for(let r=1;r<e.length;++r)t=J(t,e[r]);return t})}};mb.className="Add";re.registerClass(mb);var gb=class extends uo{constructor(e){super(e)}mergeFunction(e){return W(()=>{let t=e[0].clone();for(let r=1;r<e.length;++r)t=L(t,e[r]);return t})}};gb.className="Multiply";re.registerClass(gb);var yb=class extends uo{constructor(e){super(e)}mergeFunction(e){return W(()=>{let t=e[0].clone();for(let r=1;r<e.length;++r)t=J(t,e[r]);return L(1/e.length,t)})}};yb.className="Average";re.registerClass(yb);var bb=class extends uo{constructor(e){super(e)}mergeFunction(e){return W(()=>{let t=e[0];for(let r=1;r<e.length;++r)t=Hn(t,e[r]);return t})}};bb.className="Maximum";re.registerClass(bb);var xb=class extends uo{constructor(e){super(e)}mergeFunction(e){return W(()=>{let t=e[0];for(let r=1;r<e.length;++r)t=Da(t,e[r]);return t})}};xb.className="Minimum";re.registerClass(xb);var wb=class extends uo{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new V("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let n of e)if(n!=null){t=!1;break}if(t)return;let r=[];for(let n=0;n<e.length;++n){let a=e[n].slice();a.splice(this.axis,1);let s=!1;for(let i of r)if(w.arraysEqual(i,a)){s=!0;break}s||r.push(a)}if(r.length>1)throw new V("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return W(()=>vy(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new V("A `Concatenate` layer should be called on a list of inputs.");let t=e,r=t[0].slice(),n=this.axis<0?r.length+this.axis:this.axis;for(let a of t.slice(1)){if(r[n]==null||a[n]==null){r[n]=null;break}r[n]+=a[n]}return r}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new V("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new V("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new V(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return W(()=>{let r=!0;if(t.forEach(s=>{if(s!=null){r=!1;return}}),r)return null;let n=[];for(let s=0;s<e.length;++s)t[s]==null?n.push(se(Ur(e[s]),"bool")):t[s].rank<e[s].rank?n.push(Qt(t[s],-1)):n.push(t[s]);let a=at(n,this.axis);return nc(a,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};wb.className="Concatenate";re.registerClass(wb);function Eu(e,t){for(;e<0;)e+=t;return e}function eW(e,t,r){if(e.shape.length>3||t.shape.length>3)throw new Le("batchDot is not implemented for tensors of 4D or higher rank yet");if(w.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),w.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof r=="number"&&(r=[r,r]),e.dtype==="complex64"||t.dtype==="complex64")throw new Le("batchDot is not implemented for complex64-type Tensors yet.");let n=e.shape.length,a=t.shape.length;r==null&&(r=[n-1,a-2]);let s=r;return W(()=>{let i;if(n>a){i=n-a;let u=[];for(let p=0;p<i;++p)u.push(1);t=P(t,t.shape.concat(u))}else if(a>n){i=a-n;let u=[];for(let p=0;p<i;++p)u.push(1);e=P(e,e.shape.concat(u))}else i=0;let o;if(e.shape.length===2&&t.shape.length===2)s[0]===s[1]?o=ge(L(e,t),s[0]):o=ge(L(Oe(e,[1,0]),t),s[1]);else{let u=s[0]!==e.shape.length-1,p=s[1]===t.shape.length-1;o=Me(e,t,u,p)}if(i>0){let u;n>a?u=n+a-3:u=n-1;let p=[];for(let l=u;l<u+i;++l)p.push(l);o=Ja(o,p)}return o.shape.length===1&&(o=Qt(o,1)),o})}var vb=class extends uo{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){w.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],r=e[1];if(t.length>3||r.length>3)throw new Le("Dot layer does not support tensors of 4D or higher rank yet.");let n=this.interpretAxes(t,r);if(t[n[0]]!==r[n[1]])throw new V(`Dimension incompatibility: ${t[n[0]]} !== ${r[n[1]]}`)}mergeFunction(e){if(e.length!==2)throw new V(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],r=e[1],n;return Array.isArray(this.axes)?n=this.axes.map((a,s)=>Eu(a,e[s].shape.length)):n=[Eu(this.axes,t.shape.length),Eu(this.axes,r.shape.length)],this.normalize&&(t=mh(t,n[0]),r=mh(r,n[1])),eW(t,r,n)}interpretAxes(e,t){let r;return Array.isArray(this.axes)?r=this.axes:r=[Eu(this.axes,e.length),Eu(this.axes,t.length)],r}computeOutputShape(e){w.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),r=e[1].slice();if(t.length>3||r.length>3)throw new Le("Dot layer does not support tensors of 4D or higher rank yet.");let n=this.interpretAxes(t,r);t.splice(n[0],1),r.splice(n[1],1),r.splice(0,1);let a=t.concat(r);return a.length===1&&a.push(1),a}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};vb.className="Dot";re.registerClass(vb);var kb=class extends We{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return W(()=>{this.invokeCallHook(e,t);let r=Ce(e);return ed(()=>J(zc(r.shape,0,this.stddev),r),()=>r,t.training||!1)})}};kb.className="GaussianNoise";re.registerClass(kb);var Ib=class extends We{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return W(()=>{this.invokeCallHook(e,t);let r=Ce(e);return this.rate>0&&this.rate<1?ed(()=>{let n=Math.sqrt(this.rate/(1-this.rate));return L(r,zc(r.shape,1,n))},()=>r,t.training||!1):r})}};Ib.className="GaussianDropout";re.registerClass(Ib);var Sb=class extends We{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ce(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return W(()=>{if(this.rate<1&&this.rate>0){let r=this._getNoiseShape(e);return ed(()=>{let n=Ce(e),a=1.0507009873554805,s=-1.6732632423543772*a,i=da(lu(r),this.rate);i=la(i,"float32");let o=((1-this.rate)*(1+this.rate*s**2))**-.5,u=-o*s*this.rate,p=J(L(n,i),L(J(i,-1),s));return J(L(p,o),u)},()=>Ce(e),t.training||!1)}return e})}};Sb.className="AlphaDropout";re.registerClass(Sb);function ap(e,t,r,n,a,s=.001){let i;if(e.rank===2)i=hg(e,t,r,n,a,s);else if(e.rank===3)i=cg(e,t,r,n,a,s);else if(e.rank===4)i=fg(e,t,r,n,a,s);else throw new Le(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return i}function tW(e,t,r,n,a=.001){return W(()=>{let s=Gp(e,n),i=s.mean,o=s.variance;return[ap(e,i,o,r,t,a),i,o]})}function rW(e,t,r,n,a=.001){return W(()=>{let s=Gp(e,n),i=s.mean,o=s.variance,u=[];for(let c of Nn(0,e.rank))n.indexOf(c)!==-1?u.push(1):u.push(e.shape[c]);let p=P(i,u),l=P(o,u),d=t==null?null:P(t,u),h=r==null?null:P(r,u);return[ap(e,p,l,h,d,a),i,o]})}function nW(e,t,r,n,a=.001){return w.arraysEqual(n.slice().sort(),Nn(0,e.rank-1))?tW(e,t,r,n,a):rW(e,t,r,n,a)}var Nb=class extends We{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=gt(e.betaInitializer||"zeros"),this.gammaInitializer=gt(e.gammaInitializer||"ones"),this.movingMeanInitializer=gt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=gt(e.movingVarianceInitializer||"ones"),this.betaConstraint=Pt(e.betaConstraint),this.gammaConstraint=Pt(e.gammaConstraint),this.betaRegularizer=yt(e.betaRegularizer),this.gammaRegularizer=yt(e.gammaRegularizer)}build(e){e=Ze(e);let t=this.axis>=0?this.axis:this.axis+e.length,r=e[t];if(r==null)throw new V(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Et({ndim:e.length,axes:{[t]:r}})];let n=[r];this.scale&&(this.gamma=this.addWeight("gamma",n,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",n,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",n,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",n,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return W(()=>{let r=t.training==null?!1:t.training,n=Ce(e),a=n.shape,s=a.length,i=Nn(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);let u=Ms(1,s);u[o]=a[o];let p=i.slice();p.sort();let l=!w.arraysEqual(p,Nn(0,s).slice(0,s-1)),d=()=>{if(l){let g=P(this.movingMean.read(),u),y=P(this.movingVariance.read(),u),b=this.center?P(this.beta.read(),u):null,x=this.scale?P(this.gamma.read(),u):null;return ap(n,g,y,b,x,this.epsilon)}else return ap(n,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!r)return d();let[h,c,f]=nW(n,this.gamma.read(),this.beta.read(),i,this.epsilon),m=(g,y,b)=>{W(()=>{let x=1-b,v=g.read(),I=L(he(v,y),x);g.write(he(v,I))})};return m(this.movingMean,c,this.momentum),m(this.movingVariance,f,this.momentum),h})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:vt(this.betaInitializer),gammaInitializer:vt(this.gammaInitializer),movingMeanInitializer:vt(this.movingMeanInitializer),movingVarianceInitializer:vt(this.movingVarianceInitializer),betaRegularizer:ot(this.betaRegularizer),gammaRegularizer:ot(this.gammaRegularizer),betaConstraint:Lt(this.betaConstraint),gammaConstraint:Lt(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Nb.className="BatchNormalization";re.registerClass(Nb);var Tb=class extends We{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=gt(e.betaInitializer||"zeros"),this.gammaInitializer=gt(e.gammaInitializer||"ones"),this.betaRegularizer=yt(e.betaRegularizer),this.gammaRegularizer=yt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=Ze(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let a=0;a<this.axis.length;++a)this.axis[a]<0&&(this.axis[a]+=t);for(let a of this.axis)if(a<0||a>=t)throw new Error(`Invalid axis: ${a}`);if(this.axis.length!==Ea(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let r=this.axis.map(a=>e[a]),n=!0;this.scale?this.gamma=this.addWeight("gamma",r,"float32",this.gammaInitializer,this.gammaRegularizer,n):this.gamma=null,this.center?this.beta=this.addWeight("beta",r,"float32",this.betaInitializer,this.betaRegularizer,n):this.beta=null,this.built=!0}call(e,t){let r=Ce(e),n=r.shape,a=n.length;return W(()=>{let{mean:s,variance:i}=Gp(r,this.axis,!0),o=Ms(1,a);for(let c of this.axis)o[c]=n[c];let u=c=>c!=null&&c.shape.length!==a?P(c,o):c,p=this.scale?u(this.gamma.read()):null,l=this.center?u(this.beta.read()):null,d=[],h=[];for(let c=0;c<a;++c)this.axis.indexOf(c)!==-1?(d.push(n[c]),h.push(1)):(d.push(1),h.push(n[c]));return s=Lr(s,d),i=Lr(i,d),p!=null&&(p=Lr(p,h)),l!=null&&(l=Lr(l,h)),ap(r,s,i,l,p,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:vt(this.betaInitializer),gammaInitializer:vt(this.gammaInitializer),betaRegularizer:ot(this.betaRegularizer),gammaRegularizer:ot(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};Tb.className="LayerNormalization";re.registerClass(Tb);function aW(e,t,r){return W(()=>{if(e.rank!==4)throw new V(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new V("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(r==null&&(r=Tn()),r!=="channelsLast"&&r!=="channelsFirst")throw new V(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let n;return r==="channelsFirst"?n=[[0,0],[0,0],t[0],t[1]]:n=[[0,0],t[0],t[1],[0,0]],_n(e,n)})}var Cb=class extends We{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?Tn():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new V(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,r;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],r=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new V(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new V(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);r=e.padding[1]}this.padding=[t,r]}this.inputSpec=[new Et({ndim:4})]}computeOutputShape(e){e=Ze(e);let t,r;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?r=e[3]+this.padding[1][0]+this.padding[1][1]:r=null,[e[0],e[1],t,r]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?r=e[2]+this.padding[1][0]+this.padding[1][1]:r=null,[e[0],t,r,e[3]])}call(e,t){return W(()=>aW(Ce(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Cb.className="ZeroPadding2D";re.registerClass(Cb);function ef(e,t,r,n,a,s){return W(()=>{Tt(a),yk(s),nn(n),r==null&&(r=[1,1]),n==null&&(n="valid"),a==null&&(a=Tn()),s==null&&(s="max"),e=Ky(e,a);let i,o=n==="same"?"same":"valid";return s==="max"?i=Wt(e,t,r,o):i=pa(e,t,r,o),a==="channelsFirst"&&(i=Oe(i,[0,3,1,2])),i})}function hI(e,t,r,n,a,s){return W(()=>{Tt(a),yk(s),nn(n),r==null&&(r=[1,1,1]),n==null&&(n="valid"),a==null&&(a=Tn()),s==null&&(s="max"),e=oI(e,a);let i,o=n==="same"?"same":"valid";return s==="max"?i=Pg(e,t,r,o):i=dg(e,t,r,o),a==="channelsFirst"&&(i=Oe(i,[0,4,1,2,3])),i})}var cI=class extends We{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new V(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(Ut(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new V(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);Ut(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,nn(this.padding),this.inputSpec=[new Et({ndim:3})]}computeOutputShape(e){e=Ze(e);let t=Sn(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return W(()=>{this.invokeCallHook(e,t),e=Yp(Ce(e),2);let r=this.poolingFunction(Ce(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Ja(r,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},_b=class extends cI{constructor(e){super(e)}poolingFunction(e,t,r,n,a){return Tt(a),nn(n),ef(e,t,r,n,a,"max")}};_b.className="MaxPooling1D";re.registerClass(_b);var Eb=class extends cI{constructor(e){super(e)}poolingFunction(e,t,r,n,a){return Tt(a),nn(n),ef(e,t,r,n,a,"avg")}};Eb.className="AveragePooling1D";re.registerClass(Eb);var fI=class extends We{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new V(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Ut(this.poolSize,"poolSize"),Ut(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Tt(this.dataFormat),nn(this.padding),this.inputSpec=[new Et({ndim:4})]}computeOutputShape(e){e=Ze(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],r=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Sn(t,this.poolSize[0],this.padding,this.strides[0]),r=Sn(r,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,r]:[e[0],t,r,e[3]]}call(e,t){return W(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ce(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},$b=class extends fI{constructor(e){super(e)}poolingFunction(e,t,r,n,a){return Tt(a),nn(n),ef(e,t,r,n,a,"max")}};$b.className="MaxPooling2D";re.registerClass($b);var Ab=class extends fI{constructor(e){super(e)}poolingFunction(e,t,r,n,a){return Tt(a),nn(n),ef(e,t,r,n,a,"avg")}};Ab.className="AveragePooling2D";re.registerClass(Ab);var mI=class extends We{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new V(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Ut(this.poolSize,"poolSize"),Ut(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Tt(this.dataFormat),nn(this.padding),this.inputSpec=[new Et({ndim:5})]}computeOutputShape(e){e=Ze(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],r=this.dataFormat==="channelsFirst"?e[3]:e[2],n=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Sn(t,this.poolSize[0],this.padding,this.strides[0]),r=Sn(r,this.poolSize[1],this.padding,this.strides[1]),n=Sn(n,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,r,n]:[e[0],t,r,n,e[4]]}call(e,t){return W(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ce(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Fb=class extends mI{constructor(e){super(e)}poolingFunction(e,t,r,n,a){return Tt(a),nn(n),hI(e,t,r,n,a,"max")}};Fb.className="MaxPooling3D";re.registerClass(Fb);var Rb=class extends mI{constructor(e){super(e)}poolingFunction(e,t,r,n,a){return Tt(a),nn(n),hI(e,t,r,n,a,"avg")}};Rb.className="AveragePooling3D";re.registerClass(Rb);var gI=class extends We{constructor(e){super(e),this.inputSpec=[new Et({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Le}},Db=class extends gI{constructor(e){super(e||{})}call(e,t){return W(()=>{let r=Ce(e);return xt(r,1)})}};Db.className="GlobalAveragePooling1D";re.registerClass(Db);var Mb=class extends gI{constructor(e){super(e||{})}call(e,t){return W(()=>{let r=Ce(e);return Qr(r,1)})}};Mb.className="GlobalMaxPooling1D";re.registerClass(Mb);var yI=class extends We{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Tt(this.dataFormat),this.inputSpec=[new Et({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Le}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Ob=class extends yI{call(e,t){return W(()=>{let r=Ce(e);return this.dataFormat==="channelsLast"?xt(r,[1,2]):xt(r,[2,3])})}};Ob.className="GlobalAveragePooling2D";re.registerClass(Ob);var zb=class extends yI{call(e,t){return W(()=>{let r=Ce(e);return this.dataFormat==="channelsLast"?Qr(r,[1,2]):Qr(r,[2,3])})}};zb.className="GlobalMaxPooling2D";re.registerClass(zb);var bI=class extends We{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,r={}){let n=t.layer,a=In(n,r);delete t.layer;let s={layer:a};return Object.assign(s,t),new e(s)}},Lb=class extends bI{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=Ze(e),e.length<3)throw new V(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=Ze(e);let t=[e[0]].concat(e.slice(2)),r=this.layer.computeOutputShape(t),n=e[1];return[r[0],n].concat(r.slice(1))}call(e,t){return W(()=>(e=Ce(e),pI((r,n)=>[Ce(this.layer.call(r,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};Lb.className="TimeDistributed";re.registerClass(Lb);function sW(e){oo(uP,"BidirectionalMergeMode",e)}var iW="concat",Pb=class extends bI{constructor(e){super(e);let t=e.layer.getConfig(),r={};r.className=e.layer.getClassName(),r.config=t,this.forwardLayer=In(r),t.goBackwards=t.goBackwards!==!0;let n={};if(n.className=e.layer.getClassName(),n.config=t,this.backwardLayer=In(n),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?iW:e.mergeMode,sW(this.mergeMode),e.weights)throw new Le("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,r=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,r)),this.backwardLayer.setWeights(e.slice(r))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let r,n,a;return this.returnState&&(a=t.slice(1)),r=t[0],r=r,this.mergeMode==="concat"?(r[r.length-1]*=2,n=[r]):this.mergeMode==null?n=[r,r.slice()]:n=[r],this.returnState?this.mergeMode==null?n.concat(a).concat(a.slice()):[r].concat(a).concat(a.slice()):Sr(n)}apply(e,t){let r=t==null?null:t.initialState,n=t==null?null:t.constants;t==null&&(t={});let a=uI(e,r,n,this.numConstants);if(e=a.inputs,r=a.initialState,n=a.constants,Array.isArray(e)&&(r=e.slice(1),e=e[0]),(r==null||r.length===0)&&n==null)return super.apply(e,t);let s=[],i=[];if(r!=null){let u=r.length;if(u%2>0)throw new V("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=r,s.push(...r);let p=r.map(l=>new Et({shape:l.shape}));this.forwardLayer.stateSpec=p.slice(0,u/2),this.backwardLayer.stateSpec=p.slice(u/2),i.push(...p)}if(n!=null)throw new Le("Support for constants in Bidirectional layers is not implemented yet.");let o=s[0]instanceof vn;for(let u of s)if(u instanceof vn!==o)throw new V("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){let u=[e].concat(s),p=this.inputSpec.concat(i),l=this.inputSpec;this.inputSpec=p;let d=super.apply(u,t);return this.inputSpec=l,d}else return super.apply(e,t)}call(e,t){return W(()=>{let r=t.initialState,n,a;if(r==null)n=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{let o=r.slice(0,r.length/2),u=r.slice(r.length/2);n=this.forwardLayer.call(e,Object.assign(t,{initialState:o})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:u}))}let s;this.returnState&&(Array.isArray(n)&&(s=n.slice(1).concat(a.slice(1))),n=n[0],a=a[0]),this.returnSequences&&(a=tn(a,1));let i;return this.mergeMode==="concat"?i=vy([n,a]):this.mergeMode==="sum"?i=J(n,a):this.mergeMode==="ave"?i=L(.5,J(n,a)):this.mergeMode==="mul"?i=L(n,a):this.mergeMode==null&&(i=[n,a]),this.returnState?this.mergeMode==null?i.concat(s):[i].concat(s):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){xs(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),xs(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let r;if(this.returnSequences?this.mergeMode==null?r=[t,t]:r=t:this.mergeMode==null?r=[null,null]:r=null,this.returnState){let n=this.forwardLayer.states.map(a=>null);return Array.isArray(r)?r.concat(n).concat(n):[r].concat(n).concat(n)}else return r}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let r=In(t.layer);if(delete t.layer,t.numConstants!=null)throw new Le("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let n=t;return n.layer=r,new e(n)}};Pb.className="Bidirectional";re.registerClass(Pb);var Bb=class extends We{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){let e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return W(()=>(e=Ce(e),e.dtype!=="float32"&&(e=la(e,"float32")),J(L(e,this.scale),this.offset)))}};Bb.className="Rescaling";re.registerClass(Bb);var{resizeBilinear:oW,cropAndResize:lW}=xn,Wb=class extends We{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,r,n,a,s,i,o){return W(()=>{let u,p=!1,l=t/s,d=r/i,h=(n+t)/s,c=(a+r)/i,f=[l,d,h,c],m=[];e.rank===3?(p=!0,u=Ot([e])):u=e;for(let x=0;x<u.shape[0];x++)m.push(f);let g=hr(m,[m.length,4]),y=Ds(0,m.length,1,"int32"),b=lW(u,g,y,[n,a],"nearest");return la(p?Ce(Nt(b)):b,o)})}upsize(e,t,r,n){return W(()=>{let a=oW(e,[t,r]);return la(a,n)})}call(e,t){return W(()=>{let r=Ce(e),n=r.dtype,a=r.shape,s=a[a.length-3],i=a[a.length-2],o=0;s!==this.height&&(o=Math.floor((s-this.height)/2));let u=0;return i!==this.width&&(u=Math.floor((i-this.width)/2),u===0&&(u=1)),o>=0&&u>=0?this.centerCrop(r,o,u,this.height,this.width,s,i,n):this.upsize(e,this.height,this.width,n)})}getConfig(){let e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=Ze(e);let t=e.length-3,r=e.length-2;return e[t]=this.height,e[r]=this.width,e}};Wb.className="CenterCrop";re.registerClass(Wb);function uW(e,t,r,n){let a=Ce(e);if(a.dtype!=="int32"&&(a=la(a,"int32")),t==="int")return a;let s=a.shape;if(a.rank===0&&(a=Qt(a,-1)),t==="oneHot"&&a.shape[a.shape.length-1]!==1&&(a=Qt(a,-1)),a.rank>2)throw new V(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${s} which would result in output rank ${a.rank}.`);let i=["multiHot","oneHot"].includes(t),o=a,u;if(typeof n<"u"&&t==="count"?u=ph(o,n,r,i):u=ph(o,[],r,i),t!=="tfIdf")return u;if(n)return L(u,n);throw new V("When outputMode is 'tfIdf', weights must be provided.")}var Vb=class extends We{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){let e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=Ze(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return W(()=>{e=Ce(e),e.dtype!=="int32"&&(e=la(e,"int32"));let r;if(typeof t.countWeights<"u"){if(this.outputMode!=="count")throw new V(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);r=Ce(t.countWeights)}let n=Qr(e),a=Ro(e),s=br(this.numTokens,n).bufferSync().get(0),i=da(a,0).bufferSync().get(0);if(!(s&&i))throw new V(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return uW(e,this.outputMode,this.numTokens,r)})}};Vb.className="CategoryEncoding";re.registerClass(Vb);var pW=["bilinear","nearest"],jw=new Set(pW),Ub=class extends We{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(jw.has(e.interpolation))this.interpolation=e.interpolation;else throw new V(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=Ze(e);let t=e[2];return[this.height,this.width,t]}getConfig(){let e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return W(()=>{let r=[this.height,this.width];if(this.interpolation==="bilinear")return xn.resizeBilinear(e,r,!this.cropToAspectRatio);if(this.interpolation==="nearest")return xn.resizeNearestNeighbor(e,r,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...jw]} are supported`)})}};Ub.className="Resizing";re.registerClass(Ub);function dW(e){return new du(e)}function hW(e){return new Hy(e)}function cW(e){return new Vy(e)}function fW(e){return new Uy(e)}function mW(e){return new Gy(e)}function gW(e){return new qy(e)}function yW(e){return new jy(e)}function bW(e){return new Kc(e)}function xW(e){return new ad(e)}function wW(e){return new Zy(e)}function vW(e){return new sd(e)}function kW(e){return new Jy(e)}function IW(e){return new Yy(e)}function SW(e){return new Qy(e)}function NW(e){return new eb(e)}function TW(e){return new tb(e)}function CW(e){return new ub(e)}function _W(e){return new ob(e)}function EW(e){return new Qc(e)}function $W(e){return new ib(e)}function AW(e){return new lb(e)}function FW(e){return new pb(e)}function RW(e){return new db(e)}function DW(e){return new hb(e)}function MW(e){return new fb(e)}function OW(e){return new mb(e)}function zW(e){return new yb(e)}function LW(e){return new wb(e)}function PW(e){return new bb(e)}function BW(e){return new xb(e)}function WW(e){return new gb(e)}function VW(e){return new vb(e)}function UW(e){return new Nb(e)}function GW(e){return new Tb(e)}function HW(e){return new Cb(e)}function Gb(e){return new Eb(e)}function jW(e){return Gb(e)}function qW(e){return Gb(e)}function Hb(e){return new Ab(e)}function KW(e){return Hb(e)}function XW(e){return Hb(e)}function jb(e){return new Rb(e)}function ZW(e){return jb(e)}function JW(e){return jb(e)}function YW(e){return new Db(e)}function QW(e){return new Ob(e)}function xI(e){return new Mb(e)}function wI(e){return new zb(e)}function vI(e){return new _b(e)}function kI(e){return new $b(e)}function e4(e){return new Fb(e)}function t4(e){return new nb(e)}function r4(e){return new Zc(e)}function n4(e){return new ab(e)}function a4(e){return new od(e)}function s4(e){return new rb(e)}function i4(e){return new Xc(e)}function o4(e){return new sb(e)}function l4(e){return new Yc(e)}function u4(e){return new qn(e)}function p4(e){return new Jc(e)}function d4(e){return new Pb(e)}function h4(e){return new Lb(e)}var c4=xI,f4=wI,m4=vI,g4=kI;function y4(e){return new kb(e)}function b4(e){return new Ib(e)}function x4(e){return new Sb(e)}function w4(e){return new cb(e)}function v4(e){return new Bb(e)}function k4(e){return new Wb(e)}function I4(e){return new Ub(e)}function S4(e){return new Vb(e)}var II={};Ee(II,{MAPE:()=>M4,MSE:()=>L4,binaryAccuracy:()=>N4,binaryCrossentropy:()=>T4,categoricalAccuracy:()=>_4,categoricalCrossentropy:()=>E4,cosineProximity:()=>F4,mape:()=>O4,meanAbsoluteError:()=>R4,meanAbsolutePercentageError:()=>D4,meanSquaredError:()=>z4,mse:()=>P4,precision:()=>$4,recall:()=>A4,sparseCategoricalAccuracy:()=>C4});function N4(e,t){return Oy(e,t)}function T4(e,t){return zk(e,t)}function C4(e,t){return Lk(e,t)}function _4(e,t){return zy(e,t)}function E4(e,t){return Ly(e,t)}function $4(e,t){return Ok(e,t)}function A4(e,t){return cB(e,t)}function F4(e,t){return My(e,t)}function R4(e,t){return jc(e,t)}function D4(e,t){return hu(e,t)}function M4(e,t){return hu(e,t)}function O4(e,t){return hu(e,t)}function z4(e,t){return lo(e,t)}function L4(e,t){return lo(e,t)}function P4(e,t){return lo(e,t)}var SI={};Ee(SI,{modelFromJSON:()=>WB});var NI={};Ee(NI,{l1:()=>W4,l1l2:()=>B4,l2:()=>V4});function B4(e){return new rd(e)}function W4(e){return KB(e)}function V4(e){return XB(e)}var TI=class extends Vo{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof sa))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function Od(e,t){return e<t}function qw(e,t){return e>t}var CI=class extends TI{constructor(e){if(super(),e==null&&(e={}),e.restoreBestWeights)throw new Le("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=Od:this.mode==="max"?this.monitorFunc=qw:this.monitor.indexOf("acc")!==-1?this.monitorFunc=qw:this.monitorFunc=Od,this.monitorFunc===Od&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===Od?1/0:-1/0}async onEpochEnd(e,t){await wa(t);let r=this.getMonitorValue(t);r!=null&&(this.monitorFunc(r-this.minDelta,this.best)?(this.best=r,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function U4(e){return new CI(e)}var G4={earlyStopping:U4},H4=H();H4.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var ln;(function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"})(ln||(ln={}));var Kw;(function(e){(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(Kw||(Kw={}));var qb={};function j4(e,t){let r={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};qb[e]=r}function _I(e){return qb[e]}function q4(e){delete qb[e]}function k(e,t,r,n,a){let s=t.inputParams[e];if(s&&s.inputIndexStart!==void 0){let o=s.inputIndexStart,u=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?o+1:s.inputIndexEnd,p=o<0?t.inputNames.length+o:o;if(s.type==="tensor")return er(t.inputNames[p],r,n,a);if(s.type==="tensors"){let h=t.inputs.slice(o,u);return t.inputNames.slice(o,u).filter((c,f)=>{var m;return((m=h[f])===null||m===void 0?void 0:m.op)!=="NoOp"}).map(c=>er(c,r,n,a))}let l=er(t.inputNames[p],r,n,a),d=l.dataSync();return s.type==="number"?d[0]:w.toNestedArray(l.shape,d)}let i=t.attrParams[e];return i&&i.value}function er(e,t,r,n){let[a,s]=Or(e,r);if(n!=null){let o=n.getHashTableHandleByName(a);if(o!=null)return o}let i=r.currentContextIds.find(o=>!!t[wh(a,o)]);return i!==void 0?t[wh(a,i)][s]:void 0}function Xw(e,t,r){return t[wh(e,r.currentContextId)]}function ta(e,t){let[r,n,a]=Or(e,t);return[wh(r,t&&t.currentContextId),n,a]}function wh(e,t){return t?`${e}-${t}`:e}function Or(e,t){if(e==="")return["",0,void 0];let r=t!=null&&t.parseNodeNameCache!=null;if(r){let s=t.parseNodeNameCache.get(e);if(s!=null)return s}let n=e.split(":"),a;if(n.length===1)a=[e,0,void 0];else{let s=n[0],i=n.length===3?n[1]:void 0,o=Number(n[n.length-1]);a=[s,o,i]}return r&&t.parseNodeNameCache.set(e,a),a}function Xd(e,t,r){let n=k("pad",e,t,r);if(n==="explicit"){n=k("explicitPaddings",e,t,r);let a=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)a[s][0]=n[s*2],a[s][1]=n[s*2+1];return a}return n}function ra(e){return e.kept?e:Ln(e)}var EI={};Ee(EI,{json:()=>K4});var K4=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],$I={};Ee($I,{json:()=>X4});var X4=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],AI={};Ee(AI,{json:()=>Z4});var Z4=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],FI={};Ee(FI,{json:()=>J4});var J4=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],RI={};Ee(RI,{json:()=>Y4});var Y4=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],DI={};Ee(DI,{json:()=>Q4});var Q4=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],MI={};Ee(MI,{json:()=>eV});var eV=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],OI={};Ee(OI,{json:()=>tV});var tV=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],zI={};Ee(zI,{json:()=>rV});var rV=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],LI={};Ee(LI,{json:()=>nV});var nV=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],PI={};Ee(PI,{json:()=>aV});var aV=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],BI={};Ee(BI,{json:()=>sV});var sV=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],WI={};Ee(WI,{json:()=>iV});var iV=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],VI={};Ee(VI,{json:()=>oV});var oV=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],UI={};Ee(UI,{json:()=>lV});var lV=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],GI={};Ee(GI,{json:()=>uV});var uV=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],HI={};Ee(HI,{json:()=>pV});var pV=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],jI={};Ee(jI,{json:()=>dV});var dV=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],qI={};Ee(qI,{json:()=>hV});var hV=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],Zw=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[EI,$I,AI,FI,RI,DI,MI,OI,zI,LI,PI,BI,WI,VI,UI,GI,HI,jI,qI],t=[].concat(...e.map(r=>r.json));this.opMappers=t.reduce((r,n)=>(r[n.tfOpName]=n,r),{})}transformGraph(e,t={}){let r=e.node,n=[],a=[],s=[],i=r.reduce((f,m)=>(f[m.name]=this.mapNode(m),m.op.startsWith("Placeholder")?n.push(f[m.name]):m.op==="Const"?a.push(f[m.name]):(m.input==null||m.input.length===0)&&s.push(f[m.name]),f),{}),o=[],u=[],p={},l={};t!=null&&(p=this.mapSignatureEntries(t.inputs),l=this.mapSignatureEntries(t.outputs));let d=Object.keys(i);d.forEach(f=>{let m=i[f];m.inputNames.forEach((g,y)=>{let[b,,x]=ta(g),v=i[b];if(v.outputs!=null){let I=v.outputs.indexOf(x);if(I!==-1){let T=`${b}:${I}`;m.inputNames[y]=T}}m.inputs.push(v),v.children.push(m)})}),Object.keys(l).length===0?d.forEach(f=>{let m=i[f];m.children.length===0&&u.push(m)}):Object.keys(l).forEach(f=>{let[m]=ta(f),g=i[m];g!=null&&(g.signatureKey=l[f],u.push(g))}),Object.keys(p).length>0?Object.keys(p).forEach(f=>{let[m]=ta(f),g=i[m];g&&(g.signatureKey=p[f],o.push(g))}):o=n;let h={};e.library!=null&&e.library.function!=null&&(h=e.library.function.reduce((f,m)=>(f[m.signature.name]=this.mapFunction(m),f),{}));let c={nodes:i,inputs:o,outputs:u,weights:a,placeholders:n,signature:t,functions:h};return s.length>0&&(c.initNodes=s),c}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,r)=>(t[e[r].name]=r,t),{})}mapNode(e){let t=_I(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let r={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(n=>n.startsWith("^")?n.slice(1):n),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(r.inputParams=t.inputs.reduce((n,a)=>(n[a.name]={type:a.type,inputIndexStart:a.start,inputIndexEnd:a.end},n),{})),t.attrs!=null&&(r.attrParams=t.attrs.reduce((n,a)=>{let s=a.type,i;switch(a.type){case"string":i=pm(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=pm(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"string[]":i=ym(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=ym(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"number":i=hm(e.attr,a.tfName,a.defaultValue||0),i===void 0&&a.tfDeprecatedName&&(i=hm(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"number[]":i=gm(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=gm(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"bool":i=dm(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=dm(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"bool[]":i=xm(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=xm(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"shape":i=mm(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=mm(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"shape[]":i=bm(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=bm(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"dtype":i=cm(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=cm(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"dtype[]":i=fm(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=fm(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"func":i=Jw(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Jw(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${a.type} for op: ${e.op}`)}return n[a.name]={value:i,type:s},n},{})),r}mapFunction(e){let t=e.nodeDef,r=[],n=[],a={};t!=null&&(a=t.reduce((p,l)=>(p[l.name]=this.mapNode(l),l.op==="Const"&&n.push(p[l.name]),p),{}));let s=[],i=[];e.signature.inputArg.forEach(p=>{let[l]=ta(p.name),d={name:l,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Kb(p.type),type:"dtype"}},children:[]};d.signatureKey=p.name,s.push(d),a[l]=d}),Object.keys(a).forEach(p=>{let l=a[p];l.inputNames.forEach((d,h)=>{let[c,,f]=ta(d),m=a[c];if(m.outputs!=null){let g=m.outputs.indexOf(f);if(g!==-1){let y=`${c}:${g}`;l.inputNames[h]=y}}l.inputs.push(m),m.children.push(l)})});let o=e.ret;e.signature.outputArg.forEach(p=>{let[l,d]=ta(o[p.name]),h=a[l];h!=null&&(h.defaultOutput=d,i.push(h))});let u=this.mapArgsToSignature(e);return{nodes:a,inputs:s,outputs:i,weights:n,placeholders:r,signature:u}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,r)=>(t[r.name]=this.mapArgToTensorInfo(r),t),{}),outputs:e.signature.outputArg.reduce((t,r)=>(t[r.name]=this.mapArgToTensorInfo(r,e.ret),t),{})}}mapArgToTensorInfo(e,t){let r=e.name;return t!=null&&(r=t[r]),{name:r,dtype:e.type}}};function cV(e){let t=H().global;if(typeof t.atob<"u")return t.atob(e);if(typeof Buffer<"u")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function KI(e,t){let r=Array.isArray(e)?String.fromCharCode.apply(null,e):cV(e);return t?r:r.toLowerCase()}function pm(e,t,r,n=!1){let a=e[t];return a!=null?KI(a.s,n):r}function dm(e,t,r){let n=e[t];return n?n.b:r}function hm(e,t,r){let n=e[t]||{},a=n.i!=null?n.i:n.f!=null?n.f:r;return typeof a=="number"?a:parseInt(a,10)}function Kb(e){switch(typeof e=="string"&&(e=ln[e]),e){case ln.DT_FLOAT:case ln.DT_HALF:return"float32";case ln.DT_INT32:case ln.DT_INT64:case ln.DT_INT8:case ln.DT_UINT8:return"int32";case ln.DT_BOOL:return"bool";case ln.DT_DOUBLE:return"float32";case ln.DT_STRING:return"string";default:return null}}function Jw(e,t,r){let n=e[t];return n&&n.func?n.func.name:r}function cm(e,t,r){let n=e[t];return n&&n.type?Kb(n.type):r}function fm(e,t,r){let n=e[t];return n&&n.list&&n.list.type?n.list.type.map(a=>Kb(a)):r}function XI(e){if(!e.unknownRank)return e.dim!=null?e.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function mm(e,t,r){let n=e[t];return n&&n.shape?XI(n.shape):r}function gm(e,t,r){let n=e[t];return n?((n.list.f&&n.list.f.length?n.list.f:n.list.i)||[]).map(a=>typeof a=="number"?a:parseInt(a,10)):r}function ym(e,t,r,n=!1){let a=e[t];return a&&a.list&&a.list.s?a.list.s.map(s=>KI(s,n)):r}function bm(e,t,r){let n=e[t];return n&&n.list&&n.list.shape?n.list.shape.map(a=>XI(a)):r}function xm(e,t,r){let n=e[t];return n&&n.list&&n.list.b?n.list.b:r}var fV=class{constructor(e,t,r){this.node=e,this.tensorMap=t,this.context=r,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(n=>this.getInput(n)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((n,a)=>(n[a]=this.getAttr(a),n),{}))}getInput(e){return er(e,this.tensorMap,this.context)}getAttr(e,t){let r=this.node.rawAttrs[e];if(r.tensor!=null)return er(e,this.tensorMap,this.context);if(r.i!=null||r.f!=null)return hm(this.node.rawAttrs,e,t);if(r.s!=null)return pm(this.node.rawAttrs,e,t);if(r.b!=null)return dm(this.node.rawAttrs,e,t);if(r.shape!=null)return mm(this.node.rawAttrs,e,t);if(r.type!=null)return cm(this.node.rawAttrs,e,t);if(r.list!=null){if(r.list.i!=null||r.list.f!=null)return gm(this.node.rawAttrs,e,t);if(r.list.s!=null)return ym(this.node.rawAttrs,e,t);if(r.list.shape!=null)return bm(this.node.rawAttrs,e,t);if(r.list.b!=null)return xm(this.node.rawAttrs,e,t);if(r.list.type!=null)return fm(this.node.rawAttrs,e,t)}return t}},jt={};Ee(jt,{OP_SCOPE_SUFFIX:()=>Jm,abs:()=>_t,acos:()=>rg,acosh:()=>ng,add:()=>J,addN:()=>E0,all:()=>nc,any:()=>Yu,argMax:()=>Es,argMin:()=>ag,asin:()=>sg,asinh:()=>ig,atan:()=>og,atan2:()=>lg,atanh:()=>ug,avgPool:()=>pa,avgPool3d:()=>dg,basicLSTMCell:()=>R0,batchNorm:()=>no,batchNorm2d:()=>hg,batchNorm3d:()=>cg,batchNorm4d:()=>fg,batchToSpaceND:()=>Lp,bincount:()=>mg,booleanMaskAsync:()=>v1,broadcastArgs:()=>D0,broadcastTo:()=>bs,buffer:()=>ze,cast:()=>se,ceil:()=>gg,clipByValue:()=>ir,clone:()=>Ln,complex:()=>ia,concat:()=>at,concat1d:()=>yg,concat2d:()=>bg,concat3d:()=>xg,concat4d:()=>wg,conv1d:()=>ac,conv2d:()=>cr,conv2dTranspose:()=>sc,conv3d:()=>kg,conv3dTranspose:()=>Ig,cos:()=>Pp,cosh:()=>ic,cosineWindow:()=>Ec,cumprod:()=>tp,cumsum:()=>oc,denseBincount:()=>ph,depthToSpace:()=>Sg,depthwiseConv2d:()=>ao,diag:()=>O0,dilation2d:()=>Ng,div:()=>me,divNoNan:()=>Tg,dot:()=>Cg,dropout:()=>ny,einsum:()=>L0,elu:()=>au,enclosingPowerOfTwo:()=>ay,equal:()=>Wr,erf:()=>_g,euclideanNorm:()=>Ag,exp:()=>fr,expandDims:()=>Qt,expm1:()=>Fg,eye:()=>lc,fft:()=>Xp,fill:()=>Br,floor:()=>iu,floorDiv:()=>rc,fused:()=>Po,gather:()=>ou,gatherND:()=>N1,greater:()=>br,greaterEqual:()=>da,ifft:()=>Lo,imag:()=>Bp,image:()=>xn,inTopKAsync:()=>T1,irfft:()=>kc,isFinite:()=>Rg,isInf:()=>Dg,isNaN:()=>Mg,leakyRelu:()=>Wp,less:()=>Do,lessEqual:()=>Xa,linalg:()=>oy,linspace:()=>U0,localResponseNormalization:()=>Og,log:()=>Vr,log1p:()=>Vp,logSigmoid:()=>zg,logSoftmax:()=>pc,logSumExp:()=>dc,logicalAnd:()=>cn,logicalNot:()=>Up,logicalOr:()=>hc,logicalXor:()=>Lg,losses:()=>L1,lowerBound:()=>H0,matMul:()=>Me,max:()=>Qr,maxPool:()=>Wt,maxPool3d:()=>Pg,maxPoolWithArgmax:()=>j0,maximum:()=>Hn,mean:()=>xt,meshgrid:()=>q0,min:()=>Ro,minimum:()=>Da,mirrorPad:()=>Bg,mod:()=>Wg,moments:()=>Gp,movingAverage:()=>k1,mul:()=>L,multiRNNCell:()=>K0,multinomial:()=>X0,neg:()=>ht,norm:()=>su,notEqual:()=>Rs,oneHot:()=>Mo,ones:()=>Pr,onesLike:()=>Ur,op:()=>z,outerProduct:()=>Z0,pad:()=>_n,pad1d:()=>J0,pad2d:()=>Y0,pad3d:()=>Q0,pad4d:()=>e1,pool:()=>Vg,pow:()=>oa,prelu:()=>jp,print:()=>tg,prod:()=>Ug,raggedGather:()=>t1,raggedRange:()=>r1,raggedTensorToTensor:()=>n1,rand:()=>a1,randomGamma:()=>l1,randomNormal:()=>fc,randomStandardNormal:()=>u1,randomUniform:()=>lu,range:()=>Ds,real:()=>Oo,reciprocal:()=>Kg,relu:()=>et,relu6:()=>mc,reshape:()=>P,reverse:()=>tn,reverse1d:()=>p1,reverse2d:()=>d1,reverse3d:()=>h1,reverse4d:()=>c1,rfft:()=>Zp,round:()=>gc,rsqrt:()=>yc,scalar:()=>ve,scatterND:()=>I1,searchSorted:()=>cc,selu:()=>bc,separableConv2d:()=>uu,setdiff1dAsync:()=>f1,sigmoid:()=>hn,sign:()=>Xg,signal:()=>z1,sin:()=>xc,sinh:()=>wc,slice:()=>Ve,slice1d:()=>qp,slice2d:()=>vc,slice3d:()=>Kp,slice4d:()=>zo,softmax:()=>Za,softplus:()=>so,spaceToBatchND:()=>Hp,sparse:()=>P1,sparseToDense:()=>S1,spectral:()=>O1,split:()=>Nr,sqrt:()=>nr,square:()=>nt,squaredDifference:()=>Ic,squeeze:()=>Ja,stack:()=>Ot,step:()=>io,stridedSlice:()=>Zg,string:()=>B1,sub:()=>he,sum:()=>ge,tan:()=>Jg,tanh:()=>As,tensor:()=>hr,tensor1d:()=>Qe,tensor2d:()=>Pn,tensor3d:()=>Sc,tensor4d:()=>Ma,tensor5d:()=>m1,tensor6d:()=>g1,tensorScatterUpdate:()=>b1,tile:()=>Lr,topk:()=>Qg,transpose:()=>Oe,truncatedNormal:()=>Cc,unique:()=>ey,unsortedSegmentSum:()=>_c,unstack:()=>Nt,upperBound:()=>x1,variable:()=>ty,where:()=>Gt,whereAsync:()=>ry,zeros:()=>wt,zerosLike:()=>He});var mV=(e,t,r,n=jt)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[n.add(k("a",e,t,r),k("b",e,t,r))];case"AddN":return[n.addN(k("tensors",e,t,r))];case"FloorMod":case"Mod":return[n.mod(k("a",e,t,r),k("b",e,t,r))];case"Mul":return[n.mul(k("a",e,t,r),k("b",e,t,r))];case"RealDiv":case"Div":return[n.div(k("a",e,t,r),k("b",e,t,r))];case"DivNoNan":return[n.divNoNan(k("a",e,t,r),k("b",e,t,r))];case"FloorDiv":return[n.floorDiv(k("a",e,t,r),k("b",e,t,r))];case"Sub":return[n.sub(k("a",e,t,r),k("b",e,t,r))];case"Minimum":return[n.minimum(k("a",e,t,r),k("b",e,t,r))];case"Maximum":return[n.maximum(k("a",e,t,r),k("b",e,t,r))];case"Pow":return[n.pow(k("a",e,t,r),k("b",e,t,r))];case"SquaredDifference":return[n.squaredDifference(k("a",e,t,r),k("b",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},gV=(e,t,r,n=jt)=>{switch(e.op){case"Abs":case"ComplexAbs":return[n.abs(k("x",e,t,r))];case"Acos":return[n.acos(k("x",e,t,r))];case"Acosh":return[n.acosh(k("x",e,t,r))];case"Asin":return[n.asin(k("x",e,t,r))];case"Asinh":return[n.asinh(k("x",e,t,r))];case"Atan":return[n.atan(k("x",e,t,r))];case"Atan2":return[n.atan2(k("x",e,t,r),k("y",e,t,r))];case"Atanh":return[n.atanh(k("x",e,t,r))];case"Ceil":return[n.ceil(k("x",e,t,r))];case"Complex":return[n.complex(k("real",e,t,r),k("imag",e,t,r))];case"Cos":return[n.cos(k("x",e,t,r))];case"Cosh":return[n.cosh(k("x",e,t,r))];case"Elu":return[n.elu(k("x",e,t,r))];case"Erf":return[n.erf(k("x",e,t,r))];case"Exp":return[n.exp(k("x",e,t,r))];case"Expm1":return[n.expm1(k("x",e,t,r))];case"Floor":return[n.floor(k("x",e,t,r))];case"Log":return[n.log(k("x",e,t,r))];case"Log1p":return[n.log1p(k("x",e,t,r))];case"Imag":return[n.imag(k("x",e,t,r))];case"Neg":return[n.neg(k("x",e,t,r))];case"Reciprocal":return[n.reciprocal(k("x",e,t,r))];case"Real":return[n.real(k("x",e,t,r))];case"Relu":return[n.relu(k("x",e,t,r))];case"Round":return[n.round(k("x",e,t,r))];case"Selu":return[n.selu(k("x",e,t,r))];case"Sigmoid":return[n.sigmoid(k("x",e,t,r))];case"Sin":return[n.sin(k("x",e,t,r))];case"Sign":return[n.sign(k("x",e,t,r))];case"Sinh":return[n.sinh(k("x",e,t,r))];case"Softplus":return[n.softplus(k("x",e,t,r))];case"Sqrt":return[n.sqrt(k("x",e,t,r))];case"Square":return[n.square(k("x",e,t,r))];case"Tanh":return[n.tanh(k("x",e,t,r))];case"Tan":return[n.tan(k("x",e,t,r))];case"ClipByValue":return[n.clipByValue(k("x",e,t,r),k("clipValueMin",e,t,r),k("clipValueMax",e,t,r))];case"Relu6":return[n.relu6(k("x",e,t,r))];case"Rsqrt":return[n.rsqrt(er(e.inputNames[0],t,r))];case"Prod":return[n.prod(k("x",e,t,r),k("axes",e,t,r))];case"LeakyRelu":return[n.leakyRelu(k("x",e,t,r),k("alpha",e,t,r))];case"Prelu":return[n.prelu(k("x",e,t,r),k("alpha",e,t,r))];case"IsNan":return[n.isNaN(er(e.inputNames[0],t,r))];case"IsInf":return[n.isInf(er(e.inputNames[0],t,r))];case"IsFinite":return[n.isFinite(er(e.inputNames[0],t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function dn(e,t,r=""){if(!(typeof e=="number"||typeof t=="number")){w.assert(e.length===t.length,()=>r+` Shapes ${e} and ${t} must match`);for(let n=0;n<e.length;n++){let a=e[n],s=t[n];w.assert(a<0||s<0||a===s,()=>r+` Shapes ${e} and ${t} must match`)}}}function Yw(e){return!(typeof e=="number"||e.some(t=>t<0))}function $u(e,t,r){let n=wm(e,r),a=!Yw(n);if(a&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${n}`);if(a&&t.forEach(s=>{n=wm(s.shape,n)}),!Yw(n))throw new Error(`Non-fully-defined elementShape: ${n}`);return n}function wm(e,t){if(typeof e=="number")return t;if(typeof t=="number")return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let r=[];for(let n=0;n<e.length;++n){let a=e[n],s=t[n];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);r[n]=a>=0?a:s}return r}var yV=class{constructor(e,t,r,n,a,s,i){this.name=e,this.dtype=t,this.maxSize=r,this.elementShape=n,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=ve(0),Dt(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let r=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),dn(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),r.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(r.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);r.tensor=t,Dt(t),r.written=!0,this.tensors[e]=r}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((r,n)=>this.write(r,t[n]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let n=0;n<this.size();n++)e.push(n)}if(e.length===0)return hr([],[0].concat(this.elementShape));let r=this.readMany(e);return dn(this.elementShape,r[0].shape,"TensorArray shape mismatch: "),Ot(r,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return hr([],[0].concat(this.elementShape));let t=[];for(let n=0;n<this.size();n++)t.push(n);let r=this.readMany(t);return dn(this.elementShape,r[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${r[0].shape})`),at(r,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let r=Math.max(...e);if(!this.dynamicSize&&r>=this.maxSize)throw new Error(`Max index must be < array size (${r}  vs. ${this.maxSize})`);this.writeMany(e,Nt(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let r=0,n=e.map(o=>(r+=o,r));if(r!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let a=r===0?0:t.size/r,s=[];W(()=>{t=P(t,[1,r,a]);for(let o=0;o<e.length;++o){let u=[0,o===0?0:n[o-1],0],p=[1,e[o],a];s[o]=P(Ve(t,u,p),this.elementShape)}return s});let i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,s)}},Go=class{get id(){return this.idTensor.id}constructor(e,t,r,n=-1){this.tensors=e,this.elementShape=t,this.elementDtype=r,e!=null&&e.forEach(a=>{if(r!==a.dtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${a.dtype}`);dn(t,a.shape,"TensorList shape mismatch: "),Dt(a)}),this.idTensor=ve(0),this.maxNumElements=n,Dt(this.idTensor)}copy(){return new Go([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,r=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(r!==-1&&this.tensors.length!==r)throw new Error(`Operation expected a list with ${r} elements but got a list with ${this.tensors.length} elements.`);dn(e,this.elementShape,"TensorList shape mismatch: ");let n=$u(this.elementShape,this.tensors,e);return W(()=>{let a=this.tensors.map(s=>P(s,n));return Ot(a,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let r=$u(this.elementShape,this.tensors,e),n=this.tensors.pop();return n.kept=!1,dn(n.shape,e,"TensorList shape mismatch: "),P(n,r)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(dn(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Dt(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new Go([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let r=0;r<Math.min(this.tensors.length,e);++r)t.tensors[r]=this.tensors[r];return t}getItem(e,t,r){if(r!==this.elementDtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);dn(this.tensors[e].shape,t,"TensorList shape mismatch: ");let n=$u(this.elementShape,this.tensors,t);return P(this.tensors[e],n)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);dn(this.elementShape,t.shape,"TensorList shape mismatch: "),Dt(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,r){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);dn(this.elementShape,r,"TensorList shape mismatch: "),e=e.slice(0,this.size());let n=$u(this.elementShape,this.tensors,r);return e.length===0?hr([],[0].concat(n)):W(()=>{let a=e.map(s=>P(this.tensors[s],n));return Ot(a,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);dn(this.elementShape,t,"TensorList shape mismatch: ");let r=$u(this.elementShape,this.tensors,t);return this.size()===0?hr([],[0].concat(r)):W(()=>{let n=this.tensors.map(a=>P(a,r));return at(n,0)})}};function bV(e,t,r){let n=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==r)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${r}`);let a=e.shape.slice(1);dn(a,t,"TensorList shape mismatch: ");let s=Nt(e);return new Go(s,t,n)}function xV(e,t,r,n){return new Go([],e,t,n)}function wV(e,t,r,n){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let a=Math.max(...t);if(n!=null&&n!==-1&&a>=n)throw new Error(`Max index must be < array size (${a}  vs. ${n})`);let s=new Go([],r,e.dtype,n),i=Nt(e,0);return t.forEach((o,u)=>{s.setItem(o,i[u])}),s}function vV(e,t,r){let n=0,a=t.map(l=>(n+=l,n));if(n!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${e.shape}`);let s=e.shape.slice(1),i=wm(s,r),o=n===0?0:e.size/n,u=W(()=>{let l=[];e=P(e,[1,n,o]);for(let d=0;d<t.length;++d){let h=[0,d===0?0:a[d-1],0],c=[1,t[d],o];l[d]=P(Ve(e,h,c),i)}return e.dispose(),l}),p=new Go([],r,e.dtype,t.length);for(let l=0;l<u.length;l++)p.setItem(l,u[l]);return p}var kV=async(e,t,r)=>{switch(e.op){case"If":case"StatelessIf":{let n=k("thenBranch",e,t,r),a=k("elseBranch",e,t,r),s=k("cond",e,t,r),i=k("args",e,t,r);return(await s.data())[0]?r.functionMap[n].executeFunctionAsync(i,r.tensorArrayMap,r.tensorListMap):r.functionMap[a].executeFunctionAsync(i,r.tensorArrayMap,r.tensorListMap)}case"While":case"StatelessWhile":{let n=k("body",e,t,r),a=k("cond",e,t,r),s=k("args",e,t,r),i=await r.functionMap[a].executeFunctionAsync(s,r.tensorArrayMap,r.tensorListMap),o=s.map(l=>l.id),u=await i[0].data();i.forEach(l=>{!l.kept&&o.indexOf(l.id)===-1&&l.dispose()});let p=s;for(;u[0];){let l=p;p=await r.functionMap[n].executeFunctionAsync(p,r.tensorArrayMap,r.tensorListMap);let d=p.map(c=>c.id);l.forEach(c=>{!c.kept&&o.indexOf(c.id)===-1&&d.indexOf(c.id)===-1&&c.dispose()});let h=await r.functionMap[a].executeFunctionAsync(p,r.tensorArrayMap,r.tensorListMap);u=await h[0].data(),h.forEach(c=>{!c.kept&&o.indexOf(c.id)===-1&&d.indexOf(c.id)===-1&&c.dispose()})}return p}case"LoopCond":{let n=k("pred",e,t,r);return[ra(n)]}case"Switch":{let n=k("pred",e,t,r),a=k("data",e,t,r);return a.kept||(a=ra(a)),(await n.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{let n=e.inputNames.find(a=>er(a,t,r)!==void 0);if(n){let a=er(n,t,r);return[ra(a)]}return}case"Enter":{let n=k("frameName",e,t,r),a=k("tensor",e,t,r);return r.enterFrame(n),[ra(a)]}case"Exit":{let n=k("tensor",e,t,r);return r.exitFrame(),[ra(n)]}case"NextIteration":{let n=k("tensor",e,t,r);return r.nextIteration(),[ra(n)]}case"TensorArrayV3":{let n=k("size",e,t,r),a=k("dtype",e,t,r),s=k("elementShape",e,t,r),i=k("dynamicSize",e,t,r),o=k("clearAfterRead",e,t,r),u=k("identicalElementShapes",e,t,r),p=k("name",e,t,r),l=new yV(p,a,n,s,u,i,o);return r.addTensorArray(l),[l.idTensor,ve(1)]}case"TensorArrayWriteV3":{let n=k("tensorArrayId",e,t,r),a=k("index",e,t,r),s=k("tensor",e,t,r),i=r.getTensorArray(n.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{let n=k("tensorArrayId",e,t,r),a=k("index",e,t,r);return[r.getTensorArray(n.id).read(a)]}case"TensorArrayGatherV3":{let n=k("tensorArrayId",e,t,r),a=k("indices",e,t,r),s=k("dtype",e,t,r);return[r.getTensorArray(n.id).gather(a,s)]}case"TensorArrayScatterV3":{let n=k("tensorArrayId",e,t,r),a=k("indices",e,t,r),s=k("tensor",e,t,r),i=r.getTensorArray(n.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{let n=k("tensorArrayId",e,t,r),a=r.getTensorArray(n.id),s=k("dtype",e,t,r);return[a.concat(s)]}case"TensorArraySplitV3":{let n=k("tensorArrayId",e,t,r),a=k("tensor",e,t,r),s=k("lengths",e,t,r),i=r.getTensorArray(n.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{let n=k("tensorArrayId",e,t,r),a=r.getTensorArray(n.id);return[ve(a.size(),"int32")]}case"TensorArrayCloseV3":{let n=k("tensorArrayId",e,t,r),a=r.getTensorArray(n.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{let n=k("tensorListId",e,t,r),a=k("index",e,t,r),s=k("tensor",e,t,r),i=r.getTensorList(n.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{let n=k("tensorListId",e,t,r),a=k("index",e,t,r),s=k("elementShape",e,t,r),i=k("elementDType",e,t,r);return[r.getTensorList(n.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let n=k("indices",e,t,r),a=k("tensor",e,t,r),s=k("elementShape",e,t,r),i=k("numElements",e,t,r),o=wV(a,n,s,i);return r.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let n=k("elementShape",e,t,r),a=k("elementDType",e,t,r),s;e.op==="TensorListReserve"?s="numElements":s="maxNumElements";let i=k(s,e,t,r),o=e.op==="TensorListReserve"?-1:i,u=xV(n,a,i,o);return r.addTensorList(u),[u.idTensor]}case"TensorListGather":{let n=k("tensorListId",e,t,r),a=k("indices",e,t,r),s=k("elementShape",e,t,r),i=k("elementDType",e,t,r);return[r.getTensorList(n.id).gather(a,i,s)]}case"TensorListStack":{let n=k("tensorListId",e,t,r),a=k("elementShape",e,t,r),s=k("elementDType",e,t,r),i=k("numElements",e,t,r);return[r.getTensorList(n.id).stack(a,s,i)]}case"TensorListFromTensor":{let n=k("tensor",e,t,r),a=k("elementShape",e,t,r),s=k("elementDType",e,t,r),i=bV(n,a,s);return r.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let n=k("tensorListId",e,t,r),a=r.getTensorList(n.id),s=k("dtype",e,t,r),i=k("elementShape",e,t,r);return[a.concat(s,i)]}case"TensorListPushBack":{let n=k("tensorListId",e,t,r),a=k("tensor",e,t,r),s=r.getTensorList(n.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{let n=k("tensorListId",e,t,r),a=k("elementShape",e,t,r),s=k("elementDType",e,t,r);return[r.getTensorList(n.id).popBack(a,s)]}case"TensorListSplit":{let n=k("tensor",e,t,r),a=k("elementShape",e,t,r),s=k("lengths",e,t,r),i=vV(n,s,a);return r.addTensorList(i),[i.idTensor]}case"TensorListLength":{let n=k("tensorListId",e,t,r),a=r.getTensorList(n.id);return[ve(a.size(),"int32")]}case"TensorListResize":{let n=k("tensorListId",e,t,r),a=k("size",e,t,r),s=r.getTensorList(n.id).resize(a);return r.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Qw(e,t,r){let[n,a]=k("fusedOps",e,t,r),s=n==="biasadd",i=!s,o=a==="prelu",u=n==="fusedbatchnorm",p=k("numArgs",e,t,r);if(s){if(o&&p!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&p!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let l=k("strides",e,t,r),d=Xd(e,t,r),h=k("dataFormat",e,t,r).toUpperCase(),c=k("dilations",e,t,r),[f,m]=k("args",e,t,r);i&&(m=f,f=void 0);let g=k("leakyreluAlpha",e,t,r);return{stride:l,pad:d,dataFormat:h,dilations:c,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:g}}var IV=(e,t,r,n=jt)=>{switch(e.op){case"Conv1D":{let a=k("stride",e,t,r),s=k("pad",e,t,r),i=k("dataFormat",e,t,r).toUpperCase(),o=k("dilation",e,t,r);return[n.conv1d(k("x",e,t,r),k("filter",e,t,r),a,s,i,o)]}case"Conv2D":{let a=k("strides",e,t,r),s=Xd(e,t,r),i=k("dataFormat",e,t,r).toUpperCase(),o=k("dilations",e,t,r);return[n.conv2d(k("x",e,t,r),k("filter",e,t,r),[a[1],a[2]],s,i,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:u,preluArg:p,activationFunc:l,leakyreluAlpha:d}=Qw(e,t,r);return[n.fused.conv2d({x:k("x",e,t,r),filter:k("filter",e,t,r),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:u,activation:l,preluActivationWeights:p,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:u,preluArg:p,activationFunc:l,leakyreluAlpha:d}=Qw(e,t,r);return[n.fused.depthwiseConv2d({x:k("x",e,t,r),filter:k("filter",e,t,r),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:u,activation:l,preluActivationWeights:p,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let a=k("outputShape",e,t,r),s=k("strides",e,t,r),i=Xd(e,t,r);return[n.conv2dTranspose(k("x",e,t,r),k("filter",e,t,r),a,[s[1],s[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let a=k("strides",e,t,r),s=Xd(e,t,r),i=k("dilations",e,t,r),o=k("dataFormat",e,t,r).toUpperCase();return[n.depthwiseConv2d(k("input",e,t,r),k("filter",e,t,r),[a[1],a[2]],s,o,[i[1],i[2]])]}case"Conv3D":{let a=k("strides",e,t,r),s=k("pad",e,t,r),i=k("dataFormat",e,t,r).toUpperCase(),o=k("dilations",e,t,r);return[n.conv3d(k("x",e,t,r),k("filter",e,t,r),[a[1],a[2],a[3]],s,i,[o[1],o[2],o[3]])]}case"AvgPool":{let a=k("strides",e,t,r),s=k("pad",e,t,r),i=k("kernelSize",e,t,r);return[n.avgPool(k("x",e,t,r),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPool":{let a=k("strides",e,t,r),s=k("pad",e,t,r),i=k("kernelSize",e,t,r);return[n.maxPool(k("x",e,t,r),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPoolWithArgmax":{let a=k("strides",e,t,r),s=k("pad",e,t,r),i=k("kernelSize",e,t,r),o=k("includeBatchInIndex",e,t,r),{result:u,indexes:p}=n.maxPoolWithArgmax(k("x",e,t,r),[i[1],i[2]],[a[1],a[2]],s,o);return[u,p]}case"AvgPool3D":{let a=k("strides",e,t,r),s=k("pad",e,t,r),i=k("kernelSize",e,t,r);return[n.avgPool3d(k("x",e,t,r),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"MaxPool3D":{let a=k("strides",e,t,r),s=k("pad",e,t,r),i=k("kernelSize",e,t,r);return[n.maxPool3d(k("x",e,t,r),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"Dilation2D":{let a=k("strides",e,t,r),s=k("pad",e,t,r),i=k("dilations",e,t,r),o=a[1],u=a[2],p=i[1],l=i[2];return[n.dilation2d(k("x",e,t,r),k("filter",e,t,r),[o,u],s,[p,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},SV=(e,t,r,n=jt)=>{switch(e.op){case"Fill":{let a=k("shape",e,t,r),s=k("dtype",e,t,r),i=k("value",e,t,r);return[n.fill(a,i,s)]}case"LinSpace":{let a=k("start",e,t,r),s=k("stop",e,t,r),i=k("num",e,t,r);return[n.linspace(a,s,i)]}case"Multinomial":{let a=k("logits",e,t,r),s=k("numSamples",e,t,r),i=k("seed",e,t,r);return[n.multinomial(a,s,i)]}case"OneHot":{let a=k("indices",e,t,r),s=k("depth",e,t,r),i=k("onValue",e,t,r),o=k("offValue",e,t,r),u=k("dtype",e,t,r);return[n.oneHot(a,s,i,o,u)]}case"Ones":return[n.ones(k("shape",e,t,r),k("dtype",e,t,r))];case"OnesLike":return[n.onesLike(k("x",e,t,r))];case"RandomStandardNormal":return[n.randomStandardNormal(k("shape",e,t,r),k("dtype",e,t,r),k("seed",e,t,r))];case"RandomUniform":return[n.randomUniform(k("shape",e,t,r),k("minval",e,t,r),k("maxval",e,t,r),k("dtype",e,t,r))];case"Range":{let a=k("start",e,t,r),s=k("stop",e,t,r),i=k("step",e,t,r);return[n.range(a,s,i,k("dtype",e,t,r))]}case"TruncatedNormal":{let a=k("shape",e,t,r),s=k("mean",e,t,r),i=k("stdDev",e,t,r),o=k("seed",e,t,r);return[n.truncatedNormal(a,s,i,k("dtype",e,t,r),o)]}case"Zeros":return[n.zeros(k("shape",e,t,r),k("dtype",e,t,r))];case"ZerosLike":return[n.zerosLike(k("x",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Af(e,t,r){let n=k("boxes",e,t,r),a=k("scores",e,t,r),s=k("maxOutputSize",e,t,r),i=k("iouThreshold",e,t,r),o=k("scoreThreshold",e,t,r),u=k("softNmsSigma",e,t,r);return{boxes:n,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}}var NV=async(e,t,r,n,a=jt)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:s,scores:i,maxOutputSize:o,iouThreshold:u,scoreThreshold:p,softNmsSigma:l}=Af(e,t,r),d=await a.image.nonMaxSuppressionWithScoreAsync(s,i,o,u,p,l);return[d.selectedIndices,d.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:s,scores:i,maxOutputSize:o,iouThreshold:u,scoreThreshold:p}=Af(e,t,r),l=k("padToMaxOutputSize",e,t,r),d=await a.image.nonMaxSuppressionPaddedAsync(s,i,o,u,p,l);return[d.selectedIndices,d.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:s,scores:i,maxOutputSize:o,iouThreshold:u,scoreThreshold:p}=Af(e,t,r);return[await a.image.nonMaxSuppressionAsync(s,i,o,u,p)]}case"Where":{let s=a.cast(k("condition",e,t,r),"bool"),i=[await a.whereAsync(s)];return s.dispose(),i}case"ListDiff":return a.setdiff1dAsync(k("x",e,t,r),k("y",e,t,r));default:throw TypeError(`Node type ${e.op} is not implemented`)}},TV=(e,t,r,n=jt)=>{switch(e.op){case"LowerBound":{let a=k("sortedSequence",e,t,r),s=k("values",e,t,r);return[n.lowerBound(a,s)]}case"TopKV2":{let a=k("x",e,t,r),s=k("k",e,t,r),i=k("sorted",e,t,r),o=n.topk(a,s,i);return[o.values,o.indices]}case"UpperBound":{let a=k("sortedSequence",e,t,r),s=k("values",e,t,r);return[n.upperBound(a,s)]}case"Unique":{let a=k("x",e,t,r),s=n.unique(a);return[s.values,s.indices]}case"UniqueV2":{let a=k("x",e,t,r),s=k("axis",e,t,r),i=n.unique(a,s);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},CV=(e,t,r,n=jt)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let a=k("default",e,t,r);return[er(e.name,t,r)||a];case"Placeholder":return[er(e.name,t,r)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let l=k("x",e,t,r);return[ra(l)]}case"IdentityN":return k("x",e,t,r).map(l=>ra(l));case"Snapshot":let s=k("x",e,t,r);return[ra(s)];case"Shape":return[n.tensor1d(k("x",e,t,r).shape,"int32")];case"ShapeN":return k("x",e,t,r).map(l=>n.tensor1d(l.shape));case"Size":return[n.scalar(k("x",e,t,r).size,"int32")];case"Rank":return[n.scalar(k("x",e,t,r).rank,"int32")];case"NoOp":return[n.scalar(1)];case"Print":let i=k("x",e,t,r),o=k("data",e,t,r),u=k("message",e,t,r),p=k("summarize",e,t,r);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(u);for(let l=0;l<o.length;l++)console.log(Array.prototype.slice.call(o[l].dataSync()).slice(0,p));return[i];default:throw TypeError(`Node type ${e.op} is not implemented`)}},_V=class{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=ve(0),this.tensorMap=new Map,Dt(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ve(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let r=await e.data();return this.tensorMap.forEach(n=>n.dispose()),this.tensorMap.clear(),W(()=>{let n=Nt(t),a=r.length,s=n.length;w.assert(a===s,()=>`The number of elements doesn't match, keys has ${a} elements, the values has ${s} elements.`);for(let i=0;i<a;i++){let o=r[i],u=n[i];Dt(u),this.tensorMap.set(o,u)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let r=await e.data();return W(()=>{let n=[];for(let a=0;a<r.length;a++){let s=r[a],i=this.findWithDefault(s,t);n.push(i)}return Ot(n)})}findWithDefault(e,t){let r=this.tensorMap.get(e);return r!=null?r:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},EV=async(e,t,r,n)=>{switch(e.op){case"HashTable":case"HashTableV2":{let a=n.getHashTableHandleByName(e.name);if(a!=null)return[a];{let s=k("keyDType",e,t,r),i=k("valueDType",e,t,r),o=new _V(s,i);return n.addHashTable(e.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let a=k("tableHandle",e,t,r,n),s=k("keys",e,t,r),i=k("values",e,t,r);return[await n.getHashTableById(a.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let a=k("tableHandle",e,t,r,n),s=k("keys",e,t,r),i=k("defaultValue",e,t,r);return[await n.getHashTableById(a.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let a=k("tableHandle",e,t,r,n);return[n.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},$V=(e,t,r,n=jt)=>{switch(e.op){case"ResizeBilinear":{let a=k("images",e,t,r),s=k("size",e,t,r),i=k("alignCorners",e,t,r),o=k("halfPixelCenters",e,t,r);return[n.image.resizeBilinear(a,[s[0],s[1]],i,o)]}case"ResizeNearestNeighbor":{let a=k("images",e,t,r),s=k("size",e,t,r),i=k("alignCorners",e,t,r),o=k("halfPixelCenters",e,t,r);return[n.image.resizeNearestNeighbor(a,[s[0],s[1]],i,o)]}case"CropAndResize":{let a=k("image",e,t,r),s=k("boxes",e,t,r),i=k("boxInd",e,t,r),o=k("cropSize",e,t,r),u=k("method",e,t,r),p=k("extrapolationValue",e,t,r);return[n.image.cropAndResize(a,s,i,o,u,p)]}case"ImageProjectiveTransformV3":{let a=k("images",e,t,r),s=k("transforms",e,t,r),i=k("outputShape",e,t,r),o=k("fillValue",e,t,r),u=k("interpolation",e,t,r),p=k("fillMode",e,t,r);return[n.image.transform(a,s,u.toLowerCase(),p.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},AV=(e,t,r,n=jt)=>{switch(e.op){case"Equal":return[n.equal(k("a",e,t,r),k("b",e,t,r))];case"NotEqual":return[n.notEqual(k("a",e,t,r),k("b",e,t,r))];case"Greater":return[n.greater(k("a",e,t,r),k("b",e,t,r))];case"GreaterEqual":return[n.greaterEqual(k("a",e,t,r),k("b",e,t,r))];case"Less":return[n.less(k("a",e,t,r),k("b",e,t,r))];case"LessEqual":return[n.lessEqual(k("a",e,t,r),k("b",e,t,r))];case"LogicalAnd":return[n.logicalAnd(k("a",e,t,r),k("b",e,t,r))];case"LogicalNot":return[n.logicalNot(k("a",e,t,r))];case"LogicalOr":return[n.logicalOr(k("a",e,t,r),k("b",e,t,r))];case"Select":case"SelectV2":return[n.where(k("condition",e,t,r),k("a",e,t,r),k("b",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},FV=(e,t,r,n=jt)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[n.matMul(k("a",e,t,r),k("b",e,t,r),k("transposeA",e,t,r),k("transposeB",e,t,r))];case"Einsum":return[n.einsum(k("equation",e,t,r),...k("tensors",e,t,r))];case"Transpose":return[n.transpose(k("x",e,t,r),k("perm",e,t,r))];case"_FusedMatMul":let[a,s]=k("fusedOps",e,t,r),i=a==="biasadd",o=s==="prelu",u=k("numArgs",e,t,r),p=k("leakyreluAlpha",e,t,r);if(i){if(o&&u!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&u!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[l,d]=k("args",e,t,r);return[n.fused.matMul({a:k("a",e,t,r),b:k("b",e,t,r),transposeA:k("transposeA",e,t,r),transposeB:k("transposeB",e,t,r),bias:l,activation:s,preluActivationWeights:d,leakyreluAlpha:p})];case"MatrixBandPart":return[n.linalg.bandPart(k("a",e,t,r),k("numLower",e,t,r),k("numUpper",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},RV=(e,t,r,n=jt)=>{switch(e.op){case"EuclideanNorm":return[n.euclideanNorm(k("x",e,t,r),k("axis",e,t,r),k("keepDims",e,t,r))];case"FusedBatchNorm":case"FusedBatchNormV2":return[n.batchNorm(k("x",e,t,r),k("mean",e,t,r),k("variance",e,t,r),k("offset",e,t,r),k("scale",e,t,r),k("epsilon",e,t,r))];case"FusedBatchNormV3":return[n.batchNorm(k("x",e,t,r),k("mean",e,t,r),k("variance",e,t,r),k("offset",e,t,r),k("scale",e,t,r),k("epsilon",e,t,r))];case"LRN":return[n.localResponseNormalization(k("x",e,t,r),k("radius",e,t,r),k("bias",e,t,r),k("alpha",e,t,r),k("beta",e,t,r))];case"Softmax":return[n.softmax(k("x",e,t,r))];case"LogSoftmax":return[n.logSoftmax(k("x",e,t,r))];case"SparseToDense":return[n.sparseToDense(k("sparseIndices",e,t,r),k("outputShape",e,t,r),k("sparseValues",e,t,r),k("defaultValue",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},DV=(e,t,r,n=jt)=>{switch(e.op){case"RaggedGather":{let{outputNestedSplits:a,outputDenseValues:s}=n.raggedGather(k("paramsNestedSplits",e,t,r),k("paramsDenseValues",e,t,r),k("indices",e,t,r),k("outputRaggedRank",e,t,r));return a.concat(s)}case"RaggedRange":{let{rtNestedSplits:a,rtDenseValues:s}=n.raggedRange(k("starts",e,t,r),k("limits",e,t,r),k("splits",e,t,r));return[a,s]}case"RaggedTensorToTensor":return[n.raggedTensorToTensor(k("shape",e,t,r),k("values",e,t,r),k("defaultValue",e,t,r),k("rowPartitionTensors",e,t,r),k("rowPartitionTypes",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},MV=(e,t,r,n=jt)=>{switch(e.op){case"Max":{let o=k("axis",e,t,r),u=k("keepDims",e,t,r);return[n.max(k("x",e,t,r),o,u)]}case"Mean":{let o=k("axis",e,t,r),u=k("keepDims",e,t,r);return[n.mean(k("x",e,t,r),o,u)]}case"Min":{let o=k("axis",e,t,r),u=k("keepDims",e,t,r);return[n.min(k("x",e,t,r),o,u)]}case"Sum":{let o=k("axis",e,t,r),u=k("keepDims",e,t,r);return[n.sum(k("x",e,t,r),o,u)]}case"All":{let o=k("axis",e,t,r),u=k("keepDims",e,t,r);return[n.all(k("x",e,t,r),o,u)]}case"Any":{let o=k("axis",e,t,r),u=k("keepDims",e,t,r);return[n.any(k("x",e,t,r),o,u)]}case"ArgMax":{let o=k("axis",e,t,r);return[n.argMax(k("x",e,t,r),o)]}case"ArgMin":{let o=k("axis",e,t,r);return[n.argMin(k("x",e,t,r),o)]}case"Prod":{let o=k("axis",e,t,r),u=k("keepDims",e,t,r);return[n.prod(k("x",e,t,r),o,u)]}case"Cumprod":{let o=k("axis",e,t,r),u=k("exclusive",e,t,r),p=k("reverse",e,t,r);return[n.cumprod(k("x",e,t,r),o,u,p)]}case"Cumsum":{let o=k("axis",e,t,r),u=k("exclusive",e,t,r),p=k("reverse",e,t,r);return[n.cumsum(k("x",e,t,r),o,u,p)]}case"Bincount":let a=k("x",e,t,r),s=k("weights",e,t,r),i=k("size",e,t,r);return[n.bincount(a,s,i)];case"DenseBincount":{let o=k("x",e,t,r),u=k("weights",e,t,r),p=k("size",e,t,r),l=k("binaryOutput",e,t,r);return[n.denseBincount(o,u,p,l)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},OV=(e,t,r,n=jt)=>{switch(e.op){case"ConcatV2":case"Concat":{let a=k("n",e,t,r),s=k("axis",e,t,r),i=k("tensors",e,t,r);return i=i.slice(0,a),[n.concat(i,s)]}case"Gather":{let a=k("x",e,t,r),s=k("indices",e,t,r);return[n.gather(a,n.cast(s,"int32"),0)]}case"GatherV2":{let a=k("axis",e,t,r),s=k("batchDims",e,t,r),i=k("x",e,t,r),o=k("indices",e,t,r);return[n.gather(i,n.cast(o,"int32"),a,s)]}case"Reverse":{let a=k("dims",e,t,r),s=[];for(let o=0;o<a.length;o++)a[o]&&s.push(o);let i=k("x",e,t,r);return[n.reverse(i,s)]}case"ReverseV2":{let a=k("axis",e,t,r),s=k("x",e,t,r);return[n.reverse(s,a)]}case"Slice":{let a=k("begin",e,t,r),s=k("size",e,t,r);return[n.slice(k("x",e,t,r),a,s)]}case"StridedSlice":{let a=k("begin",e,t,r),s=k("end",e,t,r),i=k("strides",e,t,r),o=k("beginMask",e,t,r),u=k("endMask",e,t,r),p=k("ellipsisMask",e,t,r),l=k("newAxisMask",e,t,r),d=k("shrinkAxisMask",e,t,r),h=k("x",e,t,r);return[n.stridedSlice(h,a,s,i,o,u,p,l,d)]}case"Pack":return W(()=>{let a=k("axis",e,t,r),s=k("tensors",e,t,r),i=s[0].shape,o=n.squeeze(s[0]).shape,u=s.map(p=>{let l=w.arraysEqual(p.shape,i);if(!l&&!w.arraysEqual(n.squeeze(p).shape,o))throw new Error("the input tensors shape does not match");return l?p:n.reshape(p,i)});return[n.stack(u,a)]});case"Unpack":{let a=k("axis",e,t,r),s=k("tensor",e,t,r);return n.unstack(s,a)}case"Tile":{let a=k("reps",e,t,r);return[n.tile(k("x",e,t,r),a)]}case"Split":case"SplitV":{let a=k("axis",e,t,r),s=k("numOrSizeSplits",e,t,r),i=k("x",e,t,r);return n.split(i,s,a)}case"ScatterNd":{let a=k("indices",e,t,r),s=k("values",e,t,r),i=k("shape",e,t,r);return[n.scatterND(a,s,i)]}case"GatherNd":{let a=k("x",e,t,r),s=k("indices",e,t,r);return[n.gatherND(a,s)]}case"SparseToDense":{let a=k("sparseIndices",e,t,r),s=k("outputShape",e,t,r),i=k("sparseValues",e,t,r),o=k("defaultValue",e,t,r);return[n.sparseToDense(a,i,s,i.dtype===o.dtype?o:n.cast(o,i.dtype))]}case"TensorScatterUpdate":{let a=k("indices",e,t,r),s=k("values",e,t,r),i=k("tensor",e,t,r);return[n.tensorScatterUpdate(i,a,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},zV=(e,t,r,n=jt)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:a,outputValues:s,emptyRowIndicator:i,reverseIndexMap:o}=n.sparse.sparseFillEmptyRows(k("indices",e,t,r),k("values",e,t,r),k("denseShape",e,t,r),k("defaultValue",e,t,r));return[a,s,i,o]}case"SparseReshape":{let{outputIndices:a,outputShape:s}=n.sparse.sparseReshape(k("inputIndices",e,t,r),k("inputShape",e,t,r),k("newShape",e,t,r));return[a,s]}case"SparseSegmentMean":return[n.sparse.sparseSegmentMean(k("data",e,t,r),k("indices",e,t,r),k("segmentIds",e,t,r))];case"SparseSegmentSum":return[n.sparse.sparseSegmentSum(k("data",e,t,r),k("indices",e,t,r),k("segmentIds",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},LV=(e,t,r,n=jt)=>{switch(e.op){case"FFT":return[n.fft(k("x",e,t,r))];case"IFFT":return[n.ifft(k("x",e,t,r))];case"RFFT":return[n.rfft(k("x",e,t,r))];case"IRFFT":return[n.irfft(k("x",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},PV=(e,t,r,n=jt)=>{switch(e.op){case"StaticRegexReplace":return[n.string.staticRegexReplace(k("input",e,t,r),k("pattern",e,t,r),k("rewrite",e,t,r),k("replaceGlobal",e,t,r))];case"StringNGrams":{let{nGrams:a,nGramsSplits:s}=n.string.stringNGrams(k("data",e,t,r),k("dataSplits",e,t,r),k("separator",e,t,r),k("nGramWidths",e,t,r),k("leftPad",e,t,r),k("rightPad",e,t,r),k("padWidth",e,t,r),k("preserveShortSequences",e,t,r));return[a,s]}case"StringSplit":{let{indices:a,values:s,shape:i}=n.string.stringSplit(k("input",e,t,r),k("delimiter",e,t,r),k("skipEmpty",e,t,r));return[a,s,i]}case"StringToHashBucketFast":return[n.string.stringToHashBucketFast(k("input",e,t,r),k("numBuckets",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},BV=(e,t,r,n=jt)=>{switch(e.op){case"Cast":return[n.cast(k("x",e,t,r),k("dtype",e,t,r))];case"ExpandDims":{let a=k("axis",e,t,r);return[n.expandDims(k("x",e,t,r),a)]}case"Squeeze":{let a=k("axis",e,t,r);return[n.squeeze(k("x",e,t,r),a)]}case"Reshape":return[n.reshape(k("x",e,t,r),k("shape",e,t,r))];case"MirrorPad":return[n.mirrorPad(k("x",e,t,r),k("padding",e,t,r),k("mode",e,t,r))];case"PadV2":case"Pad":return[n.pad(k("x",e,t,r),k("padding",e,t,r),k("constantValue",e,t,r))];case"SpaceToBatchND":{let a=k("blockShape",e,t,r),s=k("paddings",e,t,r);return[n.spaceToBatchND(k("x",e,t,r),a,s)]}case"BatchToSpaceND":{let a=k("blockShape",e,t,r),s=k("crops",e,t,r);return[n.batchToSpaceND(k("x",e,t,r),a,s)]}case"DepthToSpace":{let a=k("blockSize",e,t,r),s=k("dataFormat",e,t,r).toUpperCase();return[n.depthToSpace(k("x",e,t,r),a,s)]}case"BroadcastTo":return[n.broadcastTo(k("x",e,t,r),k("shape",e,t,r))];case"BroadcastArgs":return[n.broadcastArgs(k("s0",e,t,r),k("s1",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function ev(e,t,r,n,a=W){let s=((i,o,u)=>{switch(i.category){case"arithmetic":return a(()=>mV(i,o,u));case"basic_math":return a(()=>gV(i,o,u));case"control":return kV(i,o,u);case"convolution":return a(()=>IV(i,o,u));case"creation":return a(()=>SV(i,o,u));case"dynamic":return NV(i,o,u);case"evaluation":return a(()=>TV(i,o,u));case"image":return a(()=>$V(i,o,u));case"graph":return a(()=>CV(i,o,u));case"logical":return a(()=>AV(i,o,u));case"matrices":return a(()=>FV(i,o,u));case"normalization":return a(()=>RV(i,o,u));case"ragged":return a(()=>DV(i,o,u));case"reduction":return a(()=>MV(i,o,u));case"slice_join":return a(()=>OV(i,o,u));case"sparse":return a(()=>zV(i,o,u));case"spectral":return a(()=>LV(i,o,u));case"string":return a(()=>PV(i,o,u));case"transformation":return a(()=>BV(i,o,u));case"hash_table":return EV(i,o,u,n);case"custom":let p=_I(i.op);if(p&&p.customExecutor)return p.customExecutor(new fV(i,o,u));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,r);return w.isPromise(s)?s.then(i=>[].concat(i)):[].concat(s)}var tv=class{constructor(e={},t={},r={},n={},a){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=r,this.functionMap=n,this.parseNodeNameCache=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let r=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(r))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function rv(e,t,r,n){let a=new Set,s=[],i=null,o=null,u=new Set,p=new Set(Object.keys(e).map(h=>Or(h)[0]));n=n||[];let l=new Set(n.map(h=>Or(h.name)[0])),d=[...t];for(;d.length>0;){let h=d.pop();if((So(h)||KV(h)||XV(h))&&i==null&&(i=h,o=i.children.map(c=>c.name).filter(c=>a.has(c))),a.add(h.name),r[h.name]==null&&!p.has(h.name)&&!l.has(h.name)){if(h.inputs.length===0){s.push(h.name);continue}h.inputs.forEach(c=>{u.has(c.name)||(u.add(c.name),d.push(c))})}}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}function WV(e,t){let{usedNodes:r,inputs:n}=t,a=Object.keys(n).map(g=>Or(g)[0]).map(g=>e.nodes[g]),s=e.initNodes||[],i=g=>r.has(typeof g=="string"?g:g.name);function o(g){return[...new Map(g.map(y=>[y.name,y])).values()]}let u=o([...a,...e.weights,...s]).filter(i),p=o([...u,...Object.values(e.nodes)]).filter(i),l=new Map(p.map(g=>[g.name,g])),d={};for(let g of p){d[g.name]=d[g.name]||0;for(let y of g.children)i(y)||(d[y.name]=Number.POSITIVE_INFINITY),d[y.name]=(d[y.name]||0)+1}let h=Object.entries(d).filter(([,g])=>g===0).map(([g])=>g),c=[...h];for(;h.length>0;){let g=h.pop(),y=l.get(g);for(let b of y.children.filter(i))--d[b.name]===0&&(c.push(b.name),h.push(b.name))}let f=c.map(g=>l.get(g)),m=VV(f,u);return UV(m,u),m}function VV(e,t){let r=new Map(e.map(s=>[s.name,s])),n=t.map(s=>s.name),a=new Set(n);for(;n.length>0;){let s=n.pop(),i=r.get(s);for(let o of i.children)!r.has(o.name)||a.has(o.name)||(a.add(o.name),n.push(o.name))}return e.filter(s=>a.has(s.name))}var zd=class extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}};function UV(e,t){let r=new Map(e.map((o,u)=>[o.name,u])),n=new Set(t.map(o=>o.name)),a=o=>n.has(typeof o=="string"?o:o.name),s=new Set(e.map(o=>o.name)),i=o=>s.has(typeof o=="string"?o:o.name);for(let o of e){for(let u of o.children.filter(i)){if(!r.has(u.name))throw new zd(`Child ${u.name} of node ${o.name} is unreachable.`);if(r.get(o.name)>r.get(u.name))throw new zd(`Node ${o.name} is scheduled to run after its child ${u.name}.`)}if(!a(o))for(let u of o.inputs){if(!r.has(u.name))throw new zd(`Input ${u.name} of node ${o.name} is unreachable.`);if(r.get(u.name)>r.get(o.name))throw new zd(`Node ${o.name} is scheduled to run before its input ${u.name}.`)}}}function GV(e){let t=new Map(e.map((o,u)=>[o.name,u])),r=Number.MAX_SAFE_INTEGER,n=e.map((o,u)=>So(o)?r:u),a=o=>{let u=n[t.get(o.name)];return u==null?-1:u},s=e.map((o,u)=>o.children.map(a).reduce((p,l)=>Math.max(p,l),n[u])),i=new Map;for(let o=0;o<e.length;++o){let u=s[o];if(u===r)continue;let p=e[o],l=e[u];i.has(l.name)||i.set(l.name,[]),i.get(l.name).push(p.name)}return i}var HV=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),jV=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),qV=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function So(e){return HV.has(e.op)}function KV(e){return jV.has(e.op)}function XV(e){return qV.has(e.op)}var vm=class{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(r=>e[r].map(n=>n.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(r=>{this._functionExecutorMap[r]=new vm(e.functions[r],this)})}getCompilationKey(e,t){let r=e.map(a=>a.name).sort(),n=t.map(a=>a.name).sort();return r.join(this.SEPARATOR)+"--"+n.join(this.SEPARATOR)}compile(e,t){let r=rv(e,t,this.weightMap,this._initNodes),{missingInputs:n,dynamicNode:a,syncInputs:s}=r;if(a!=null)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(n.length>0){let u=t.map(l=>l.name),p=Object.keys(e);throw new Error(`Cannot compute the outputs [${u}] from the provided inputs [${p}]. Missing the following inputs: [${n}]`)}let i=WV(this.graph,r),o=GV(i);return{orderedNodes:i,nodeLiveUntilMap:o}}cloneAndKeepTensor(e){if(e==null)return null;let t=e.clone();return Dt(t),t}cloneTensorList(e){return e?e.map(t=>this.cloneAndKeepTensor(t)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([t,r])=>[t,this.cloneTensorList(r)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);let r=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let n=r.map(d=>this.graph.nodes[Or(d)[0]]),a=t.map(d=>Or(d)[0]),s=new Set(a),i=a.map(d=>this.graph.nodes[d]);i.length===0&&(i=this._outputs);let o=this.getCompilationKey(n,i),u=this.compiledMap.get(o);u==null&&(u=this.compile(e,i),this.compiledMap.set(o,u));try{this.keepIntermediateTensors=H().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}let p={},l={};return W(()=>{let d=new tv(this.weightMap,p,l,this.functionExecutorMap,this.parseNodeNameCache),h=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(g=>{let[y,b]=Or(g,d),x=[];x[b]=e[g],h[y]=x,this.keepIntermediateTensors&&(this.clonedTensorsMap[y]=this.cloneTensorList(x))});let c=this.getFrozenTensorIds(h),{orderedNodes:f,nodeLiveUntilMap:m}=u;for(let g of f){if(h[g.name])continue;let y=ev(g,h,d,this._resourceManager);if(w.isPromise(y))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);h[g.name]=y,this.keepIntermediateTensors&&(this.clonedTensorsMap[g.name]=this.cloneTensorList(y)),this.checkTensorForDisposalWithNodeLiveUntilInfo(g,h,d,c,s,m.get(g.name))}return this.parent==null&&d.dispose(c),t.map(g=>er(g,h,d))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(r=>e[r]).map(r=>r.map(n=>n.id)));return new Set(t)}checkTensorForDisposal(e,t,r,n,a,s,i){if(!(So(t)||s.has(e))){for(let o of r[e])o!=null&&(i[o.id]=(i[o.id]||0)+t.children.length);for(let o of t.inputs){if(So(o))continue;let u=Xw(o.name,r,n);if(u!=null)for(let p of u){if(!p||p.kept||a.has(p.id))continue;let l=i[p.id];l===1?(p.dispose(),delete i[p.id]):l!=null&&i[p.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,r,n,a,s){if(!(So(e)||a.has(e.name))&&s!=null)for(let i of s){let o=Xw(i,t,r);for(let u of o)!u||u.kept||n.has(u.id)||u.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(let t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,r=!1,n={},a={}){this.disposeIntermediateTensors(),r||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=H().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}let s=new tv(this.weightMap,n,a,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));let i=await this.executeWithControlFlow(e,s,t,r),o=t.map(d=>er(d,i,s)),u=o.map(d=>d.id),p=Object.keys(e).map(d=>e[d].id),l=new Set([...u,...p,...this.weightIds]);return Object.values(i).forEach(d=>{d.forEach(h=>{h&&!h.isDisposed&&!l.has(h.id)&&h.dispose()})}),this.parent==null&&s.dispose(l),o}async executeFunctionAsync(e,t,r){let n=e.reduce((a,s,i)=>(a[this.inputs[i].name]=s,a),{});return this._executeAsync(n,this.outputNodes,!0,t,r)}async executeWithControlFlow(e,t,r,n){let a=Object.keys(e),s=a.map(x=>this.graph.nodes[Or(x)[0]]),i=r.map(x=>Or(x)[0]),o=new Set(i),u=i.map(x=>this.graph.nodes[x]);u.length===0&&(u=this._outputs);let{usedNodes:p,missingInputs:l,dynamicNode:d,syncInputs:h}=rv(e,u,this.weightMap,this._initNodes),c=[...s,...this.graph.weights,...this._initNodes||[]].map(x=>({node:x,contexts:t.currentContext})),f=Object.assign({},this.weightMap);Object.keys(e).forEach(x=>{let[v,I]=Or(x),T=[];T[I]=e[x],f[v]=T});let m={},g=this.getFrozenTensorIds(f),y={};for(;c.length>0;){let x=this.processStack(s,c,t,f,y,g,o,m,p);await Promise.all(x)}d==null&&!n&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let b=u.filter(x=>!So(x)&&!er(x.name,f,t)).map(x=>x.name);if(b.length>0){let x="";throw d!=null&&(x=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${a}]. Consider providing the following inputs: [${l}]. ${x}`)}return f}processStack(e,t,r,n,a,s,i,o,u){let p=[];for(;t.length>0;){let l=t.pop();r.currentContext=l.contexts;let d="";if(l.node.op==="Enter"&&k("isConstant",l.node,n,r)&&([d]=ta(l.node.name,r)),n[l.node.name]==null){let h=ev(l.node,n,r,this._resourceManager);d||([d]=ta(l.node.name,r));let c=r.currentContext;w.isPromise(h)?p.push(h.then(f=>(n[d]=f,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(f)),r.currentContext=c,this.checkTensorForDisposal(d,l.node,n,r,s,i,o),this.processChildNodes(l.node,t,r,n,a,u),f))):(n[d]=h,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(h)),this.checkTensorForDisposal(d,l.node,n,r,s,i,o),this.processChildNodes(l.node,t,r,n,a,u))}else this.processChildNodes(l.node,t,r,n,a,u)}return p}processChildNodes(e,t,r,n,a,s){e.children.forEach(i=>{let[o]=ta(i.name,r);a[o]||!s.has(i.name)||(i.op==="Merge"?i.inputNames.some(u=>!!er(u,n,r))&&(a[o]=!0,t.push({contexts:r.currentContext,node:i})):i.inputNames.every(u=>!!er(u,n,r))&&(a[o]=!0,t.push({contexts:r.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let r=e[t],[n]=Or(t),a=this.graph.nodes[n];if(a.attrParams.shape&&a.attrParams.shape.value){let s=a.attrParams.shape.value,i=s.length===r.shape.length&&r.shape.every((o,u)=>s[u]===-1||s[u]===o);w.assert(i,()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${s}], but was [${r.shape}]`)}a.attrParams.dtype&&a.attrParams.dtype.value&&w.assert(r.dtype===a.attrParams.dtype.value,()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${r.dtype}`)})}mapInputs(e){var t,r;let n={};for(let a in e){let s=(r=(t=this._signature)===null||t===void 0?void 0:t.inputs)===null||r===void 0?void 0:r[a];s!=null?n[s.name]=e[a]:n[a]=e[a]}return n}checkInputs(e){let t=Object.keys(e).filter(r=>{let[n]=Or(r);return this.graph.nodes[n]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>{var r,n;let a=(n=(r=this._signature)===null||r===void 0?void 0:r.outputs)===null||n===void 0?void 0:n[t];return a!=null?a.name:t},{})}checkOutputs(e){e.forEach(t=>{let[r]=Or(t);if(!this.graph.nodes[r])throw new Error(`The output '${t}' is not found in the graph`)})}},ZV=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},JV="?tfjs-format=file",YV="model.json",Xb=class{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},r=rr){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=r,t==null&&(this.loadOptions={}),this.resourceManager=new ZV}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return w.isPromise(e)?e.then(t=>this.loadSync(t)):this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,r=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){let a=this.artifacts.userDefinedMetadata;a.signature!=null&&(r=a.signature),a.structuredOutputKeys!=null&&(this.structuredOutputKeys=a.structuredOutputKeys)}this.signature=r,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let n=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new vm(Zw.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(n),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let a=Zw.Instance.transformGraph(e.modelInitializer);this.initializer=new vm(a),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){let r=this.io.getSaveHandlers(e);if(r.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(r.length>1)throw new Error(`Found more than one (${r.length}) save handlers for URL '${e}'`);e=r[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){let t=e instanceof Ue?[e]:e,r={};return t.forEach((n,a)=>r[this.structuredOutputKeys[a]]=n),r}return e}predict(e,t){let r=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(r)}async predictAsync(e,t){let r=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(r)}normalizeInputs(e){var t;if(!(e instanceof Ue)&&!Array.isArray(e)){let a=(t=this.signature)===null||t===void 0?void 0:t.inputs;if(a!=null)for(let s in a){let i=a[s];i.resourceId!=null&&(e[s]=this.resourceIdToCapturedInput[i.resourceId])}return e}e=Array.isArray(e)?e:[e];let r=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+r!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-r} non-resource placeholders, while there are ${e.length} input tensors provided.`);let n=0;return this.inputNodes.reduce((a,s)=>{var i,o,u;let p=(u=(o=(i=this.signature)===null||i===void 0?void 0:i.inputs)===null||o===void 0?void 0:o[s])===null||u===void 0?void 0:u.resourceId;return p!=null?a[s]=this.resourceIdToCapturedInput[p]:a[s]=e[n++],a},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){let t=this.initializerSignature.outputs,r=Object.keys(t);for(let n=0;n<r.length;n++){let a=r[n],s=t[a];this.resourceIdToCapturedInput[s.resourceId]=e[n]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let r=this.executor.execute(e,t);return r.length>1?r:r[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let r=await this.executor.executeAsync(e,t);return r.length>1?r:r[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,r)=>(t[r]=[e[r]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&_e(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}};async function QV(e,t={},r=rr){if(e==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&typeof e=="string"&&(e=tU(e));let n=new Xb(e,t,r);return await n.load(),n}function eU(e){if(e==null)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){let[n,a]=e;if(!n)throw new Error("modelJSON must be the first element of the array");if(!a||!(a instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");let s=rr.getWeightSpecs(n.weightsManifest),i=rr.getModelArtifactsForJSONSync(n,s,a);t=rr.fromMemorySync(i)}else if("load"in e)t=e;else if("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e)t=rr.fromMemorySync(e);else throw new Error("Unknown model format");let r=new Xb(t);return r.load(),r}function tU(e){return e.endsWith("/")||(e=e+"/"),`${e}${YV}${JV}`}var rU="4.3.0",ZI={};Ee(ZI,{CSVDataset:()=>sS,Dataset:()=>cu,FileDataSource:()=>hS,TextLineDataset:()=>aS,URLDataSource:()=>cS,array:()=>NU,csv:()=>OU,func:()=>zU,generator:()=>LU,microphone:()=>BU,version_data:()=>WU,webcam:()=>PU,zip:()=>TU});var nU=Va(Dh()),aU=Va(Dh());function sU(e,t){return vh(e,t)}function vh(e,t,r=new Map,n=new Set){if(e==null)return null;if(typeof Blob=="function"&&e instanceof Blob)return e.slice();if(n.has(e))throw new Error("Circular references are not supported.");if(r.has(e))return r.get(e);let a=t(e);if(a.recurse&&a.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse)if(Ho(e)){let s=Array.isArray(e)?[]:{};n.add(e);for(let i in e){let o=e[i],u=vh(o,t,r,n);s[i]=u}return n.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}else throw new Error(`Can't recurse into non-iterable type: ${e}`);else return r.set(e,a.value),a.value}function iU(e,t=YI){return JI(e,t)}function JI(e,t,r=new Set){let n=e[0];if(r.has(n))throw new Error("Circular references are not supported.");let a=t(e);if(a.recurse&&a.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse)if(Ho(n)){let s=Array.isArray(n)?[]:{};r.add(n);for(let i in n){let o=e.map(p=>p[i]),u=JI(o,t,r);s[i]=u}return r.delete(n),s}else throw new Error(`Can't recurse into non-iterable type: ${n}`);else return a.value}function YI(e){return e===null?null:Ho(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function QI(e,t){let r=new Map;vh(e,t,r);for(let n of Array.from(r.keys())){let a=r.get(n);if(w.isPromise(a)){let s=await a;r.set(n,s)}}return vh(e,t,r)}function Ho(e){let t=!1;if(H().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:r}=Uv();t=e instanceof r}return e!=null&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||typeof e=="object"&&!(e instanceof Ue)&&!(e instanceof Promise)&&!t)}function oU(e){return e==null||lU(e)||Array.isArray(e)||typeof e=="object"&&e instanceof Ue||w.isTypedArray(e)}function lU(e){return e===null||typeof e!="object"&&typeof e!="function"}function uU(e){return sU(e,pU)}function pU(e){return e instanceof Ue?{value:e.clone(),recurse:!1}:Ho(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var eS=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),r=this.get(t);return this.set(t,this.pop()),r}},Zb=class extends eS{constructor(){super(Zb.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),r=this.length();for(let n=0;n<r;n++)t[n]=this.get(this.wrap(this.begin+n));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=r}};Zb.INITIAL_CAPACITY=32;function tS(e){return new cU(e)}function Jb(e){return new fU(e)}function dU(e,t){return new rS(e,t)}function hU(e,t=Ta.FAIL){return new IU(e,t)}var Ht=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],r=await e.next();for(;!r.done;)t.push(r.value),r=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),r=e(t.value);for(;!t.done&&r;)t=await this.next(),r=e(t.value)}handleErrors(e){return new vU(this,e)}filter(e){return new xU(this,e)}map(e){return new wU(this,e)}mapAsync(e){return new nv(this,e)}serialMapAsync(e){return new nv(this,e).serial()}flatmap(e){return new kU(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new bU(this,e,t)}columnMajorBatch(e,t=!0,r=YI){return this.rowMajorBatch(e,t).map(n=>iU(n,r))}concatenate(e,t){return new rS(tS([this,e]),t)}take(e){return e<0||e==null?this:new yU(this,e)}skip(e){return e<0||e==null?this:new gU(this,e)}prefetch(e){return new nS(this,e)}shuffle(e,t){return new SU(this,e,t)}serial(){return new mU(this)}},cU=class extends Ht{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:uU(e),done:!1}}},fU=class extends Ht{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},mU=class extends Ht{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},gU=class extends Ht{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;_e(e.value)}return this.upstream.next()}},yU=class extends Ht{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},bU=class extends Ht{constructor(e,t,r=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=r,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},xU=class extends Ht{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;_e(e.value)}}},wU=class extends Ht{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=kn.getTensorsInContainer(e.value),r=this.transform(e.value),n=kn.getTensorsInContainer(r);for(let a of t)kn.isTensorInList(a,n)||a.dispose();return{value:r,done:!1}}},vU=class extends Ht{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},nv=class extends Ht{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=kn.getTensorsInContainer(e.value),r=await this.transform(e.value),n=kn.getTensorsInContainer(r);for(let a of t)kn.isTensorInList(a,n)||a.dispose();return{value:r,done:!1}}},Yb=class extends Ht{constructor(){super(),this.outputQueue=new Zb,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},kU=class extends Yb{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=kn.getTensorsInContainer(e.value),r=this.transform(e.value),n=kn.getTensorsInContainer(r);this.outputQueue.pushAll(r);for(let a of t)kn.isTensorInList(a,n)||a.dispose();return!0}},rS=class extends Ht{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let r=await this.moreIterators.next();if(r.done)return{value:null,done:!0};this.iterator=r.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},Ta;(function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"})(Ta||(Ta={}));var IU=class extends Ht{constructor(e,t=Ta.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,r=0;function n(s){return s instanceof Ht?{value:s.next().then(i=>(t++,i.done&&r++,i.value)),recurse:!1}:{value:null,recurse:!0}}let a=await QI(this.iterators,n);if(t===r)return{value:null,done:!0};if(r>0)switch(this.mismatchMode){case Ta.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case Ta.SHORTEST:return{value:null,done:!0};case Ta.LONGEST:}return this.count++,{value:a,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},nS=class extends Ht{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new eS(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},SU=class extends nS{constructor(e,t,r){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=aU.alea(r||w.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}},cu=class{constructor(){this.size=null}batch(e,t=!0){let r=this;w.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let n;return this.size===1/0||this.size==null?n=this.size:t?n=Math.ceil(this.size/e):n=Math.floor(this.size/e),Mr(async()=>(await r.iterator()).columnMajorBatch(e,t,CU),n)}concatenate(e){let t=this,r;return this.size===1/0||e.size===1/0?r=1/0:this.size!=null&&e.size!=null?r=this.size+e.size:r=null,Mr(async()=>(await t.iterator()).concatenate(await e.iterator()),r)}filter(e){let t=this,r;return this.size===1/0?r=1/0:r=null,Mr(async()=>(await t.iterator()).filter(n=>W(()=>e(n))),r)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return Mr(async()=>(await t.iterator()).map(r=>W(()=>e(r))),this.size)}mapAsync(e){let t=this;return Mr(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return Mr(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,r;return this.size!=null&&e>0?r=this.size*e:e===0?r=0:this.size!=null&&(e===void 0||e<0)?r=1/0:r=null,Mr(async()=>{let n=Jb(async()=>({value:await t.iterator(),done:!1}));return dU(n.take(e))},r)}skip(e){let t=this,r;return this.size!=null&&e>=0&&this.size>=e?r=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?r=0:r=null,Mr(async()=>(await t.iterator()).skip(e),r)}shuffle(e,t,r=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let n=this,a=nU.alea(t||w.now().toString());return Mr(async()=>{let s=a.int32();return r&&(s+=a.int32()),(await n.iterator()).shuffle(e,s.toString())},this.size)}take(e){let t=this,r;return this.size!=null&&this.size>e?r=e:this.size!=null&&this.size<=e?r=this.size:r=null,Mr(async()=>(await t.iterator()).take(e),r)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};cu.MAX_BUFFER_SIZE=1e4;function Mr(e,t=null){return new class extends cu{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function NU(e){return Mr(async()=>tS(e),e.length)}function TU(e){if(!Ho(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let r=0;r<e.length;r++)t=t==null?e[r].size:Math.min(t,e[r].size);else if(e instanceof Object)for(let r in e)t=t==null?e[r].size:Math.min(t,e[r].size);return Mr(async()=>{let r=await QI(e,n=>{if(n instanceof cu)return{value:n.iterator(),recurse:!1};if(Ho(n))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return hU(r,Ta.SHORTEST)},t)}function CU(e){if(e===null)return null;let t=e[0];return oU(t)?{value:_U(e),recurse:!1}:{value:null,recurse:!0}}function _U(e){if(e.length===0)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Ue?Ot(e):hr(e)}var aS=class extends cu{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e))}},Ld='"',Au=Symbol("out"),av=Symbol("field"),Pd=Symbol("quote"),Ff=Symbol("quoteafterquote"),sv=Symbol("quoteinquote"),sS=class extends cu{async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&w.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((n,a)=>(n[a]=n[a]+1||1,n),{}),r=Object.keys(t).filter(n=>t[n]>1);if(w.assert(r.length===0,()=>"Duplicate column names found: "+r.toString()),this.columnConfigs){for(let n of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(n)===-1)throw new Error('The key "'+n+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let e=await(await this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");let t=e.value;return this.parseRow(t,!1)}else return null}constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new aS(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(w.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),r={},n={};for(let a=0;a<this.fullColumnNames.length;a++){let s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!(this.configuredColumnsOnly&&!i)){let o=t[a],u=null;if(o==="")if(i&&i.default!==void 0)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);u=void 0}else{let p=Number(o);if(isNaN(p))i&&i.dtype==="bool"?u=this.getBoolean(o):u=o;else if(!i||!i.dtype)u=p;else switch(i.dtype){case"float32":u=p;break;case"int32":u=Math.floor(p);break;case"bool":u=this.getBoolean(o);break;default:u=p}}i&&i.isLabel?n[s]=u:r[s]=u}}return Object.keys(n).length===0?r:{xs:r,ys:n}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let r=[],n=0,a=e.length,s=Au;for(let i=0;i<a;i++)switch(s){case Au:switch(e.charAt(i)){case Ld:n=i+1,s=Pd;break;case this.delimiter:if(n=i+1,this.delimiter===" "&&this.delimWhitespace)break;r.push(""),s=Au;break;default:s=av,n=i;break}break;case av:switch(e.charAt(i)){case this.delimiter:r.push(e.substring(n,i)),s=Au,n=i+1;break}break;case Pd:switch(e.charAt(i)){case Ld:s=Ff;break}break;case Ff:switch(e.charAt(i)){case this.delimiter:r.push(e.substring(n,i-1)),s=Au,n=i+1;break;case Ld:s=Pd;break;default:s=sv;break}break;case sv:switch(e.charAt(i)){case Ld:s=Pd;break}break}if(s===Ff?r.push(e.substring(n,a-1)):r.push(e.substring(n)),t&&r.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${r}`);return r}},iS=class extends Ht{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!H().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let t=new iS(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(r){throw new Error(`Error thrown while initializing video stream: ${r.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,r=await this.getAudioData();if(this.includeSpectrogram){let n=this.flattenQueue(r.freqDataQueue);e=this.getTensorFromAudioDataArray(n,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let n=this.flattenQueue(r.timeDataQueue);t=this.getTensorFromAudioDataArray(n,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],r=0;return new Promise(n=>{let a=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&n({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++r===this.numFrames&&(clearInterval(a),n({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,r=new Float32Array(e.length*t);return e.forEach((n,a)=>r.set(n,a*t)),r}getTensorFromAudioDataArray(e,t){let r=new Float32Array(w.sizeFromShape(t));return r.set(e,r.length-e.length),hr(r,t)}},oS=class extends Ht{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Qe([0],"int32"),this.webcamConfig.centerCrop){let r=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,n=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,a=(1-r)/2,s=(1-n)/2,i=a+r,o=n+s;this.cropBox=Pn([s,a,o,i],[1,4])}else this.cropBox=Pn([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!H().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let r=new oS(e,t);return await r.start(),r}async start(){this.webcamConfig.facingMode&&w.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Mc.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return W(()=>{let t=Qt(se(e,"float32"),0),r;r=xn.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let n=r.shape;return P(r,n.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(e=>e.stop());try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},lS=class{},uS=class extends Ht{split(e){return new EU(this,e)}},EU=class extends uS{constructor(e,t){super(),this.upstream=e,this.impl=new $U(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},$U=class extends Yb{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let r of t.slice(0,-1))this.outputQueue.push(r);return this.carryover=t[t.length-1],!0}},AU=class extends Ht{decodeUTF8(){return new FU(this)}},FU=class extends uS{constructor(e){super(),this.upstream=e,this.impl=new RU(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},RU=class extends Yb{constructor(e){if(super(),this.upstream=e,H().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=Uv();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let r;return H().get("IS_BROWSER")?r=this.decoder.decode(t,{stream:!0}):r=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(r),!0}},pS=class extends AU{constructor(e,t={}){super(),this.file=e,this.options=t,w.assert(e instanceof Uint8Array||(H().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((e,t)=>{let r=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,r)));else{let n=new FileReader;n.onload=s=>{let i=n.result;if(i instanceof ArrayBuffer&&(i=new Uint8Array(i)),!(i instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(i)},n.onabort=s=>t(new Error("Aborted")),n.onerror=s=>t(new Error(s.type));let a=this.file.slice(this.offset,r);n.readAsArrayBuffer(a)}this.offset=r}),done:!1}}};async function DU(e,t={},r){let n,a;typeof e=="string"?n=e:(n=e.url,a=MU(e));let s=await(0,w.fetch)(n,a);if(s.ok){let i=new Uint8Array(await s.arrayBuffer());return new pS(i,t)}else throw new Error(s.statusText)}var MU=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function dS(e){return typeof e=="string"&&e.slice(0,7)==="file://"}var hS=class extends lS{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(dS(this.input)&&H().get("IS_NODE")){let e=Gm();this.input=e.readFileSync(this.input.slice(7))}return new pS(this.input,this.options)}},cS=class extends lS{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return dS(this.url)?new hS(this.url,this.fileOptions).iterator():DU(this.url,this.fileOptions)}};function OU(e,t={}){return new sS(new cS(e),t)}function zU(e){let t=Jb(e);return Mr(async()=>t)}function LU(e){return Mr(async()=>{let t=await e();return Jb(()=>t.next())})}async function PU(e,t){return oS.create(e,t)}async function BU(e){return iS.create(e)}var WU="4.3.0";function ye(e,t){Array.isArray(e)||(e=[e]),e.forEach(r=>{r!=null&&w.assert(r.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var VU=jn.whereImpl,tf=class extends hp{nextDataId(){return tf.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Mh(this,pn())}write(e,t,r){this.firstUse&&(this.firstUse=!1,H().get("IS_NODE")&&N.warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));let n={id:this.nextDataId()};return this.data.set(n,{values:e,dtype:r,refCount:1}),n}makeTensorInfo(e,t,r){let n;if(t==="string"&&r!=null&&r.length>0&&w.isString(r[0])){let a=r.map(s=>w.encodeString(s));n=this.write(a,e,t)}else n=this.write(r,e,t);return{dataId:n,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,r,n,a){this.data.set(e,{values:t,dtype:n,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:r}=this.data.get(e);if(t==="complex64"){let n=this.readSync(r.real.dataId),a=this.readSync(r.imag.dataId);return N.mergeRealAndImagArrays(n,a)}return w.convertBackendValuesAndArrayBuffer(this.data.get(e).values,t)}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let r=t.map(n=>w.decodeString(n));return ze(e.shape,e.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return ze(e.shape,e.dtype,t)}makeOutput(e,t,r){return pn().makeTensorFromTensorInfo(this.makeTensorInfo(t,r,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:r}=this.data.get(e);r!=null&&(this.disposeData(r.real.dataId,!0),this.disposeData(r.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=w.now();return e(),{kernelMs:w.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){ye([e],"where");let t=this.readSync(e.dataId);return VU(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};tf.nextDataId=0;var Qb={};Ee(Qb,{addImpl:()=>gS,bincountImpl:()=>tx,bincountReduceImpl:()=>yS,castImpl:()=>mS,ceilImpl:()=>bS,concatImpl:()=>rx,equalImpl:()=>xS,expImpl:()=>vS,expm1Impl:()=>IS,floorDivImpl:()=>NS,floorImpl:()=>SS,gatherNdImpl:()=>TS,gatherV2Impl:()=>CS,greaterEqualImpl:()=>ES,greaterImpl:()=>_S,lessEqualImpl:()=>AS,lessImpl:()=>$S,linSpaceImpl:()=>FS,logImpl:()=>RS,maxImpl:()=>DS,maximumImpl:()=>MS,minimumImpl:()=>OS,multiplyImpl:()=>nx,negImpl:()=>zS,notEqualImpl:()=>LS,prodImpl:()=>PS,raggedGatherImpl:()=>BS,raggedRangeImpl:()=>WS,raggedTensorToTensorImpl:()=>VS,rangeImpl:()=>sx,rsqrtImpl:()=>US,scatterImpl:()=>ys,sigmoidImpl:()=>LG,simpleAbsImpl:()=>fS,sliceImpl:()=>Ih,sparseFillEmptyRowsImpl:()=>HS,sparseReshapeImpl:()=>jS,sparseSegmentReductionImpl:()=>ix,sqrtImpl:()=>WG,squaredDifferenceImpl:()=>qS,staticRegexReplaceImpl:()=>KS,stridedSliceImpl:()=>XS,stringNGramsImpl:()=>ox,stringSplitImpl:()=>lx,stringToHashBucketFastImpl:()=>ux,subImpl:()=>ZS,tileImpl:()=>JS,topKImpl:()=>QS,transposeImpl:()=>ax,uniqueImpl:()=>dx});function fS(e){let t=new Float32Array(e.length);for(let r=0;r<e.length;++r)t[r]=Math.abs(e[r]);return t}var UU=e=>{let{x:t}=e.inputs,r=e.backend;ye(t,"abs");let n=new Float32Array(w.sizeFromShape(t.shape)),a=r.data.get(t.dataId).values;return n=fS(a),r.makeOutput(n,t.shape,t.dtype)},GU={kernelName:Qo,backendName:"cpu",kernelFunc:UU};function Rt(e){return(t,r,n,a,s)=>{let i=N.assertAndGetBroadcastShape(t,r),o=i.length,u=w.computeStrides(i),p=w.sizeFromShape(i),l=w.getTypedArrayFromDType(s,p),d=t.length,h=r.length,c=w.computeStrides(t),f=w.computeStrides(r),m=N.getBroadcastDims(t,i),g=N.getBroadcastDims(r,i);if(m.length+g.length===0)for(let y=0;y<l.length;++y)l[y]=e(n[y%n.length],a[y%a.length]);else for(let y=0;y<l.length;++y){let b=w.indexToLoc(y,o,u),x=b.slice(-d);m.forEach(_=>x[_]=0);let v=w.locToIndex(x,d,c),I=b.slice(-h);g.forEach(_=>I[_]=0);let T=w.locToIndex(I,h,f);l[y]=e(n[v],a[T])}return[l,i]}}function zr(e){let{inputs:t,backend:r}=e,{real:n,imag:a}=t,s=r.data.get(n.dataId).values,i=r.data.get(a.dataId).values,o=r.makeTensorInfo(n.shape,"complex64"),u=r.data.get(o.dataId);return u.complexTensorInfos={real:r.makeTensorInfo(n.shape,"float32",s),imag:r.makeTensorInfo(a.shape,"float32",i)},o}var HU={kernelName:Ph,backendName:"cpu",kernelFunc:zr};function kh(e,t,r="float32"){if(r==="complex64"){let a=kh(e,t,"float32"),s=kh(e,t,"float32");return zr({inputs:{real:a,imag:s},backend:e})}let n=w.makeZerosTypedArray(w.sizeFromShape(t),r);return e.makeTensorInfo(t,r,n)}function Un(e){let{inputs:t,backend:r}=e,{x:n}=t;return r.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var jU={kernelName:gi,backendName:"cpu",kernelFunc:Un};function Os(e){let{inputs:t,backend:r}=e,{input:n}=t,a=r.data.get(n.dataId).complexTensorInfos.real,s=r.data.get(a.dataId).values;return r.makeTensorInfo(a.shape,a.dtype,s)}var qU={kernelName:Yh,backendName:"cpu",kernelFunc:Os};function mS(e,t,r,n){if(n==="int32"){let a=Int32Array.from(e);return[t,"int32",a]}if(n==="bool"){let a=w.toTypedArray([0],r),[s,i]=Rt((o,u)=>o!==u?1:0)(t,[],e,a,"bool");return[i,"bool",s]}throw new Error(`Error in Cast: failed to cast ${r} to ${n}`)}function Ba(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{dtype:s}=n;if(s==="complex64"){if(a.dtype==="complex64")return Un({inputs:{x:a},backend:r});let l=kh(r,a.shape,a.dtype),d=Ba({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),h=zr({inputs:{real:d,imag:l},backend:r});return r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(d),h}if(a.dtype==="complex64"){let l=Os({inputs:{input:a},backend:r}),d=Ba({inputs:{x:l},backend:r,attrs:{dtype:s}});return r.disposeIntermediateTensorInfo(l),d}if(!w.hasEncodingLoss(a.dtype,s)){let l=Un({inputs:{x:a},backend:r});return{dataId:l.dataId,shape:l.shape,dtype:s}}let i=r.data.get(a.dataId).values,[o,u,p]=mS(i,a.shape,a.dtype,s);return r.makeTensorInfo(o,u,p)}var KU={kernelName:Ys,backendName:"cpu",kernelFunc:Ba};function qt(e,t,r,n){return r==null?({inputs:a,backend:s})=>{let{a:i,b:o}=a,u=s;ye([i,o],e);let p=u.data.get(i.dataId).values,l=u.data.get(o.dataId).values,d=i.dtype==="string"?N.fromUint8ToStringArray(p):p,h=i.dtype==="string"?N.fromUint8ToStringArray(l):l,c=n||i.dtype,[f,m]=t(i.shape,o.shape,d,h,c);return u.makeTensorInfo(m,c,f)}:({inputs:a,backend:s})=>{let{a:i,b:o}=a,u=s;if(i.dtype==="complex64"||o.dtype==="complex64"){let p=Ba({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),l=u.data.get(p.dataId),d=l.complexTensorInfos.real,h=l.complexTensorInfos.imag,c=u.data.get(d.dataId).values,f=u.data.get(h.dataId).values,m=Ba({inputs:{x:o},backend:u,attrs:{dtype:"complex64"}}),g=u.data.get(m.dataId),y=g.complexTensorInfos.real,b=g.complexTensorInfos.imag,x=u.data.get(y.dataId).values,v=u.data.get(b.dataId).values,[I,T,_]=r(i.shape,o.shape,c,f,x,v),E=u.makeTensorInfo(_,"float32",I),A=u.makeTensorInfo(_,"float32",T),R=zr({inputs:{real:E,imag:A},backend:u});return u.disposeIntermediateTensorInfo(p),u.disposeIntermediateTensorInfo(m),u.disposeIntermediateTensorInfo(E),u.disposeIntermediateTensorInfo(A),R}else{let p=u.data.get(i.dataId).values,l=u.data.get(o.dataId).values,d=n||i.dtype,[h,c]=t(i.shape,o.shape,p,l,d);return u.makeTensorInfo(c,d,h)}}}function ex(e){return(t,r,n,a,s,i)=>{let o=N.assertAndGetBroadcastShape(t,r),u=w.sizeFromShape(o),p=o.length,l=w.computeStrides(o),d=w.getTypedArrayFromDType("float32",u),h=w.getTypedArrayFromDType("float32",u),c=N.getBroadcastDims(t,o),f=N.getBroadcastDims(r,o),m=N.mergeRealAndImagArrays(n,a),g=N.mergeRealAndImagArrays(s,i),y=t.length,b=w.computeStrides(t),x=r.length,v=w.computeStrides(r);if(c.length+f.length===0)for(let I=0;I<d.length;I++){let T=I%m.length,_=I%g.length,E=e(m[T*2],m[T*2+1],g[_*2],g[_*2+1]);d[I]=E.real,h[I]=E.imag}else for(let I=0;I<d.length;I++){let T=w.indexToLoc(I,p,l),_=T.slice(-y);c.forEach(S=>_[S]=0);let E=w.locToIndex(_,y,b),A=T.slice(-x);f.forEach(S=>A[S]=0);let R=w.locToIndex(A,x,v),F=e(m[E*2],m[E*2+1],g[R*2],g[R*2+1]);d[I]=F.real,h[I]=F.imag}return[d,h,o]}}var gS=Rt((e,t)=>e+t),XU=ex((e,t,r,n)=>({real:e+r,imag:t+n})),jo=qt(Ga,gS,XU),ZU={kernelName:Ga,backendName:"cpu",kernelFunc:jo};function tx(e,t,r,n,a){let s=w.sizeFromShape(n),i=w.makeZerosTypedArray(a,r);for(let o=0;o<e.length;o++){let u=e[o];if(u<0)throw new Error("Input x must be non-negative!");u>=a||(s>0?i[u]+=t[o]:i[u]+=1)}return i}function yS(e,t,r,n=!1){let a=e.shape[0],s=e.shape[1],i=ze([a,r],t.dtype);for(let o=0;o<a;o++)for(let u=0;u<s;u++){let p=e.get(o,u);if(p<0)throw new Error("Input x must be non-negative!");p>=r||(n?i.set(1,o,p):t.size>0?i.set(i.get(o,p)+t.get(o,u),o,p):i.set(i.get(o,p)+1,o,p))}return i}function Kn(e){return(t,r,n)=>{let a=w.getArrayFromDType(r,t.length);for(let s=0;s<t.length;++s)a[s]=e(t[s],n);return a}}function tt(e,t,r){let n=Kn(t);return Ya(e,n,r)}function Ya(e,t,r){return({inputs:n,attrs:a,backend:s})=>{let{x:i}=n;ye(i,e);let o=s,u=o.data.get(i.dataId).values,p;if(i.dtype==="string"){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");p=N.fromUint8ToStringArray(u)}else p=u;let l=r||i.dtype,d=t(p,l,a);return o.makeTensorInfo(i.shape,l,d)}}var bS=Kn(e=>Math.ceil(e)),JU=Ya(Qs,bS),YU={kernelName:Qs,backendName:"cpu",kernelFunc:JU};function rx(e,t,r,n){let a=w.getArrayFromDType(r,w.sizeFromShape(t));if(n&&r!=="string"){let s=0;e.forEach(i=>{let o=w.sizeFromShape(i.shape);a.set(i.vals,s),s+=o})}else{let s=0;e.forEach(i=>{let o=r==="string"?N.fromUint8ToStringArray(i.vals):i.vals,u=0;for(let p=0;p<i.shape[0];++p){let l=p*t[1]+s;for(let d=0;d<i.shape[1];++d)a[l+d]=o[u++]}s+=i.shape[1]})}return a}var xS=Rt((e,t)=>e===t?1:0),wS=qt(ml,xS,null,"bool"),QU={kernelName:ml,backendName:"cpu",kernelFunc:wS},vS=Kn(e=>Math.exp(e)),kS=Ya(pi,vS,"float32"),eG={kernelName:pi,backendName:"cpu",kernelFunc:kS},IS=Kn(e=>Math.expm1(e)),tG=Ya(di,IS),rG={kernelName:di,backendName:"cpu",kernelFunc:tG},SS=Kn(e=>Math.floor(e)),nG=Ya(hi,SS),aG={kernelName:hi,backendName:"cpu",kernelFunc:nG},NS=Rt((e,t)=>Math.floor(e/t)),sG=qt(ci,NS,null,"int32"),iG={kernelName:ci,backendName:"cpu",kernelFunc:sG};function TS(e,t,r,n,a,s,i,o,u){let p=ze([n,s],r);for(let l=0;l<n;l++){let d=[],h=0;for(let c=0;c<a;c++){let f=e[l*a+c];h+=f*i[c],d.push(f)}if(h<0||h>=u/s)throw new Error(`Invalid indices: ${d} does not index into ${o}`);for(let c=0;c<s;c++)p.values[l*s+c]=t.get(...t.indexToLoc(h*s+c))}return p}function CS(e,t,r){let n=ze(r,e.dtype);for(let a=0;a<n.size;++a){let s=n.indexToLoc(a).slice(),i=s[0],o=s[2],u=t.locToIndex([i,o]);s[2]=t.values[u];let p=e.locToIndex(s);0<=p&&p<e.values.length&&(n.values[a]=e.values[p])}return n}var _S=Rt((e,t)=>e>t?1:0),oG=qt(wl,_S,null,"bool"),lG={kernelName:wl,backendName:"cpu",kernelFunc:oG},ES=Rt((e,t)=>e>=t?1:0),uG=qt(mi,ES,null,"bool"),pG={kernelName:mi,backendName:"cpu",kernelFunc:uG},$S=Rt((e,t)=>e<t?1:0),dG=qt(vl,$S,null,"bool"),hG={kernelName:vl,backendName:"cpu",kernelFunc:dG},AS=Rt((e,t)=>e<=t?1:0),cG=qt(kl,AS,null,"bool"),fG={kernelName:kl,backendName:"cpu",kernelFunc:cG};function FS(e,t,r){let n=(t-e)/(r-1),a=w.makeZerosTypedArray(r,"float32");a[0]=e;for(let s=1;s<a.length;s++)a[s]=a[s-1]+n;return a}var RS=Kn(e=>Math.log(e)),mG=Ya(vi,RS),gG={kernelName:vi,backendName:"cpu",kernelFunc:mG};function DS(e,t,r,n){let a=w.getTypedArrayFromDType(n,w.sizeFromShape(r));for(let s=0;s<a.length;++s){let i=s*t,o=e[i];for(let u=0;u<t;++u){let p=e[i+u];(Number.isNaN(p)||p>o)&&(o=p)}a[s]=o}return a}var MS=Rt((e,t)=>Math.max(e,t)),yG=qt(Ni,MS),bG={kernelName:Ni,backendName:"cpu",kernelFunc:yG},OS=Rt((e,t)=>Math.min(e,t)),xG=qt(Ei,OS),wG={kernelName:Ei,backendName:"cpu",kernelFunc:xG},nx=Rt((e,t)=>e*t),vG=ex((e,t,r,n)=>({real:e*r-t*n,imag:e*n+t*r})),rf=qt(Ai,nx,vG),kG={kernelName:Ai,backendName:"cpu",kernelFunc:rf};function zS(e,t,r){let n=w.createScalarValue(-1,r);return nx([],t,n,e,r)}function IG(e){let{inputs:t,backend:r}=e,{x:n}=t;ye(n,"neg");let a=r.data.get(n.dataId).values,[s,i]=zS(a,n.shape,n.dtype);return r.makeTensorInfo(i,n.dtype,s)}var SG={kernelName:Al,backendName:"cpu",kernelFunc:IG},LS=Rt((e,t)=>e!==t?1:0),NG=qt(Fl,LS,null,"bool"),TG={kernelName:Fl,backendName:"cpu",kernelFunc:NG};function ax(e,t,r,n,a){let s=t.length,i=w.sizeFromShape(t),o=w.computeStrides(t),u=w.computeStrides(a),p=w.getTypedArrayFromDType(r,w.sizeFromShape(a));for(let l=0;l<i;++l){let d=w.indexToLoc(l,s,o),h=new Array(d.length);for(let f=0;f<h.length;f++)h[f]=d[n[f]];let c=w.locToIndex(h,s,u);p[c]=e[l]}return p}function Er(e){let{inputs:t,attrs:r,backend:n}=e,{x:a}=t,{perm:s}=r;ye(a,"transpose");let i=a.shape.length,o=new Array(i);for(let l=0;l<o.length;l++)o[l]=a.shape[s[l]];let u=n.data.get(a.dataId).values,p=ax(u,a.shape,a.dtype,s,o);return{dataId:n.write(p,o,a.dtype),shape:o,dtype:a.dtype}}var CG={kernelName:aa,backendName:"cpu",kernelFunc:Er};function PS(e,t,r,n){let[a,s]=N.computeOutAndReduceShapes(e,n),i=en(t,"int32"),o=w.makeZerosTypedArray(w.sizeFromShape(a),i),u=w.sizeFromShape(s);for(let p=0;p<o.length;++p){let l=p*u,d=1;for(let h=0;h<u;++h)d*=r[l+h];o[p]=d}return{outVals:o,outShape:a,outDtype:i}}function _G(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n;ye(a,"prod");let o=a.shape.length,u=w.parseAxisParam(s,a.shape),p=N.getAxesPermutation(u,o),l=u,d=a,h=[];p!=null&&(d=Er({inputs:{x:a},backend:r,attrs:{perm:p}}),h.push(d),l=N.getInnerMostAxes(l.length,o));let c=r.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:g}=PS(d.shape,d.dtype,c,l),y=m;return i&&(y=N.expandShapeToKeepDim(m,u)),h.forEach(b=>r.disposeIntermediateTensorInfo(b)),r.makeTensorInfo(y,g,f)}var EG={kernelName:Oi,backendName:"cpu",kernelFunc:_G};function $G(e,t,r){e.forEach((n,a)=>{if(n<0||n>=r){let s=w.indexToLoc(a,t.length,w.computeStrides(t)).join(",");throw new Error(`indices[${s}] = ${n} is not in [0, ${r})`)}})}function AG(e,t){for(let r=0;r<e.length;++r){let n=e[r],a=r===e.length-1?t:e[r+1].length;if(n.length===0)throw new Error("Ragged splits may not be empty");if(n[0]<0)throw new Error("Ragged splits must be non-negative");if(n[n.length-1]>a)throw new Error("Ragged splits must not point past values");for(let s=1;s<n.length;++s)if(n[s-1]>n[s])throw new Error("Ragged splits must be sorted in ascending order")}}function FG(e,t,r,n){let a=[],s=0,i=t.length-1+r.length,o=new Array(i).fill(null).map(()=>[0]);AG(r,n);let u=1;for(let p=0;p<t.length-1;++p){u*=t[p];let l=t[p+1];for(let d=1;d<u+1;++d)o[p].push(d*l)}for(let p=0;p<e.length;++p){let l=e[p],d=e[p]+1;for(let h=0;h<r.length;++h){let c=r[h],f=h+t.length-1;if(f>=0){let m=o[f],g=m[m.length-1]-c[l];for(let y=l;y<d;++y)o[f].push(c[y+1]+g)}l=c[l],d=c[d]}d!==l&&(a.push([l,d]),s+=d-l)}return{outSplits:o,valueSlices:a,numValues:s}}function RG(e){let t=[];for(let r=0;r<e.length;++r){let n=e[r].length,a=w.getArrayFromDType("int32",n);t.push(a),e[r].forEach((s,i)=>a[i]=s)}return t}function iv(e,t){let r=e.slice(0,t);for(;r.length<t;)r.push(1);for(let n=t;n<e.length;n++)r[t-1]*=e[n];return r}function DG(e,t,r,n,a,s){let i=iv(t,2)[1],o=iv(s,2)[1],u=0;for(let p of r)for(let l=p[0];l<p[1];++l){for(let d=0;d<n;++d)a[u*o+d]=e[l*i+d];++u}}function MG(e,t,r,n,a){let s=t.slice();s[0]=a;let i=w.getArrayFromDType(r,w.sizeFromShape(s)),o=e.length,u=o===0?0:o/t[0];return DG(e,t,n,u,i,s),[i,s]}function BS(e,t,r,n,a,s,i,o){if(e.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");let u=t[0][0]-1;if($G(s,i,u),n.length===0)throw new Error("params.rank must be nonzero");let p=n[0],{outSplits:l,valueSlices:d,numValues:h}=FG(s,i,e,p),c=RG(l),f=MG(r,n,a,d,h);return[c,f[0],f[1]]}var ov=2147483647;function WS(e,t,r,n,a,s,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(a.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");let o=t.length===0,u=a.length===0,p=i.length===0,l=[];o||l.push(t[0]),u||l.push(a[0]),p||l.push(i[0]);for(let g=1;g<l.length;++g)if(l[g]!==l[g-1])throw new Error("starts, limits, and deltas must have the same shape");let d=l.length===0?1:l[0],h=w.getArrayFromDType("int32",d+1);h[0]=0;for(let g=0;g<d;++g){let y=o?e[0]:e[g],b=u?n[0]:n[g],x=p?s[0]:s[g];if(x===0)throw new Error("Requires delta != 0");let v;if(x>0&&b<y||x<0&&b>y)v=0;else if(v=Math.ceil(Math.abs((b-y)/x)),v>ov)throw new Error(`Requires ((limit - start) / delta) <= ${ov}`);h[g+1]=h[g]+v}let c=h[d],f=w.getArrayFromDType(r,c),m=0;for(let g=0;g<d;++g){let y=h[g+1]-h[g],b=o?e[0]:e[g],x=p?s[0]:s[g];for(let v=0;v<y;++v)f[m++]=b,b+=x}return[h,f]}var on=N.RowPartitionType,km=class{constructor(e,t,r,n,a,s,i,o,u,p){this.shape=e,this.shapeShape=t,this.values=r,this.valuesShape=n,this.valuesDType=a,this.defaultValue=s,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=N.getRowPartitionTypesHelper(p),this.raggedRank=N.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===on.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===on.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){let t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case on.VALUE_ROWIDS:return km.getMaxWidthValueRowID(t);case on.ROW_SPLITS:return km.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${on[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){let t=e.length;if(t===0||t===1)return 0;let r=0;for(let n=0;n<t-1;++n){let a=e[n+1]-e[n];a>r&&(r=a)}return r}static getMaxWidthValueRowID(e){let t=e.length;if(t===0)return 0;let r=0,n=e[0],a=0;for(let s=1;s<t;++s){let i=e[s];i!==n&&(n=i,a=Math.max(s-r,a),r=s)}return Math.max(t-r,a)}tensorShapeFromTensor(e,t,r=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return uv(e,r)}calculateOutputSize(e){let t=this.valuesShape,r=this.defaultValueShape;N.validateDefaultValueShape(r,t);let n=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=N.combineRaggedTensorToTensorShapes(this.raggedRank,n,t);a[0]<0&&(a[0]=e);for(let s=1;s<=this.raggedRank;++s)a[s]<0&&(a[s]=this.getMaxWidth(s));return a}calculateFirstParentOutputIndex(e,t,r){let n=Math.min(e,r),a=[],s=0;for(let i=0;i<n;++i,s+=t)a.push(s);for(let i=n;i<e;++i)a.push(-1);return w.assert(a.length===e,()=>"Final length of result must be equal to firstDimension."),a}calculateOutputIndexRowSplit(e,t,r,n){let a=e.length,s=[];for(let i=0;i<a-1;++i){let o=e[i+1]-e[i],u=Math.min(n,o),p=t[i];p===-1&&(u=0);for(let l=0;l<u;++l)s.push(p),p+=r;for(let l=0;l<o-u;++l)s.push(-1)}if(a>0&&s.length!==e[a-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,r,n){let a=e.length,s=[];if(a===0)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let u=t[o];s.push(u);for(let p=1;p<a;++p){let l=e[p];if(l===o)u>=0&&(++i,i<n?u+=r:u=-1);else{if(i=0,o=l,l>=t.length)throw new Error(`Got nextValueRowId=${l} which is not less than ${t.length}`);u=t[l]}s.push(u)}if(s.length!==e.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(e,t,r,n){let a=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case on.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(a,t,r,n);case on.ROW_SPLITS:if(a.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${a.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(a,t,r,n);default:throw new Error(`Unsupported partition type: ${on[s]}`)}}getFirstDimensionSize(){let e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");let t=this.rowPartitionTypes[0];switch(t){case on.FIRST_DIM_SIZE:return e[0];case on.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case on.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${on[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let s=r.length-2;s>=0;--s)r[s]=r[s+1]*t[s+1];let n=uv(t,!1),a=w.getArrayFromDType(this.valuesDType,w.sizeFromShape(n));if(r[0]*t[0]>0){let s=this.calculateFirstParentOutputIndex(e,r[0],t[0]);for(let i=1;i<=this.raggedRank;++i)s=this.calculateOutputIndex(i-1,s,r[i],t[i]);this.setOutput(this.raggedRank,s,a,n)}return[n,a]}setOutput(e,t,r,n){if(r.length===0)return;let a=this.values,s=r,i=n.slice();i=i.slice(e+1);let o=w.sizeFromShape(i),u=t.length,p=this.defaultValue;if(p.length!==o&&p.length!==1){let c=this.defaultValueShape;W(()=>{let f=P(p,c);p=bs(f,i).dataSync()})}let l=0,d=0,h=0;for(let c=0;c<=u;++c){let f=c<u?t[c]:-1;if(f===h){++h;continue}if(d<h){let m=a.subarray(l*o),g=s.subarray(d*o),y=(h-d)*o;lv(g,m,y)}if(c>=u){let m=r.length;f=Math.floor(m/o)}if(f>h)if(this.defaultValue.length===1)s.subarray(h*o,f*o).fill(this.defaultValue[0]),h=f;else for(;f>h;){let m=s.slice(h*o);lv(m,p,o),++h}f<0?(l=c+1,d=h):(l=c,d=h,h=d+1)}}};function lv(e,t,r){for(let n=0;n<r;n++)e[n]=t[n]}function uv(e,t){let r=[];for(let n of e){if(n<0){if(!t)throw new Error(`Dimension ${n} must be >= 0`);if(n<-1)throw new Error(`Dimension ${n} must be >= -1`);n=-1}r.push(n)}return r}function VS(e,t,r,n,a,s,i,o,u,p){return new km(e,t,r,n,a,s,i,o,u,p).compute()}function sx(e,t,r,n){let a=e===t,s=e<t&&r<0,i=t<e&&r>1;if(a||s||i)return w.makeZerosTypedArray(0,n);let o=Math.abs(Math.ceil((t-e)/r)),u=w.makeZerosTypedArray(o,n);t<e&&r===1&&(r=-1),u[0]=e;for(let p=1;p<u.length;p++)u[p]=u[p-1]+r;return u}var US=Kn(e=>1/Math.sqrt(e)),OG=Ya(Gi,US),zG={kernelName:Gi,backendName:"cpu",kernelFunc:OG};function ys(e,t,r,n,a,s,i,o,u,p){let l=[n/a,a],d=e.values,h=t.values;if(n===0)return ze(r,t.dtype);let c=u instanceof $t?u:ze(l,t.dtype);typeof u=="string"||typeof u=="number"?c.values.fill(u):typeof u=="boolean"&&c.values.fill(+u);for(let f=0;f<s;f++){let m=[],g=0;for(let y=0;y<i;y++){let b=d[f*i+y];m.push(b),g+=b*o[y]}if(g<0||g>=n/a)throw new Error(`Invalid indices: ${m} does not index into ${r}`);for(let y=0;y<a;y++)p?c.values[g*a+y]+=h[f*a+y]:c.values[g*a+y]=t.rank===0?h[0]:h[f*a+y]}return c}var LG=Kn(e=>1/(1+Math.exp(-e))),GS=tt(Ki,e=>1/(1+Math.exp(-e))),PG={kernelName:Ki,backendName:"cpu",kernelFunc:GS};function Ih(e,t,r,n,a){let s=zt.isSliceContinous(n,t,r),i=w.sizeFromShape(r),o=w.computeStrides(n);if(s){let d=zt.computeFlatOffset(t,o);return a==="string"?e.slice(d,d+i):e.subarray(d,d+i)}let u=a==="string"?N.fromUint8ToStringArray(e):e,p=ze(n,a,u),l=ze(r,a);for(let d=0;d<l.size;++d){let h=l.indexToLoc(d),c=h.map((f,m)=>f+t[m]);l.set(p.get(...c),...h)}return a==="string"?N.fromStringArrayToUint8(l.values):l.values}function zs(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{begin:s,size:i}=n;ye(a,"slice");let[o,u]=zt.parseSliceParams(a,s,i);zt.assertParamsValid(a,o,u);let p=r.data.get(a.dataId).values,l=Ih(p,o,u,a.shape,a.dtype);return r.makeTensorInfo(u,a.dtype,l)}var BG={kernelName:Hl,backendName:"cpu",kernelFunc:zs};function HS(e,t,r,n,a,s,i){let o=t[0],u=s[0],p=new Array(u),l=new Array(o),d=t[1];if(u===0){if(o!==0)throw new Error(N.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));let g=w.getArrayFromDType(r,0),y=w.getArrayFromDType(a,0);return[g,[0,d],y,p,l]}let h=!0,c=0,f=new Array(u).fill(0);for(let g=0;g<o;++g){let y=e[g*d];if(y<0)throw new Error(N.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,y));if(y>=u)throw new Error(N.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,y,u));++f[y],h=h&&y>=c,c=y}let m=!0;for(let g=0;g<u;++g){let y=f[g]===0;p[g]=y,m=m&&!y,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&h){let g=e,y=n;for(let b=0;b<o;++b)l[b]=b;return[g,[o,d],y,p,l]}else{let g=f[u-1],y=w.getArrayFromDType(r,g*d),b=w.getArrayFromDType(a,g),x=new Array(u).fill(0);for(let v=0;v<o;++v){let I=e[v*d],T=x[I],_=(I===0?0:f[I-1])+T;x[I]++;for(let E=0;E<d;++E)y[_*d+E]=e[v*d+E];b[_]=n[v],l[v]=_}for(let v=0;v<u;++v)if(x[v]===0){let I=v===0?0:f[v-1];y[I*d+0]=v;for(let T=1;T<d;++T)y[I*d+T]=0;b[I]=i}return[y,[g,d],b,p,l]}}function jS(e,t,r,n,a){let s=w.sizeFromShape(n),i=t[0],o=a.length,u=[],p=1,l=-1;for(let m=0;m<o;++m){let g=a[m];if(g===-1){if(l!==-1)throw new Error(N.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(l,m));l=m,u.push(1)}else{if(g<0)throw new Error(N.getSparseReshapeNegativeOutputDimErrorMessage(m,g));p*=g,u.push(g)}}if(l!==-1){if(p<=0)throw new Error(N.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let m=Math.trunc(s/p);if(p*m!==s)throw new Error(N.getSparseReshapeInputOutputMultipleErrorMessage(n,u));u[l]=m}if(w.sizeFromShape(u)!==s)throw new Error(N.getSparseReshapeInputOutputMismatchErrorMessage(n,u));let d=n.length,h=[];if(d>0){h[d-1]=1;for(let m=d-2;m>=0;--m)h[m]=h[m+1]*n[m+1]}let c=[];if(o>0){c[o-1]=1;for(let m=o-2;m>=0;--m)c[m]=c[m+1]*u[m+1]}let f=w.getArrayFromDType(r,i*o);for(let m=0;m<i;++m){let g=0;for(let y=0;y<d;++y)g+=e[m*d+y]*h[y];for(let y=0;y<o;++y)f[m*o+y]=Math.trunc(g/c[y]),g%=c[y]}return[f,[i,o],u]}function ix(e,t,r,n,a,s=!1,i=0){let o=n.length,u=[t[0],e.length/t[0]],p=u[1],l=o>0?a[o-1]+1:0;if(l<0)throw new Error(N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=t.slice();d[0]=l;let h=d.reduce((b,x)=>b*x,1),c=w.getArrayFromDType(r,h);if(o===0)return l>0&&c.fill(i),[c,d];if(l<=0)throw new Error(N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,y=a[f];for(;;){let b=0;if(m<o){if(b=a[m],y===b){++m;continue}if(y>=b)throw new Error(N.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=l)throw new Error(N.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,l));y>g&&c.fill(i,g*p,y*p);for(let x=f;x<m;++x){let v=n[x];if(v<0||v>=u[0])throw new Error(N.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x,n[x],u[0]));for(let I=0;I<p;I++)c[y*p+I]+=e[v*p+I]}if(s)for(let x=0;x<p;x++)c[y*p+x]/=m-f;if(f=m,++m,g=y+1,y=b,m>o)break}return g<l&&c.fill(i,g*p,l*p),[c,d]}var WG=Kn(e=>Math.sqrt(e)),VG=tt(Zi,e=>Math.sqrt(e)),UG={kernelName:Zi,backendName:"cpu",kernelFunc:VG},qS=Rt((e,t)=>{let r=e-t;return r*r}),GG=qt(Qi,qS),HG={kernelName:Qi,backendName:"cpu",kernelFunc:GG},KS=Kn((e,t)=>{let{pattern:r,replaceGlobal:n,rewrite:a}=t;return e.replace(new RegExp(r,n?"g":""),a)}),jG=Ya(Tp,KS),qG={kernelName:Tp,backendName:"cpu",kernelFunc:jG};function XS(e,t,r,n){let a=ze(e,t.dtype);for(let s=0;s<a.size;s++){let i=a.indexToLoc(s),o=new Array(i.length);for(let u=0;u<o.length;u++)o[u]=i[u]*r[u]+n[u];a.set(t.get(...o),...i)}return a}var KG=class{constructor(e,t,r,n,a,s){this.separator=w.encodeString(e),this.nGramWidths=t,this.leftPad=w.encodeString(r),this.rightPad=w.encodeString(n),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let r=this.getPadWidth(t);return Math.max(0,e+2*r-t+1)}createNGrams(e,t,r,n,a,s){for(let i=0;i<a;++i){let o=this.getPadWidth(s),u=Math.max(0,o-i),p=Math.max(0,o-(a-(i+1))),l=s-(u+p),d=t+(u>0?0:i-o),h=0;h+=u*this.leftPad.length;for(let y=0;y<l;++y)h+=e[d+y].length;h+=p*this.rightPad.length;let c=u+p+l-1;h+=c*this.separator.length,r[n+i]=new Uint8Array(h);let f=r[n+i],m=0,g=y=>y.forEach(b=>f[m++]=b);for(let y=0;y<u;++y)g(this.leftPad),g(this.separator);for(let y=0;y<l-1;++y)g(e[d+y]),g(this.separator);if(l>0){g(e[d+l-1]);for(let y=0;y<p;++y)g(this.separator),g(this.rightPad)}else{for(let y=0;y<p-1;++y)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){let r=e.length,n=t.length;if(n>0){let o=t[0];if(o!==0)throw new Error(`First split value must be 0, got ${o}`);for(let u=1;u<n;++u){let p=t[u]>=o;if(p=p&&t[u]<=r,!p)throw new Error(`Invalid split value ${t[u]}, must be in [${o}, ${r}]`);o=t[u]}if(o!==r)throw new Error(`Last split value must be data size. Expected ${r}, got ${o}`)}let a=n-1,s=w.getArrayFromDType("int32",n);if(r===0||n===0){let o=new Array(r);for(let u=0;u<=a;++u)s[u]=0;return[o,s]}s[0]=0;for(let o=1;o<=a;++o){let u=t[o]-t[o-1],p=0;this.nGramWidths.forEach(l=>{p+=this.getNumNGrams(u,l)}),this.preserveShort&&u>0&&p===0&&(p=1),s[o]=s[o-1]+p}let i=new Array(s[a]);for(let o=0;o<a;++o){let u=t[o],p=s[o];if(this.nGramWidths.forEach(l=>{let d=t[o+1]-t[o],h=this.getNumNGrams(d,l);this.createNGrams(e,u,i,p,h,l),p+=h}),this.preserveShort&&p===s[o]){let l=t[o+1]-t[o];if(l===0)continue;let d=l+2*this.padWidth;this.createNGrams(e,u,i,p,1,d)}}return[i,s]}};function ox(e,t,r,n,a,s,i,o){return new KG(r,n,a,s,i,o).compute(e,t)}function XG(e,t,r,n){if(!e.length)return;if(t.length===0){for(let s=0;s<e.length;++s)n.push(e.subarray(s,s+1));return}if(t.length===1){let s=t[0],i=e.indexOf(s);for(;i!==-1;){let o=e.subarray(0,i);(!r||o.length!==0)&&n.push(o),e=e.subarray(i+1),i=e.indexOf(s)}(!r||e.length!==0)&&n.push(e);return}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||t.indexOf(e[s])!==-1){let i=e.subarray(a,s);(!r||i.length!==0)&&n.push(i),a=s+1}}function lx(e,t,r){let n=e.length,a=[],s=0,i=0,o=new Array(n);for(let h=0;h<n;++h){let c=a.length;XG(e[h],t,r,a);let f=a.length-c;o[h]=f,s+=f,i=Math.max(i,f)}let u=w.getArrayFromDType("int32",s*2),p=new Array(s),l=[n,i],d=0;for(let h=0;h<n;++h)for(let c=0;c<o[h];++c)u[d*2]=h,u[d*2+1]=c,p[d]=a[d],++d;return[u,p,l]}function ux(e,t){let r=w.getArrayFromDType("int32",e.length);for(let n=0;n<e.length;++n)r[n]=w.fingerPrint64(e[n]).modulo(t).getLowBitsUnsigned();return r}var ZS=Rt((e,t)=>e-t),ZG=ex((e,t,r,n)=>({real:e-r,imag:t-n})),px=qt(eo,ZS,ZG),JG={kernelName:eo,backendName:"cpu",kernelFunc:px};function JS(e,t){let r=new Array(e.rank);for(let a=0;a<r.length;a++)r[a]=e.shape[a]*t[a];let n=ze(r,e.dtype);for(let a=0;a<n.values.length;++a){let s=n.indexToLoc(a),i=new Array(e.rank);for(let u=0;u<i.length;u++)i[u]=s[u]%e.shape[u];let o=e.locToIndex(i);n.values[a]=e.values[o]}return n}var Mu=(e,t)=>{let r=t.value-e.value;return r===0?e.index-t.index:r};function YS(e,t,r=0,n=e.length-1){for(;n>r;){if(n-r>600){let o=n-r+1,u=t-r+1,p=Math.log(o),l=.5*Math.exp(2*p/3),d=.5*Math.sqrt(p*l*(o-l)/o)*Math.sign(u-o/2),h=Math.max(r,Math.floor(t-u*l/o+d)),c=Math.min(n,Math.floor(t+(o-u)*l/o+d));YS(e,t,h,c)}let a=e[t],s=r,i=n;for(w.swap(e,r,t),Mu(e[n],a)>0&&w.swap(e,r,n);s<i;){for(w.swap(e,s,i),s++,i--;Mu(e[s],a)<0;)s=s+1;for(;Mu(e[i],a)>0;)i=i-1}Mu(e[r],a)===0?w.swap(e,r,i):(i=i+1,w.swap(e,i,n)),i<=t&&(r=i+1),t<=i&&(n=i-1)}}function QS(e,t,r,n,a){let s=t[t.length-1],[i,o]=[e.length/s,s],u=w.getTypedArrayFromDType(r,i*n),p=w.getTypedArrayFromDType("int32",i*n);for(let d=0;d<i;d++){let h=d*o,c=e.subarray(h,h+o),f=new Array(c.length);c.forEach((b,x)=>f[x]={value:b,index:x}),n<f.length&&(YS(f,n),f=f.slice(0,n)),a&&f.sort(Mu);let m=d*n,g=u.subarray(m,m+n),y=p.subarray(m,m+n);for(let b=0;b<n;b++)g[b]=f[b].value,y[b]=f[b].index}let l=t.slice();return l[l.length-1]=n,[ze(l,r,u),ze(l,"int32",p)]}function dx(e,t,r,n){let a=w.parseAxisParam(t,r)[0],s=[1,r[0],1];for(let f=0;f<a;f++)s[0]*=r[f];s[1]=r[a];for(let f=a+1;f<r.length;f++)s[2]*=r[f];let i=new Map,o=new Int32Array(r[a]),u=new $t(s,n,e),p=[],l=s[0]===1&&s[2]===1;for(let f=0;f<r[a];f++){let m;if(l)m=e[f].toString();else{let y=[];for(let b=0;b<s[0];b++)for(let x=0;x<s[2];x++)y.push(u.get(b,f,x));m=y.join(",")}let g=i.get(m);if(g!=null)o[f]=g;else{let y=i.size;i.set(m,y),o[f]=y,p.push(f)}}let d=s.slice();d[1]=i.size;let h=new $t(d,n);p.forEach((f,m)=>{for(let g=0;g<s[0];g++)for(let y=0;y<s[2];y++)h.set(u.get(g,f,y),g,m,y)});let c=r.slice();return c[a]=d[1],{outputValues:h.values,outputShape:c,indices:o}}var YG="4.3.0";tc("cpu",()=>new tf,1);var eN=tt(ui,e=>e>=0?e:Math.exp(e)-1),QG={kernelName:ui,backendName:"cpu",kernelFunc:eN};function tN(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{alpha:s}=n;ye([a],"leakyRelu");let i=w.sizeFromShape(a.shape),o=r.data.get(a.dataId).values,u=w.getTypedArrayFromDType("float32",i);for(let p=0;p<o.length;p++)u[p]=o[p]<0?s*o[p]:o[p];return r.makeTensorInfo(a.shape,"float32",u)}var eH={kernelName:wi,backendName:"cpu",kernelFunc:tN},tH=Rt((e,t)=>e<0?t*e:e);function rN(e){let{inputs:t,backend:r}=e,{x:n,alpha:a}=t;ye([n,a],"prelu");let s=r.data.get(n.dataId).values,i=r.data.get(a.dataId).values,[o,u]=tH(n.shape,a.shape,s,i,"float32");return r.makeTensorInfo(u,"float32",o)}var rH={kernelName:Mi,backendName:"cpu",kernelFunc:rN},nN=tt(Li,e=>Math.max(0,e)),nH={kernelName:Li,backendName:"cpu",kernelFunc:nN},aN=tt(Wi,e=>Math.min(Math.max(0,e),6)),aH={kernelName:Wi,backendName:"cpu",kernelFunc:aN};function Sh(e,t,r,n,a){if(r==="linear")return Un({inputs:{x:t},backend:e});if(r==="relu")return nN({inputs:{x:t},backend:e});if(r==="elu")return eN({inputs:{x:t},backend:e});if(r==="relu6")return aN({inputs:{x:t},backend:e});if(r==="prelu")return rN({inputs:{x:t,alpha:n},backend:e});if(r==="leakyrelu")return tN({inputs:{x:t},backend:e,attrs:{alpha:a}});if(r==="sigmoid")return GS({inputs:{x:t},backend:e});throw new Error(`Activation ${r} has not been implemented for the CPU backend.`)}function ct(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{shape:s}=n,i=w.sizeFromShape(a.shape),o=w.inferFromImplicitShape(s,i),u=w.sizeFromShape(o);w.assert(i===u,()=>`The new shape (${o}) has ${u} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),r.incRef(a.dataId);let p=r.data.get(a.dataId);if(p.complexTensorInfos!=null){let l=p.complexTensorInfos.real,d=p.complexTensorInfos.imag;l.shape=o,d.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}var sH={kernelName:Ll,backendName:"cpu",kernelFunc:ct};function sN(e){let{inputs:t,backend:r,attrs:n}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=n;ye([a,s],"matMul");let u=a.shape.length,p=s.shape.length,l=i?a.shape[u-2]:a.shape[u-1],d=o?s.shape[p-1]:s.shape[p-2],h=i?a.shape[u-1]:a.shape[u-2],c=o?s.shape[p-2]:s.shape[p-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=w.sizeFromShape(f),y=w.sizeFromShape(m),b=nu.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([h,c]);w.assert(l===d,()=>`Error in matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,l,h]:[g,h,l],v=o?[y,c,d]:[y,d,c],I=ct({inputs:{x:a},backend:r,attrs:{shape:x}}),T=ct({inputs:{x:s},backend:r,attrs:{shape:v}}),_=i?I.shape[1]:I.shape[2],E=i?I.shape[2]:I.shape[1],A=o?T.shape[1]:T.shape[2],R=Math.max(g,y),F=r.data.get(I.dataId).values,S=r.data.get(T.dataId).values,M=w.computeStrides(I.shape),B=w.computeStrides(T.shape),[U,G,K]=i?[M[0],1,M[1]]:[M[0],M[1],1],[j,X,ee]=o?[1,B[1],B[0]]:[B[1],1,B[0]],Z=E*A,ne=ze([R,E,A],I.dtype),te=ne.values,ae=r.blockSize;for(let ie=0;ie<R;ie++){let we=ie%g,be=ie%y;for(let de=0;de<E;de+=ae){let Ie=Math.min(de+ae,E);for(let Te=0;Te<A;Te+=ae){let Fe=Math.min(Te+ae,A);for(let Pe=0;Pe<_;Pe+=ae){let rt=Math.min(Pe+ae,_);for(let Ge=de;Ge<Ie;Ge++)for(let je=Te;je<Fe;je++){let $e=0;for(let Ye=Pe;Ye<rt;Ye++){let lt=F[we*U+Ge*G+Ye*K],Fr=S[Ye*j+je*X+be*ee];$e+=lt*Fr}te[ie*Z+(Ge*A+je)]+=$e}}}}}return r.disposeIntermediateTensorInfo(I),r.disposeIntermediateTensorInfo(T),r.makeTensorInfo(b,ne.dtype,ne.values)}var iH={kernelName:Js,backendName:"cpu",kernelFunc:sN};function oH(e){let{inputs:t,backend:r,attrs:n}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:p,activation:l,leakyreluAlpha:d}=n,h,c,f,m=[];h=sN({inputs:{a,b:s},attrs:{transposeA:u,transposeB:p},backend:r}),i&&(c=jo({inputs:{a:h,b:i},backend:r}),m.push(h),h=c),l&&(f=Sh(r,h,l,o,d),m.push(h),h=f);for(let g of m)r.disposeIntermediateTensorInfo(g);return h}var lH={kernelName:Is,backendName:"cpu",kernelFunc:oH},uH=tt(Vs,e=>Math.acos(e)),pH={kernelName:Vs,backendName:"cpu",kernelFunc:uH},dH=tt(Us,e=>Math.acosh(e)),hH={kernelName:Us,backendName:"cpu",kernelFunc:dH};function cH(e){let{inputs:t,backend:r}=e,n=t;ye(t,"addN");let a=n.map(o=>r.data.get(o.dataId).values),s=ze(n[0].shape,n[0].dtype),i=s.values;for(let o=0;o<n.length;o++){let u=a[o];for(let p=0;p<i.length;p++)i[p]+=u[p]}return r.makeTensorInfo(s.shape,s.dtype,s.values)}var fH={kernelName:Gs,backendName:"cpu",kernelFunc:cH};function mH(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n;ye(a,"all");let o=w.parseAxisParam(s,a.shape),u=o,p=N.getAxesPermutation(u,a.shape.length),l=a;p!=null&&(l=Er({inputs:{x:a},backend:r,attrs:{perm:p}}),u=N.getInnerMostAxes(u.length,a.shape.length)),N.assertAxesAreInnerMostDims("all",u,l.shape.length);let[d,h]=N.computeOutAndReduceShapes(l.shape,u),c=w.sizeFromShape(h),f=w.makeZerosTypedArray(w.sizeFromShape(d),l.dtype),m=r.data.get(l.dataId).values;for(let y=0;y<f.length;++y){let b=y*c,x=m[b];for(let v=0;v<c;++v){let I=m[b+v];x=x&&I}f[y]=x}p!=null&&r.disposeIntermediateTensorInfo(l);let g=r.makeTensorInfo(d,l.dtype,f);if(i){let y=N.expandShapeToKeepDim(d,o),b=ct({inputs:{x:g},backend:r,attrs:{shape:y}});return r.disposeIntermediateTensorInfo(g),b}return g}var gH={kernelName:el,backendName:"cpu",kernelFunc:mH};function yH(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n;ye(a,"any");let o=w.parseAxisParam(s,a.shape),u=o,p=N.getAxesPermutation(u,a.shape.length),l=a;p!=null&&(l=Er({inputs:{x:a},backend:r,attrs:{perm:p}}),u=N.getInnerMostAxes(u.length,a.shape.length)),N.assertAxesAreInnerMostDims("any",u,l.shape.length);let[d,h]=N.computeOutAndReduceShapes(l.shape,u),c=w.sizeFromShape(h),f=w.makeZerosTypedArray(w.sizeFromShape(d),l.dtype),m=r.data.get(l.dataId).values;for(let y=0;y<f.length;++y){let b=y*c,x=m[b];for(let v=0;v<c;++v){let I=m[b+v];x=x||I}f[y]=x}p!=null&&r.disposeIntermediateTensorInfo(l);let g=r.makeTensorInfo(d,l.dtype,f);if(i){let y=N.expandShapeToKeepDim(d,o),b=ct({inputs:{x:g},backend:r,attrs:{shape:y}});return r.disposeIntermediateTensorInfo(g),b}return g}var bH={kernelName:tl,backendName:"cpu",kernelFunc:yH};function xH(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s}=n;ye(a,"argMax");let i=w.parseAxisParam(s,a.shape),o=N.getAxesPermutation(i,a.shape.length),u=a,p=[];o!=null&&(u=Er({inputs:{x:a},backend:r,attrs:{perm:o}}),p.push(u),i=N.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],N.assertAxesAreInnerMostDims("argMax",i,u.shape.length);let[l,d]=N.computeOutAndReduceShapes(u.shape,i),h=w.sizeFromShape(l),c=w.makeZerosTypedArray(h,"int32"),f=w.sizeFromShape(d),m=r.data.get(u.dataId).values;for(let g=0;g<c.length;++g){let y=g*f,b=m[y],x=0;for(let v=0;v<f;++v){let I=m[y+v];I>b&&(b=I,x=v)}c[g]=x}return p.forEach(g=>r.disposeIntermediateTensorInfo(g)),r.makeTensorInfo(l,"int32",c)}var wH={kernelName:rl,backendName:"cpu",kernelFunc:xH};function vH(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s}=n;ye(a,"argMin");let i=w.parseAxisParam(s,a.shape),o=N.getAxesPermutation(i,a.shape.length),u=a,p=[];o!=null&&(u=Er({inputs:{x:a},backend:r,attrs:{perm:o}}),p.push(u),i=N.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],N.assertAxesAreInnerMostDims("argMin",i,u.shape.length);let[l,d]=N.computeOutAndReduceShapes(u.shape,i),h=w.sizeFromShape(l),c=w.makeZerosTypedArray(h,"int32"),f=w.sizeFromShape(d),m=r.data.get(u.dataId).values;for(let g=0;g<c.length;++g){let y=g*f,b=m[y],x=0;for(let v=0;v<f;++v){let I=m[y+v];I<b&&(b=I,x=v)}c[g]=x}return p.forEach(g=>r.disposeIntermediateTensorInfo(g)),r.makeTensorInfo(l,"int32",c)}var kH={kernelName:nl,backendName:"cpu",kernelFunc:vH},IH=tt(Hs,e=>Math.asin(e)),SH={kernelName:Hs,backendName:"cpu",kernelFunc:IH},NH=tt(js,e=>Math.asinh(e)),TH={kernelName:js,backendName:"cpu",kernelFunc:NH},CH=tt(qs,e=>Math.atan(e)),_H={kernelName:qs,backendName:"cpu",kernelFunc:CH},EH=Rt((e,t)=>Math.atan2(e,t)),$H=qt(Xs,EH),AH={kernelName:Xs,backendName:"cpu",kernelFunc:$H},FH=tt(Ks,e=>Math.atanh(e)),RH={kernelName:Ks,backendName:"cpu",kernelFunc:FH};function hx(e,t,r,n,a,s){let i=a.strideHeight,o=a.strideWidth,u=a.dilationHeight,p=a.dilationWidth,l=a.effectiveFilterHeight,d=a.effectiveFilterWidth,h=a.padInfo.top,c=a.padInfo.left,f=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=ze(a.outShape,r),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let v=0;v<a.batchSize;++v){let I=v*y,T=v*n[0];for(let _=0;_<a.inChannels;++_)for(let E=0;E<a.outHeight;++E){let A=E*i-h,R=Math.max(0,A),F=Math.min(a.inHeight,l+A),S=I+E*b;for(let M=0;M<a.outWidth;++M){let B=M*o-c,U=Math.max(0,B),G=Math.min(a.inWidth,d+B),K=f,j=0,X=0;for(let Z=R;Z<F;Z+=u){let ne=T+Z*n[1];for(let te=U;te<G;te+=p){let ae=ne+te*n[2],ie=e[ae+_];s==="max"&&ie>K?K=ie:s==="avg"&&(j+=ie,X++)}if(isNaN(K))break}let ee=S+M*x+_;g[ee]=s==="avg"?j/X:K}}}return m}function iN(e,t,r,n,a=!1,s=!1){let i=ze(n.outShape,"int32"),o=n.strideHeight,u=n.strideWidth,p=n.dilationHeight,l=n.dilationWidth,d=n.effectiveFilterHeight,h=n.effectiveFilterWidth,c=n.padInfo.top,f=n.padInfo.left,m=ze(t,r,e);for(let g=0;g<n.batchSize;++g)for(let y=0;y<n.inChannels;++y)for(let b=0;b<n.outHeight;++b){let x=b*o-c,v=x;for(;v<0;)v+=p;let I=Math.min(n.inHeight,d+x);for(let T=0;T<n.outWidth;++T){let _=T*u-f,E=_;for(;E<0;)E+=l;let A=Math.min(n.inWidth,h+_),R=Number.NEGATIVE_INFINITY,F=-1;for(let S=v;S<I;S+=p){let M=S-x;for(let B=E;B<A;B+=l){let U=B-_,G=m.get(g,S,B,y);G>R&&(R=G,a?F=s?((g*n.inHeight+S)*n.inWidth+B)*n.inChannels+y:(S*n.inWidth+B)*n.inChannels+y:F=M*h+U)}}i.set(F,g,b,T,y)}}return i}function oN(e,t,r,n,a,s){let i=a.strideDepth,o=a.strideHeight,u=a.strideWidth,p=a.dilationDepth,l=a.dilationHeight,d=a.dilationWidth,h=a.effectiveFilterDepth,c=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=ze(a.outShape,r),v=x.values,I=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],T=a.outShape[2]*a.outShape[3]*a.outShape[4],_=a.outShape[3]*a.outShape[4],E=a.outShape[4];for(let A=0;A<a.batchSize;++A){let R=A*I,F=A*n[0];for(let S=0;S<a.inChannels;++S)for(let M=0;M<a.outDepth;++M){let B=M*i-m,U=B;for(;U<0;)U+=p;let G=Math.min(a.inDepth,h+B),K=R+M*T;for(let j=0;j<a.outHeight;++j){let X=j*o-g,ee=X;for(;ee<0;)ee+=l;let Z=Math.min(a.inHeight,c+X),ne=K+j*_;for(let te=0;te<a.outWidth;++te){let ae=te*u-y,ie=ae;for(;ie<0;)ie+=d;let we=Math.min(a.inWidth,f+ae),be=ne+te*E,de=b,Ie=0,Te=0;for(let Pe=U;Pe<G;Pe+=p){let rt=F+Pe*n[1];for(let Ge=ee;Ge<Z;Ge+=l){let je=rt+Ge*n[2];for(let $e=ie;$e<we;$e+=d){let Ye=je+$e*n[3],lt=e[Ye+S];if(s==="max"&&lt>de?de=lt:s==="avg"&&(Ie+=lt,Te++),isNaN(de))break}if(isNaN(de))break}if(isNaN(de))break}let Fe=be+S;v[Fe]=s==="avg"?Ie/Math.max(Te,1):de}}}}return x}function DH(e,t){let r=ze(t.outShape,"int32"),n=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,p=t.effectiveFilterDepth,l=t.effectiveFilterHeight,d=t.effectiveFilterWidth,h=t.padInfo.front,c=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let b=y*n-h,x=b;for(;x<0;)x+=i;let v=Math.min(t.inDepth,p+b);for(let I=0;I<t.outHeight;++I){let T=I*a-c,_=T;for(;_<0;)_+=o;let E=Math.min(t.inHeight,l+T);for(let A=0;A<t.outWidth;++A){let R=A*s-f,F=R;for(;F<0;)F+=u;let S=Math.min(t.inWidth,d+R),M=Number.NEGATIVE_INFINITY,B=-1;for(let U=x;U<v;U+=i){let G=U-b;for(let K=_;K<E;K+=o){let j=K-T;for(let X=F;X<S;X+=u){let ee=X-R,Z=e.get(m,U,K,X,g);Z>=M&&(M=Z,B=G*l*d+j*l+ee)}}}r.set(B,m,y,I,A,g)}}}return r}function MH(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t;ye(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n,p=1;w.assert(N.eitherStridesOrDilationsAreOne(i,p),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let l=N.computePool2DInfo(a.shape,s,i,p,o,u),d;if(l.filterWidth===1&&l.filterHeight===1&&w.arraysEqual(l.inShape,l.outShape))d=Un({inputs:{x:a},backend:r});else{let h=r.data.get(a.dataId).values,c=w.computeStrides(a.shape),f=hx(h,a.shape,a.dtype,c,l,"avg");d=r.makeTensorInfo(l.outShape,a.dtype,f.values)}return d}var OH={kernelName:Zs,backendName:"cpu",kernelFunc:MH};function zH(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:p}=n;ye(a,"avgPool3d");let l=N.computePool3DInfo(a.shape,s,i,1,o,u,p),d=r.data.get(a.dataId).values,h=oN(d,a.shape,a.dtype,w.computeStrides(a.shape),l,"avg");return r.makeTensorInfo(h.shape,"float32",h.values)}var LH={kernelName:al,backendName:"cpu",kernelFunc:zH};function PH(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:p}=n;ye([a,s],"avgPool3DGrad");let l=N.computePool3DInfo(s.shape,i,o,1,u,p),d=l.strideDepth,h=l.strideHeight,c=l.strideWidth,f=l.filterDepth,m=l.filterHeight,g=l.filterWidth,y=l.dilationDepth,b=l.dilationHeight,x=l.dilationWidth,v=l.effectiveFilterDepth,I=l.effectiveFilterHeight,T=l.effectiveFilterWidth,_=v-1-l.padInfo.front,E=T-1-l.padInfo.left,A=I-1-l.padInfo.top,R=ze(s.shape,"float32"),F=1/(f*m*g),S=r.bufferSync(a);for(let M=0;M<l.batchSize;++M)for(let B=0;B<l.inChannels;++B)for(let U=0;U<l.inDepth;++U)for(let G=0;G<l.inHeight;++G)for(let K=0;K<l.inWidth;++K){let j=U-_,X=G-A,ee=K-E,Z=0;for(let ne=0;ne<v;ne+=y){let te=(j+ne)/d;if(!(te<0||te>=l.outDepth||Math.floor(te)!==te))for(let ae=0;ae<I;ae+=b){let ie=(X+ae)/h;if(!(ie<0||ie>=l.outHeight||Math.floor(ie)!==ie))for(let we=0;we<T;we+=x){let be=(ee+we)/c;if(be<0||be>=l.outWidth||Math.floor(be)!==be)continue;let de=S.get(M,te,ie,be,B);Z+=de}}}R.set(Z*F,M,U,G,K,B)}return r.makeTensorInfo(R.shape,R.dtype,R.values)}var BH={kernelName:fp,backendName:"cpu",kernelFunc:PH};function WH(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:s}=t,i=s;ye([a,s],"avgPoolGrad");let{filterSize:o,strides:u,pad:p}=n,l=N.computePool2DInfo(i.shape,o,u,1,p),d=l.strideHeight,h=l.strideWidth,c=l.filterHeight,f=l.filterWidth,m=l.dilationHeight,g=l.dilationWidth,y=l.effectiveFilterHeight,b=l.effectiveFilterWidth,x=b-1-l.padInfo.left,v=y-1-l.padInfo.top,I=ze(i.shape,"float32"),T=1/(c*f),_=r.data.get(a.dataId).values,E=ze(a.shape,"float32",_);for(let A=0;A<l.batchSize;++A)for(let R=0;R<l.inChannels;++R)for(let F=0;F<l.inHeight;++F)for(let S=0;S<l.inWidth;++S){let M=F-v,B=S-x,U=0;for(let G=0;G<y;G+=m){let K=(M+G)/d;if(!(K<0||K>=l.outHeight||Math.floor(K)!==K))for(let j=0;j<b;j+=g){let X=(B+j)/h;if(X<0||X>=l.outWidth||Math.floor(X)!==X)continue;let ee=E.get(A,K,X,R);U+=ee}}I.set(U*T,A,F,S,R)}return r.makeTensorInfo(I.shape,I.dtype,I.values)}var VH={kernelName:Lh,backendName:"cpu",kernelFunc:WH};function UH(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,scale:s,offset:i,mean:o,variance:u}=t;w.assert(o.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(s==null||o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),ye([a,o,u,s,i],"batchNorm");let{varianceEpsilon:p}=n;p==null&&(p=.001);let l=r.data.get(a.dataId).values,d=r.data.get(o.dataId).values,h=r.data.get(u.dataId).values,c=s?r.data.get(s.dataId).values:new Float32Array([1]),f=i?r.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(l.length),g=f.length,y=c.length,b=h.length,x=d.length,v=0,I=0,T=0,_=0;for(let E=0;E<l.length;++E)m[E]=f[v++]+(l[E]-d[I++])*c[T++]/Math.sqrt(h[_++]+p),v>=g&&(v=0),I>=x&&(I=0),T>=y&&(T=0),_>=b&&(_=0);return r.makeTensorInfo(a.shape,a.dtype,m)}var GH={kernelName:fi,backendName:"cpu",kernelFunc:UH};function HH(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockShape:s,crops:i}=n;ye([a],"batchToSpaceND");let o=s.reduce((y,b)=>y*b),u=N.getReshaped(a.shape,s,o),p=N.getPermuted(u.length,s.length),l=N.getReshapedPermuted(a.shape,s,o),d=N.getSliceBeginCoords(i,s.length),h=N.getSliceSize(l,i,s.length),c=ct({inputs:{x:a},backend:r,attrs:{shape:u}}),f=Er({inputs:{x:c},backend:r,attrs:{perm:p}}),m=ct({inputs:{x:f},backend:r,attrs:{shape:l}}),g=zs({inputs:{x:m},backend:r,attrs:{begin:d,size:h}});return r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(m),g}var jH={kernelName:sl,backendName:"cpu",kernelFunc:HH};function qH(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,weights:s}=t,{size:i}=n,o=r.data.get(a.dataId).values,u=r.data.get(s.dataId).values,p=tx(o,u,s.dtype,s.shape,i);return r.makeTensorInfo([i],s.dtype,p)}var KH={kernelName:il,backendName:"cpu",kernelFunc:qH};function XH(e){let{inputs:t,backend:r}=e,{s0:n,s1:a}=t,s=r.data.get(n.dataId).values,i=r.data.get(a.dataId).values,o=N.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return r.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var ZH={kernelName:mp,backendName:"cpu",kernelFunc:XH},JH=tt(Ha,(e,t)=>{let r=t;return e>r.clipValueMax?r.clipValueMax:e<r.clipValueMin?r.clipValueMin:e}),YH={kernelName:Ha,backendName:"cpu",kernelFunc:JH},QH=e=>{let{x:t}=e.inputs,r=e.backend,n=new Float32Array(w.sizeFromShape(t.shape)),a=r.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=r.data.get(s.dataId).values,u=r.data.get(i.dataId).values;for(let p=0;p<o.length;p++){let l=o[p],d=u[p];n[p]=Math.hypot(l,d)}return r.makeOutput(n,t.shape,"float32")},e6={kernelName:gp,backendName:"cpu",kernelFunc:QH};function qo(e){let{inputs:t,backend:r}=e,{input:n}=t,a=r.data.get(n.dataId).complexTensorInfos.imag,s=r.data.get(a.dataId).values;return r.makeTensorInfo(a.shape,a.dtype,s)}var t6={kernelName:jh,backendName:"cpu",kernelFunc:qo};function Ko(e){let{inputs:t,backend:r,attrs:n}=e,{axis:a}=n,s=w.parseAxisParam(a,t[0].shape)[0],i=t.map(m=>m.shape);N.assertParamsConsistent(i,s);let o=N.computeOutShape(t.map(m=>m.shape),s);if(w.sizeFromShape(o)===0)return r.makeTensorInfo(o,t[0].dtype,[]);let u=t.filter(m=>w.sizeFromShape(m.shape)>0);if(u.length===1)return Un({inputs:{x:u[0]},backend:r});if(u[0].dtype==="complex64"){let m=u.map(v=>Os({inputs:{input:v},backend:r})),g=u.map(v=>qo({inputs:{input:v},backend:r})),y=Ko({inputs:m,backend:r,attrs:{axis:s}}),b=Ko({inputs:g,backend:r,attrs:{axis:s}}),x=zr({inputs:{real:y,imag:b},backend:r});return m.forEach(v=>r.disposeIntermediateTensorInfo(v)),g.forEach(v=>r.disposeIntermediateTensorInfo(v)),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(b),x}let p=u.map(m=>{let g=[-1,w.sizeFromShape(m.shape.slice(s))];return ct({inputs:{x:m},backend:r,attrs:{shape:g}})}),l=p.map(m=>({vals:r.data.get(m.dataId).values,shape:m.shape}));o=N.computeOutShape(p.map(m=>m.shape),1);let d=p[0].shape[0]===1,h=rx(l,o,t[0].dtype,d),c=N.computeOutShape(u.map(m=>m.shape),s),f=r.makeTensorInfo(c,t[0].dtype,h);return p.forEach(m=>r.disposeIntermediateTensorInfo(m)),f}var r6={kernelName:ol,backendName:"cpu",kernelFunc:Ko};function lN(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:p,dimRoundingMode:l}=n;ye([a,s],"conv2d");let d=N.convertConv2DDataFormat(u),h=N.computeConv2DInfo(a.shape,s.shape,i,p,o,l,!1,d),c=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,y=h.padInfo.left,b=h.padInfo.top,x=h.dataFormat==="channelsLast",v=new $t(h.outShape,a.dtype),I=w.computeStrides(a.shape),T=w.computeStrides(s.shape),_=I[0],E=x?I[1]:I[2],A=x?I[2]:1,R=x?1:I[1],F=v.strides[0],S=x?v.strides[1]:v.strides[2],M=x?v.strides[2]:1,B=x?1:v.strides[1],U=r.data.get(a.dataId).values,G=r.data.get(s.dataId).values,K=v.values;for(let j=0;j<h.batchSize;++j){let X=j*_,ee=j*F;for(let Z=0;Z<h.outHeight;++Z){let ne=ee+Z*S,te=Z*h.strideHeight-b;for(let ae=0;ae<c;++ae){let ie=te+ae*m;if(ie<0||ie>=h.inHeight)continue;let we=ae*T[0],be=X+ie*E;for(let de=0;de<h.outWidth;++de){let Ie=ne+de*M,Te=de*h.strideWidth-y;for(let Fe=0;Fe<f;++Fe){let Pe=Te+Fe*g;if(Pe<0||Pe>=h.inWidth)continue;let rt=we+Fe*T[1],Ge=be+Pe*A,je=rt;for(let $e=0;$e<h.inChannels;++$e){let Ye=U[Ge+$e*R];for(let lt=0;lt<h.outChannels;++lt)K[Ie+lt*B]+=Ye*G[je+lt];je+=h.outChannels}}}}}}return r.makeTensorInfo(v.shape,v.dtype,K)}var n6={kernelName:ei,backendName:"cpu",kernelFunc:lN};function a6(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:p,filterShape:l}=n;ye([a,s],"conv2dBackpropFilter");let d=N.convertConv2DDataFormat(u),h=N.computeConv2DInfo(a.shape,l,i,1,o,p,!1,d),{strideHeight:c,strideWidth:f,filterHeight:m,filterWidth:g}=h,y=h.dataFormat==="channelsLast",b=new $t(h.filterShape,"float32"),x=h.padInfo.left,v=h.padInfo.top,I=r.data.get(a.dataId).values,T=r.data.get(s.dataId).values,_=new $t(a.shape,a.dtype,I),E=new $t(s.shape,s.dtype,T);for(let A=0;A<m;++A){let R=Math.max(0,Math.ceil((v-A)/c)),F=Math.min(h.outHeight,(h.inHeight+v-A)/c);for(let S=0;S<g;++S){let M=Math.max(0,Math.ceil((x-S)/f)),B=Math.min(h.outWidth,(h.inWidth+x-S)/f);for(let U=0;U<h.inChannels;++U)for(let G=0;G<h.outChannels;++G){let K=0;for(let j=0;j<h.batchSize;++j)for(let X=R;X<F;++X){let ee=A+X*c-v;for(let Z=M;Z<B;++Z){let ne=S+Z*f-x;y?K+=_.get(j,ee,ne,U)*E.get(j,X,Z,G):K+=_.get(j,U,ee,ne)*E.get(j,G,X,Z)}}b.set(K,A,S,U,G)}}}return r.makeTensorInfo(b.shape,b.dtype,b.values)}var s6={kernelName:Bh,backendName:"cpu",kernelFunc:a6};function i6(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:p,dimRoundingMode:l}=n;ye([a,s],"conv2dBackpropInput");let d=w.computeStrides(s.shape),h=w.computeStrides(a.shape),c=N.convertConv2DDataFormat(p),f=N.computeConv2DInfo(i,s.shape,o,1,u,l,!1,c),m=new $t(f.inShape,"float32"),g=m.values,y=r.data.get(a.dataId).values,b=r.data.get(s.dataId).values,[x,v,I]=d,{batchSize:T,filterHeight:_,filterWidth:E,inChannels:A,inHeight:R,inWidth:F,outChannels:S,outHeight:M,outWidth:B,strideHeight:U,strideWidth:G}=f;c=f.dataFormat;let K=_-1-f.padInfo.top,j=E-1-f.padInfo.left,X=c==="channelsLast",ee=m.strides[0],Z=X?m.strides[1]:m.strides[2],ne=X?m.strides[2]:1,te=X?1:m.strides[1],ae=h[0],ie=X?h[1]:h[2],we=X?h[2]:1,be=X?1:h[1];for(let de=0;de<T;++de)for(let Ie=0;Ie<A;++Ie)for(let Te=0;Te<R;++Te){let Fe=Te-K,Pe=Math.max(0,Math.ceil(Fe/U)),rt=Math.min(M,(_+Fe)/U);for(let Ge=0;Ge<F;++Ge){let je=Ge-j,$e=Math.max(0,Math.ceil(je/G)),Ye=Math.min(B,(E+je)/G),lt=0;for(let It=Pe;It<rt;++It){let wr=It*U-Fe;for(let Xt=$e;Xt<Ye;++Xt){let vr=Xt*G-je,an=ae*de+ie*It+we*Xt,Rr=x*(_-1-wr)+v*(E-1-vr)+I*Ie;for(let kr=0;kr<S;++kr){let Zt=y[an+be*kr],jr=b[Rr+kr];lt+=Zt*jr}}}let Fr=ee*de+Z*Te+ne*Ge+te*Ie;g[Fr]=lt}}return r.makeTensorInfo(m.shape,m.dtype,m.values)}var o6={kernelName:ti,backendName:"cpu",kernelFunc:i6};function l6(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=n;ye([a,s],"conv3d");let p=N.computeConv3DInfo(a.shape,s.shape,i,u,o),{filterDepth:l,filterHeight:d,filterWidth:h,dilationDepth:c,dilationHeight:f,dilationWidth:m,padInfo:g}=p,y=g.front,b=g.left,x=g.top,v=new $t(p.outShape,a.dtype),I=r.data.get(a.dataId).values,T=r.data.get(s.dataId).values,_=v.values,E=w.computeStrides(a.shape),A=w.computeStrides(s.shape);for(let R=0;R<p.batchSize;++R){let F=R*E[0],S=R*v.strides[0];for(let M=0;M<p.outDepth;++M){let B=S+M*v.strides[1],U=M*p.strideDepth-y;for(let G=0;G<l;++G){let K=U+G*c;if(K<0||K>=p.inDepth)continue;let j=G*A[0],X=F+K*E[1];for(let ee=0;ee<p.outHeight;++ee){let Z=B+ee*v.strides[2],ne=ee*p.strideHeight-x;for(let te=0;te<d;++te){let ae=ne+te*f;if(ae<0||ae>=p.inHeight)continue;let ie=j+te*A[1],we=X+ae*E[2];for(let be=0;be<p.outWidth;++be){let de=Z+be*p.outChannels,Ie=be*p.strideWidth-b;for(let Te=0;Te<h;++Te){let Fe=Ie+Te*m;if(Fe<0||Fe>=p.inWidth)continue;let Pe=ie+Te*A[2],rt=we+Fe*p.inChannels,Ge=Pe;for(let je=0;je<p.inChannels;++je){let $e=I[rt+je];for(let Ye=0;Ye<p.outChannels;++Ye)_[de+Ye]+=$e*T[Ge+Ye];Ge+=p.outChannels}}}}}}}}return r.makeTensorInfo(v.shape,v.dtype,v.values)}var u6={kernelName:ri,backendName:"cpu",kernelFunc:l6};function p6(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=n;ye([a,s],"conv3dBackpropFilterV2");let p=w.computeStrides(a.shape),l=w.computeStrides(s.shape),d=N.computeConv3DInfo(a.shape,u,i,1,o),h=d.strideDepth,c=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,y=d.filterWidth,b=new $t(d.filterShape,"float32"),x=b.values,[v,I,T,_]=b.strides,E=r.data.get(s.dataId).values,[A,R,F,S]=l,M=r.data.get(a.dataId).values,[B,U,G,K]=p,j=d.padInfo.front,X=d.padInfo.left,ee=d.padInfo.top;for(let Z=0;Z<m;++Z){let ne=Math.max(0,Math.ceil((j-Z)/h)),te=Math.min(d.outDepth,(d.inDepth+j-Z)/h),ae=Z*v;for(let ie=0;ie<g;++ie){let we=Math.max(0,Math.ceil((ee-ie)/c)),be=Math.min(d.outHeight,(d.inHeight+ee-ie)/c),de=ie*I+ae;for(let Ie=0;Ie<y;++Ie){let Te=Math.max(0,Math.ceil((X-Ie)/f)),Fe=Math.min(d.outWidth,(d.inWidth+X-Ie)/f),Pe=Ie*T+de;for(let rt=0;rt<d.inChannels;++rt){let Ge=rt*_+Pe;for(let je=0;je<d.outChannels;++je){let $e=0;for(let Ye=0;Ye<d.batchSize;++Ye){let lt=Ye*B,Fr=Ye*A;for(let It=ne;It<te;++It){let wr=(Z+It*h-j)*U+lt,Xt=It*R+Fr;for(let vr=we;vr<be;++vr){let an=(ie+vr*c-ee)*G+wr,Rr=vr*F+Xt;for(let kr=Te;kr<Fe;++kr){let Zt=(Ie+kr*f-X)*K+an,jr=kr*S+Rr;$e+=M[Zt+rt]*E[jr+je]}}}}x[Ge+je]=$e}}}}}return r.makeTensorInfo(b.shape,b.dtype,b.values)}var d6={kernelName:ll,backendName:"cpu",kernelFunc:p6};function h6(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=n;ye([a],"conv3dBackpropInputV2");let p=w.computeStrides(a.shape),l=w.computeStrides(s.shape),d=N.computeConv3DInfo(u,s.shape,o,1,i),h=new $t(d.inShape,"float32"),c=h.values,[f,m,g,y]=h.strides,b=r.data.get(a.dataId).values,[x,v,I,T]=p,_=r.data.get(s.dataId).values,[E,A,R,F]=l,{batchSize:S,filterDepth:M,filterHeight:B,filterWidth:U,inChannels:G,inDepth:K,inHeight:j,inWidth:X,outChannels:ee,outDepth:Z,outHeight:ne,outWidth:te,strideDepth:ae,strideHeight:ie,strideWidth:we}=d,be=M-1-d.padInfo.front,de=B-1-d.padInfo.top,Ie=U-1-d.padInfo.left;for(let Te=0;Te<S;++Te)for(let Fe=0;Fe<G;++Fe)for(let Pe=0;Pe<K;++Pe){let rt=Pe-be,Ge=Math.max(0,Math.ceil(rt/ae)),je=Math.min(Z,(M+rt)/ae);for(let $e=0;$e<j;++$e){let Ye=$e-de,lt=Math.max(0,Math.ceil(Ye/ie)),Fr=Math.min(ne,(B+Ye)/ie);for(let It=0;It<X;++It){let wr=It-Ie,Xt=Math.max(0,Math.ceil(wr/we)),vr=Math.min(te,(U+wr)/we),an=0;for(let Rr=Ge;Rr<je;++Rr){let kr=Rr*ae-rt;for(let Zt=lt;Zt<Fr;++Zt){let jr=Zt*ie-Ye;for(let ma=Xt;ma<vr;++ma){let Iu=ma*we-wr,Xn=x*Te+v*Rr+I*Zt+T*ma,Su=E*(M-1-kr)+A*(B-1-jr)+R*(U-1-Iu)+F*Fe;for(let $n=0;$n<ee;++$n){let ga=b[Xn+$n],Jt=_[Su+$n];an+=ga*Jt}}}}c[f*Te+m*Pe+g*$e+y*It+Fe]=an}}}return r.makeTensorInfo(h.shape,h.dtype,h.values)}var c6={kernelName:ul,backendName:"cpu",kernelFunc:h6},f6=tt(ni,e=>Math.cos(e)),m6={kernelName:ni,backendName:"cpu",kernelFunc:f6},g6=tt(ai,e=>Math.cosh(e)),y6={kernelName:ai,backendName:"cpu",kernelFunc:g6};function b6(e){let{inputs:t,backend:r,attrs:n}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:p}=n,[l,d,h,c]=a.shape,f=s.shape[0],[m,g]=o,y=ze([f,m,g,c],"float32"),b=r.data.get(s.dataId).values,x=r.data.get(i.dataId).values,v=r.data.get(a.dataId).values,I=w.computeStrides(a.shape),T=w.computeStrides(y.shape);for(let _=0;_<f;_++){let E=_*4,A=b[E],R=b[E+1],F=b[E+2],S=b[E+3],M=x[_];if(M>=l)continue;let B=m>1?(F-A)*(d-1)/(m-1):0,U=g>1?(S-R)*(h-1)/(g-1):0;for(let G=0;G<m;G++){let K=m>1?A*(d-1)+G*B:.5*(A+F)*(d-1);if(K<0||K>d-1){for(let j=0;j<g;j++)for(let X=0;X<c;X++){let ee=X+j*T[2]+G*T[1]+_*T[0];y.values[ee]=p}continue}if(u==="bilinear"){let j=Math.floor(K),X=Math.ceil(K),ee=K-j;for(let Z=0;Z<g;Z++){let ne=g>1?R*(h-1)+Z*U:.5*(R+S)*(h-1);if(ne<0||ne>h-1){for(let we=0;we<c;we++){let be=we+Z*T[2]+G*T[1]+_*T[0];y.values[be]=p}continue}let te=Math.floor(ne),ae=Math.ceil(ne),ie=ne-te;for(let we=0;we<c;we++){let be=we+te*I[2]+j*I[1]+M*I[0],de=v[be];be=we+ae*I[2]+j*I[1]+M*I[0];let Ie=v[be];be=we+te*I[2]+X*I[1]+M*I[0];let Te=v[be];be=we+ae*I[2]+X*I[1]+M*I[0];let Fe=v[be],Pe=de+(Ie-de)*ie,rt=Te+(Fe-Te)*ie;be=we+Z*T[2]+G*T[1]+_*T[0],y.values[be]=Pe+(rt-Pe)*ee}}}else for(let j=0;j<g;++j){let X=g>1?R*(h-1)+j*U:.5*(R+S)*(h-1);if(X<0||X>h-1){for(let ne=0;ne<c;ne++){let te=ne+j*T[2]+G*T[1]+_*T[0];y.values[te]=p}continue}let ee=Math.round(X),Z=Math.round(K);for(let ne=0;ne<c;ne++){let te=ne+ee*I[2]+Z*I[1]+M*I[0],ae=ne+j*T[2]+G*T[1]+_*T[0];y.values[ae]=v[te]}}}}return r.makeTensorInfo(y.shape,y.dtype,y.values)}var x6={kernelName:dl,backendName:"cpu",kernelFunc:b6};function w6(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=n;ye(a,"cumprod");let u=N.getAxesPermutation([s],a.shape.length),p=a;u!=null&&(p=Er({inputs:{x:a},backend:r,attrs:{perm:u}}));let l=N.getInnerMostAxes(1,a.shape.length)[0];if(l!==p.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${p.shape.length-1} but got axis=${l}`);let d=en(p.dtype,"int32"),h=w.makeOnesTypedArray(w.sizeFromShape(p.shape),d),c=r.data.get(p.dataId).values,f=p.shape[p.shape.length-1],m=o?(y,b)=>y+f-b-1:(y,b)=>y+b;for(let y=0;y<c.length;y+=f)for(let b=0;b<f;b++){let x=m(y,b);if(b===0)h[x]=i?1:c[x];else{let v=m(y,b-1);h[x]=i?c[v]*h[v]:c[x]*h[v]}}let g=r.makeTensorInfo(p.shape,d,h);if(u!=null){let y=N.getUndoAxesPermutation(u),b=Er({inputs:{x:g},backend:r,attrs:{perm:y}});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(p),b}return g}var v6={kernelName:pl,backendName:"cpu",kernelFunc:w6};function k6(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=n;ye(a,"cumsum");let u=N.getAxesPermutation([s],a.shape.length),p=a;u!=null&&(p=Er({inputs:{x:a},backend:r,attrs:{perm:u}}));let l=N.getInnerMostAxes(1,a.shape.length)[0];if(l!==p.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${p.shape.length-1} but got axis=${l}`);let d=en(p.dtype,"int32"),h=w.makeZerosTypedArray(w.sizeFromShape(p.shape),d),c=r.data.get(p.dataId).values,f=p.shape[p.shape.length-1],m=o?(y,b)=>y+f-b-1:(y,b)=>y+b;for(let y=0;y<c.length;y+=f)for(let b=0;b<f;b++){let x=m(y,b);if(b===0)h[x]=i?0:c[x];else{let v=m(y,b-1);h[x]=i?c[v]+h[v]:c[x]+h[v]}}let g=r.makeTensorInfo(p.shape,d,h);if(u!=null){let y=N.getUndoAxesPermutation(u),b=Er({inputs:{x:g},backend:r,attrs:{perm:y}});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(p),b}return g}var I6={kernelName:si,backendName:"cpu",kernelFunc:k6};function S6(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=n;if(a.shape.length===1){let u=r.data.get(a.dataId).values,p=r.data.get(s.dataId).values,l=tx(u,p,s.dtype,s.shape,i);return r.makeTensorInfo([i],s.dtype,l)}else if(a.shape.length===2){let u=r.bufferSync(a),p=r.bufferSync(s),l=yS(u,p,i,o);return r.makeTensorInfo(l.shape,s.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}var N6={kernelName:yp,backendName:"cpu",kernelFunc:S6};function T6(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockSize:s,dataFormat:i}=n;w.assert(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);let o=a.shape[0],u=a.shape[1],p=a.shape[2],l=a.shape[3],d=u*s,h=p*s,c=l/(s*s),f=r.data.get(a.dataId).values,m=new Float32Array(o*d*h*c),g=0;for(let y=0;y<o;++y)for(let b=0;b<d;++b){let x=Math.floor(b/s),v=b%s;for(let I=0;I<h;++I){let T=Math.floor(I/s),_=I%s,E=(v*s+_)*c;for(let A=0;A<c;++A){let R=A+E+l*(T+p*(x+u*y));m[g++]=f[R]}}}return r.makeTensorInfo([o,d,h,c],a.dtype,m)}var C6={kernelName:hl,backendName:"cpu",kernelFunc:T6};function uN(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:p}=n;ye([a,s],"depthwiseConv2DNative");let l=w.computeStrides(a.shape),d=w.computeStrides(s.shape),h=u;h==null&&(h=[1,1]),w.assert(N.eitherStridesOrDilationsAreOne(i,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`);let c=N.computeConv2DInfo(a.shape,s.shape,i,h,o,p,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=c,x=b.left,v=b.top,I=c.outChannels/c.inChannels,T=new $t(c.outShape,a.dtype),_=r.data.get(a.dataId).values,E=r.data.get(s.dataId).values,A=T.values;for(let R=0;R<c.batchSize;++R){let F=R*l[0],S=R*T.strides[0];for(let M=0;M<c.outHeight;++M){let B=S+M*T.strides[1],U=M*c.strideHeight-v;for(let G=0;G<f;++G){let K=U+G*g;if(K<0||K>=c.inHeight)continue;let j=G*d[0],X=F+K*l[1];for(let ee=0;ee<c.outWidth;++ee){let Z=B+ee*T.strides[2],ne=ee*c.strideWidth-x;for(let te=0;te<m;++te){let ae=ne+te*y;if(ae<0||ae>=c.inWidth)continue;let ie=j+te*d[1],we=X+ae*c.inChannels,be=Z,de=ie;for(let Ie=0;Ie<c.inChannels;++Ie){let Te=_[we+Ie];for(let Fe=0;Fe<I;++Fe)A[be+Fe]+=Te*E[de+Fe];be+=I,de+=I}}}}}}return r.makeTensorInfo(T.shape,T.dtype,T.values)}var _6={kernelName:ii,backendName:"cpu",kernelFunc:uN};function E6(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:p,filterShape:l}=n;ye([a,s],"depthwiseConv2dNativeBackpropFilter");let d=N.computeConv2DInfo(a.shape,l,i,o,u,p,!0),{strideHeight:h,strideWidth:c,filterHeight:f,filterWidth:m}=d,g=new $t(d.filterShape,"float32"),y=d.padInfo.left,b=d.padInfo.top,x=d.outChannels/d.inChannels,v=r.data.get(a.dataId).values,I=new $t(a.shape,a.dtype,v),T=r.data.get(s.dataId).values,_=new $t(s.shape,s.dtype,T);for(let E=0;E<f;++E){let A=Math.max(0,Math.ceil((b-E)/h)),R=Math.min(d.outHeight,(d.inHeight+b-E)/h);for(let F=0;F<m;++F){let S=Math.max(0,Math.ceil((y-F)/c)),M=Math.min(d.outWidth,(d.inWidth+y-F)/c);for(let B=0;B<d.outChannels;++B){let U=Math.trunc(B/x),G=B%x,K=0;for(let j=0;j<d.batchSize;++j)for(let X=A;X<R;++X){let ee=E+X*h-b;for(let Z=S;Z<M;++Z){let ne=F+Z*c-y;K+=I.get(j,ee,ne,U)*_.get(j,X,Z,B)}}g.set(K,E,F,U,G)}}}return r.makeTensorInfo(g.shape,g.dtype,g.values)}var $6={kernelName:Wh,backendName:"cpu",kernelFunc:E6};function A6(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:p,inputShape:l}=n;ye([a,s],"depthwiseConv2DNativeBackpropInput");let d=w.computeStrides(a.shape),h=w.computeStrides(s.shape),c=N.computeConv2DInfo(l,s.shape,i,o,u,p,!0),f=new $t(c.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=r.data.get(a.dataId).values,[v,I,T]=d,_=r.data.get(s.dataId).values,[E,A,R]=h,{batchSize:F,filterHeight:S,filterWidth:M,inChannels:B,inHeight:U,inWidth:G,outChannels:K,outHeight:j,outWidth:X,strideHeight:ee,strideWidth:Z}=c,ne=S-1-c.padInfo.top,te=M-1-c.padInfo.left,ae=K/B;for(let ie=0;ie<F;++ie)for(let we=0;we<B;++we)for(let be=0;be<U;++be){let de=be-ne,Ie=Math.max(0,Math.ceil(de/ee)),Te=Math.min(j,(S+de)/ee);for(let Fe=0;Fe<G;++Fe){let Pe=Fe-te,rt=Math.max(0,Math.ceil(Pe/Z)),Ge=Math.min(X,(M+Pe)/Z),je=0;for(let $e=Ie;$e<Te;++$e){let Ye=$e*ee-de;for(let lt=rt;lt<Ge;++lt){let Fr=lt*Z-Pe,It=v*ie+I*$e+T*lt,wr=E*(S-1-Ye)+A*(M-1-Fr)+R*we;for(let Xt=0;Xt<ae;++Xt){let vr=we*ae+Xt,an=x[It+vr],Rr=_[wr+Xt];je+=an*Rr}}}m[g*ie+y*be+b*Fe+we]=je}}return r.makeTensorInfo(f.shape,f.dtype,f.values)}var F6={kernelName:Vh,backendName:"cpu",kernelFunc:A6};function R6(e){let{inputs:t,backend:r}=e,{x:n}=t,a=w.sizeFromShape(n.shape),s=r.data.get(n.dataId).values,i=ze([a,a],n.dtype),o=i.values;for(let p=0;p<s.length;p++)o[p*a+p]=s[p];let u=[...n.shape,...n.shape];return r.makeTensorInfo(u,i.dtype,i.values)}var D6={kernelName:bp,backendName:"cpu",kernelFunc:R6},M6={kernelName:oi,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:r})=>{let{x:n,filter:a}=e,{strides:s,pad:i,dilations:o}=r,u=t,p=u.data.get(n.dataId).values,l=n.shape.length,d=u.data.get(a.dataId).values,h=a.shape.length,{batchSize:c,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:I,filterHeight:T,filterWidth:_,dilationHeight:E,dilationWidth:A,outShape:R}=N.computeDilation2DInfo(n.shape,a.shape,s,i,"NHWC",o),F=w.sizeFromShape(R),S=R.length,M=w.getArrayFromDType(n.dtype,F);for(let B=0;B<c;++B)for(let U=0;U<y;++U){let G=U*v-x.top;for(let K=0;K<b;++K){let j=K*I-x.left;for(let X=0;X<g;++X){let ee=Number.MIN_SAFE_INTEGER;for(let ne=0;ne<T;++ne){let te=G+ne*E;if(te>=0&&te<f)for(let ae=0;ae<_;++ae){let ie=j+ae*A;if(ie>=0&&ie<m){let we=w.locToIndex([B,te,ie,X],l,w.computeStrides(n.shape)),be=w.locToIndex([ne,ae,X],h,w.computeStrides(a.shape)),de=p[we]+d[be];de>ee&&(ee=de)}}}let Z=w.locToIndex([B,U,K,X],S,w.computeStrides(R));M[Z]=ee}}}return{dataId:u.write(w.toTypedArray(M,n.dtype),R,n.dtype),shape:R,dtype:n.dtype}}},O6={kernelName:Ao,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:r})=>{let{x:n,filter:a,dy:s}=e,{strides:i,pad:o,dilations:u}=r,p=t,l=w.toNestedArray(n.shape,p.data.get(n.dataId).values),d=w.toNestedArray(a.shape,p.data.get(a.dataId).values),{batchSize:h,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:I,filterWidth:T,dilationHeight:_,dilationWidth:E,outShape:A}=N.computeDilation2DInfo(n.shape,a.shape,i,o,"NHWC",u);w.assert(s.rank===A.length,()=>`Error in ${Ao}, dy must have the same rank as output ${A.length}, but got ${s.rank}`);let R=w.toNestedArray(A,p.data.get(s.dataId).values),F=w.makeZerosNestedTypedArray(a.shape,a.dtype);for(let S=0;S<h;++S)for(let M=0;M<g;++M){let B=M*x-b.top;for(let U=0;U<y;++U){let G=U*v-b.left;for(let K=0;K<m;++K){let j=Number.MIN_SAFE_INTEGER,X=0,ee=0;for(let Z=0;Z<I;++Z){let ne=B+Z*_;if(ne>=0&&ne<c)for(let te=0;te<T;++te){let ae=G+te*E;if(ae>=0&&ae<f){let ie=l[S][ne][ae][K]+d[Z][te][K];ie>j&&(j=ie,X=Z,ee=te)}}}F[X][ee][K]+=R[S][M][U][K]}}}return{dataId:p.write(w.toTypedArray(F,n.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},z6={kernelName:$o,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:r})=>{let{x:n,filter:a,dy:s}=e,{strides:i,pad:o,dilations:u}=r,p=t,l=w.toNestedArray(n.shape,p.data.get(n.dataId).values),d=w.toNestedArray(a.shape,p.data.get(a.dataId).values),{batchSize:h,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:I,filterWidth:T,dilationHeight:_,dilationWidth:E,outShape:A}=N.computeDilation2DInfo(n.shape,a.shape,i,o,"NHWC",u);w.assert(s.rank===A.length,()=>`Error in ${$o}, dy must have the same rank as output ${A.length}, but got ${s.rank}`);let R=w.toNestedArray(A,p.data.get(s.dataId).values),F=w.makeZerosNestedTypedArray(n.shape,n.dtype);for(let S=0;S<h;++S)for(let M=0;M<g;++M){let B=M*x-b.top;for(let U=0;U<y;++U){let G=U*v-b.left;for(let K=0;K<m;++K){let j=Number.MIN_SAFE_INTEGER,X=B<0?0:B,ee=G<0?0:G;for(let Z=0;Z<I;++Z){let ne=B+Z*_;if(ne>=0&&ne<c)for(let te=0;te<T;++te){let ae=G+te*E;if(ae>=0&&ae<f){let ie=l[S][ne][ae][K]+d[Z][te][K];ie>j&&(j=ie,X=ne,ee=ae)}}}F[S][X][ee][K]+=R[S][M][U][K]}}}return{dataId:p.write(w.toTypedArray(F,n.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};function ld(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n;ye(a,"sum");let o;a.dtype==="bool"?o=Ba({inputs:{x:a},backend:r,attrs:{dtype:"int32"}}):o=Un({inputs:{x:a},backend:r});let u=o.shape.length,p=w.parseAxisParam(s,o.shape),l=N.getAxesPermutation(p,u),d=p,h=o;l!=null&&(h=Er({inputs:{x:o},backend:r,attrs:{perm:l}}),d=N.getInnerMostAxes(d.length,u)),N.assertAxesAreInnerMostDims("sum",d,h.shape.length);let[c,f]=N.computeOutAndReduceShapes(h.shape,d),m=N.upcastType(h.dtype,"int32"),g=kh(r,c,m),y=w.sizeFromShape(f),b=r.data.get(g.dataId).values,x=r.data.get(h.dataId).values;for(let v=0;v<b.length;++v){let I=v*y,T=0;for(let _=0;_<y;++_)T+=x[I+_];b[v]=T}if(i){let v=N.expandShapeToKeepDim(g.shape,p),I=g;g=ct({inputs:{x:g},backend:r,attrs:{shape:v}}),r.disposeIntermediateTensorInfo(I)}return r.disposeIntermediateTensorInfo(o),l!=null&&r.disposeIntermediateTensorInfo(h),g}var L6={kernelName:Ji,backendName:"cpu",kernelFunc:ld};function P6(e){let{inputs:t,backend:r,attrs:n}=e,{equation:a}=n,s=t,{allDims:i,summedDims:o,idDims:u}=N.decodeEinsumEquation(a,s.length);N.checkEinsumDimSizes(i.length,u,s);let{path:p,steps:l}=N.getEinsumComputePath(o,u),d=l.length,h=null,c=i.length,f=[];for(let m=0;m<d;++m){for(let g of l[m]){let{permutationIndices:y,expandDims:b}=N.getEinsumPermutation(c,u[g]),x;N.isIdentityPermutation(y)?x=s[g]:(x=Er({inputs:{x:s[g]},backend:r,attrs:{perm:y}}),f.push(x));let v=x.shape.slice();for(let I=0;I<b.length;++I)v.splice(b[I],0,1);w.arraysEqual(x.shape,v)||(x=ct({inputs:{x},backend:r,attrs:{shape:v}}),f.push(x)),h===null?h=x:(h=rf({inputs:{a:x,b:h},backend:r}),f.push(h))}m<d-1&&(p[m]>=0&&(h=ld({inputs:{x:h},backend:r,attrs:{axis:p[m]-(i.length-c),keepDims:!1}}),f.push(h)),c--)}for(let m of f)m!==h&&r.disposeIntermediateTensorInfo(m);return h}var B6={kernelName:Uh,backendName:"cpu",kernelFunc:P6};function W6(e){let{inputs:t,backend:r}=e,{dy:n,y:a}=t;ye([n,a],"eluGrad");let s=new Float32Array(w.sizeFromShape(a.shape)),i=r.data.get(a.dataId).values,o=r.data.get(n.dataId).values;for(let u=0;u<i.length;++u){let p=i[u];p>=0?s[u]=o[u]:s[u]=o[u]*(p+1)}return r.makeTensorInfo(a.shape,"float32",s)}var V6={kernelName:cl,backendName:"cpu",kernelFunc:W6},U6=N.ERF_P,G6=N.ERF_A1,H6=N.ERF_A2,j6=N.ERF_A3,q6=N.ERF_A4,K6=N.ERF_A5,X6=tt(fl,e=>{let t=Math.sign(e),r=Math.abs(e),n=1/(1+U6*r);return t*(1-((((K6*n+q6)*n+j6)*n+H6)*n+G6)*n*Math.exp(-r*r))}),Z6={kernelName:fl,backendName:"cpu",kernelFunc:X6};function Nh(e){let{inputs:t,backend:r,attrs:n}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,o=a.shape.slice(),u=s;return s<0&&(w.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+s+1),o.splice(u,0,1),ct({inputs:{x:a},backend:r,attrs:{shape:o}})}var J6={kernelName:gl,backendName:"cpu",kernelFunc:Nh},Y6=Rt((e,t)=>e/t),cx=qt(li,Y6),Im={kernelName:li,backendName:"cpu",kernelFunc:cx};function pN(e,t,r){let n=e.shape,a=n[0],s=n[1],i=r.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,p=[a,s],l=w.sizeFromShape(p),d=w.getTypedArrayFromDType("float32",l),h=w.getTypedArrayFromDType("float32",l);for(let g=0;g<a;g++){let y=zs({inputs:{x:o},backend:r,attrs:{begin:[g,0],size:[1,s]}}),b=zs({inputs:{x:u},backend:r,attrs:{begin:[g,0],size:[1,s]}}),x=zr({inputs:{real:y,imag:b},backend:r}),{real:v,imag:I}=Q6(x,t,r),T=N.mergeRealAndImagArrays(v,I);for(let _=0;_<s;_++){let E=N.getComplexWithIndex(T,_);d[g*s+_]=E.real,h[g*s+_]=E.imag}r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(x)}let c=r.makeTensorInfo(p,"float32",d),f=r.makeTensorInfo(p,"float32",h),m=zr({inputs:{real:c,imag:f},backend:r});return r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(f),m}function Q6(e,t,r){let n=w.sizeFromShape(e.shape),a=r.data.get(e.dataId),s=r.data.get(a.complexTensorInfos.real.dataId).values,i=r.data.get(a.complexTensorInfos.imag.dataId).values;if(ej(n)){let o=Sm(s,i,n,t,r),u=[e.shape[0],e.shape[1]];if(t){let p=r.makeTensorInfo(u,"float32",o.real),l=r.makeTensorInfo(u,"float32",o.imag),d=r.makeTensorInfo([],"float32",w.createScalarValue(n,"float32")),h=Un({inputs:{x:d},backend:r}),c=Im.kernelFunc({inputs:{a:p,b:d},backend:r}),f=Im.kernelFunc({inputs:{a:l,b:h},backend:r}),m=r.data.get(c.dataId).values,g=r.data.get(f.dataId).values;return r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return o}else{let o=N.mergeRealAndImagArrays(s,i),u=tj(o,n,t);return N.splitRealAndImagArrays(u)}}function ej(e){return(e&e-1)===0}function Sm(e,t,r,n,a){if(r===1)return{real:e,imag:t};let s=N.mergeRealAndImagArrays(e,t),i=r/2,o=N.complexWithEvenIndex(s),u=o.real,p=o.imag,l=[u.length],d=a.makeTensorInfo(l,"float32",u),h=a.makeTensorInfo(l,"float32",p),c=zr({inputs:{real:d,imag:h},backend:a}),f=N.complexWithOddIndex(s),m=f.real,g=f.imag,y=[m.length],b=a.makeTensorInfo(y,"float32",m),x=a.makeTensorInfo(y,"float32",g),v=zr({inputs:{real:b,imag:x},backend:a}),I=Sm(u,p,i,n,a),T=I.real,_=I.imag,E=[T.length],A=a.makeTensorInfo(E,"float32",T),R=a.makeTensorInfo(E,"float32",_),F=zr({inputs:{real:A,imag:R},backend:a}),S=Sm(m,g,i,n,a),M=S.real,B=S.imag,U=[M.length],G=a.makeTensorInfo(U,"float32",M),K=a.makeTensorInfo(U,"float32",B),j=zr({inputs:{real:G,imag:K},backend:a}),X=N.exponents(r,n),ee=[X.real.length],Z=a.makeTensorInfo(ee,"float32",X.real),ne=a.makeTensorInfo(ee,"float32",X.imag),te=zr({inputs:{real:Z,imag:ne},backend:a}),ae=rf({inputs:{a:te,b:j},backend:a}),ie=jo({inputs:{a:F,b:ae},backend:a}),we=px({inputs:{a:F,b:ae},backend:a}),be=Os({inputs:{input:ie},backend:a}),de=Os({inputs:{input:we},backend:a}),Ie=qo({inputs:{input:ie},backend:a}),Te=qo({inputs:{input:we},backend:a}),Fe=Ko({inputs:[be,de],backend:a,attrs:{axis:0}}),Pe=Ko({inputs:[Ie,Te],backend:a,attrs:{axis:0}}),rt=a.data.get(Fe.dataId).values,Ge=a.data.get(Pe.dataId).values;return a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(A),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(K),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(Z),a.disposeIntermediateTensorInfo(ne),a.disposeIntermediateTensorInfo(te),a.disposeIntermediateTensorInfo(ae),a.disposeIntermediateTensorInfo(ie),a.disposeIntermediateTensorInfo(we),a.disposeIntermediateTensorInfo(be),a.disposeIntermediateTensorInfo(Ie),a.disposeIntermediateTensorInfo(de),a.disposeIntermediateTensorInfo(Te),a.disposeIntermediateTensorInfo(Fe),a.disposeIntermediateTensorInfo(Pe),{real:rt,imag:Ge}}function tj(e,t,r){let n=new Float32Array(t*2);for(let a=0;a<t;a++){let s=0,i=0;for(let o=0;o<t;o++){let u=N.exponent(a*o,t,r),p=N.getComplexWithIndex(e,o);s+=p.real*u.real-p.imag*u.imag,i+=p.real*u.imag+p.imag*u.real}r&&(s/=t,i/=t),N.assignToTypedArray(n,s,i,a)}return n}function rj(e){let{inputs:t,backend:r}=e,{input:n}=t,a=w.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],i=a/s,o=ct({inputs:{x:n},backend:r,attrs:{shape:[i,s]}}),u=pN(o,!1,r),p=ct({inputs:{x:u},backend:r,attrs:{shape:n.shape}});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(u),p}var nj={kernelName:Gh,backendName:"cpu",kernelFunc:rj};function fx(e){let{backend:t,attrs:r}=e,{shape:n,value:a,dtype:s}=r,i=s||w.inferDtype(a),o=w.getArrayFromDType(i,w.sizeFromShape(n));return sj(o,a),t.makeTensorInfo(n,i,o)}var aj={kernelName:xp,backendName:"cpu",kernelFunc:fx};function sj(e,t,r){e.fill(t)}var ij={kernelName:yl,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{image:n}=e,a=r,s=w.getTypedArrayFromDType(n.dtype,w.sizeFromShape(n.shape)),[i,o,u,p]=n.shape,l=a.data.get(n.dataId).values;for(let d=0;d<i;d++){let h=d*u*o*p;for(let c=0;c<o;c++){let f=c*(u*p);for(let m=0;m<u;m++){let g=m*p;for(let y=0;y<p;y++){let b=Math.round(u-m-1),x=h+f+g+y,v=l[x];if(b>=0&&b<u){let I=b*p,T=h+f+I+y;v=l[T]}s[x]=v}}}}return{dataId:a.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};function oj(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:p,dataFormat:l,dilations:d,dimRoundingMode:h,activation:c,leakyreluAlpha:f}=n,m=lN({inputs:{x:a,filter:s},backend:r,attrs:{strides:u,pad:p,dataFormat:l,dilations:d,dimRoundingMode:h}});if(i){let g=m;if(l==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){let y=ct({inputs:{x:i},backend:r,attrs:{shape:[i.shape[0],1,1]}});m=jo({inputs:{a:m,b:y},backend:r}),r.disposeIntermediateTensorInfo(y)}else m=jo({inputs:{a:m,b:i},backend:r});r.disposeIntermediateTensorInfo(g)}if(c){let g=m;if(l==="NCHW"&&c==="prelu"&&o.shape.length===1&&o.shape[0]!==1){let y=ct({inputs:{x:o},backend:r,attrs:{shape:[o.shape[0],1,1]}});m=Sh(r,m,c,y,f),r.disposeIntermediateTensorInfo(y)}else m=Sh(r,m,c,o,f);r.disposeIntermediateTensorInfo(g)}return m}var lj={kernelName:Ss,backendName:"cpu",kernelFunc:oj};function uj(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:p,dataFormat:l,dilations:d,dimRoundingMode:h,activation:c,leakyreluAlpha:f}=n,m=uN({inputs:{x:a,filter:s},backend:r,attrs:{strides:u,pad:p,dataFormat:l,dilations:d,dimRoundingMode:h}});if(i){let g=m;m=jo({inputs:{a:m,b:i},backend:r}),r.disposeIntermediateTensorInfo(g)}if(c){let g=m;m=Sh(r,m,c,o,f),r.disposeIntermediateTensorInfo(g)}return m}var pj={kernelName:Ns,backendName:"cpu",kernelFunc:uj};function dj(e){let{inputs:t,backend:r}=e,{params:n,indices:a}=t,s=w.sizeFromShape(n.shape),i=a.shape,o=i[i.length-1],[u,p,l,d]=N.prepareAndValidate(n,a);if(p===0)return r.makeTensorInfo(u,n.dtype,[]);let h=r.data.get(a.dataId).values,c=r.bufferSync(n),f=TS(h,c,n.dtype,p,o,l,d,n.shape,s);return r.makeTensorInfo(u,n.dtype,f.values)}var hj={kernelName:xl,backendName:"cpu",kernelFunc:dj};function cj(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=n;ye([a,s],"gatherV2");let u=w.parseAxisParam(i,a.shape)[0],p=r.data.get(s.dataId).values,l=a.shape[u];for(let v=0;v<p.length;++v){let I=p[v];w.assert(I<=l-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${l-1}]`)}let d=o;o==null&&(d=0);let h=w.sizeFromShape(s.shape),c=N.segment_util.collectGatherOpShapeInfo(a,s,u,d),f=ct({inputs:{x:a},backend:r,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),m=ct({inputs:{x:s},backend:r,attrs:{shape:[c.batchSize,h/c.batchSize]}}),g=[c.batchSize,c.outerSize,h/c.batchSize,c.sliceSize],y=r.bufferSync(m),b=r.bufferSync(f),x=CS(b,y,g);return r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(m),r.makeTensorInfo(c.outputShape,x.dtype,x.values)}var fj={kernelName:bl,backendName:"cpu",kernelFunc:cj};function mj(e){let{inputs:t,backend:r}=e,{input:n}=t,a=w.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],i=a/s,o=ct({inputs:{x:n},backend:r,attrs:{shape:[i,s]}}),u=pN(o,!0,r),p=ct({inputs:{x:u},backend:r,attrs:{shape:n.shape}});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(u),p}var gj={kernelName:Hh,backendName:"cpu",kernelFunc:mj},yj=tt(yi,e=>Number.isFinite(e)?1:0,"bool"),bj={kernelName:yi,backendName:"cpu",kernelFunc:yj},xj=tt(bi,e=>Math.abs(e)===1/0?1:0,"bool"),wj={kernelName:bi,backendName:"cpu",kernelFunc:xj},vj=tt(xi,e=>Number.isNaN(e)?1:0,"bool"),kj={kernelName:xi,backendName:"cpu",kernelFunc:vj};function Ij(e){let{backend:t,attrs:r}=e,{start:n,stop:a,num:s}=r,i=FS(n,a,s);return t.makeTensorInfo([i.length],"float32",i)}var Sj={kernelName:Il,backendName:"cpu",kernelFunc:Ij},Nj=tt(ki,e=>Math.log1p(e)),Tj={kernelName:ki,backendName:"cpu",kernelFunc:Nj},Cj=Rt((e,t)=>e&&t),_j=qt(Sl,Cj,null,"bool"),Ej={kernelName:Sl,backendName:"cpu",kernelFunc:_j},$j=tt(Nl,e=>e?0:1,"bool"),Aj={kernelName:Nl,backendName:"cpu",kernelFunc:$j},Fj=Rt((e,t)=>e||t),Rj=qt(Tl,Fj,null,"bool"),Dj={kernelName:Tl,backendName:"cpu",kernelFunc:Rj};function Mj(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=n;ye(a,"LRN");let p=a.shape[3],l=p-1,d=r.data.get(a.dataId).values,h=w.sizeFromShape(a.shape),c=new Float32Array(h);function f(m){let g=m%p,y=m-g+Math.max(0,g-s),b=m-g+Math.min(g+s,l),x=0;for(;y<=b;y++){let v=d[y];x+=v*v}return x}for(let m=0;m<h;m++){let g=f(m),y=d[m]*Math.pow(i+o*g,-u);c[m]=y}return r.makeTensorInfo(a.shape,a.dtype,c)}var Oj={kernelName:Ii,backendName:"cpu",kernelFunc:Mj};function zj(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:p,beta:l}=n;ye(i,"LRNGrad");let d=w.sizeFromShape(i.shape),h=i.shape[3],c=r.data.get(i.dataId).values,f=r.data.get(a.dataId).values,m=r.data.get(s.dataId).values,g=new Float32Array(d),y=d;for(let b=0;b<y;b++){let x=b%h,v=b-x+Math.max(0,x-o),I=b-x+Math.min(h,x+o+1),T=0;for(let _=v;_<I;_++)T+=Math.pow(f[_],2);T=p*T+u;for(let _=v;_<I;_++){let E=-2*p*l*f[_]*m[b]/T;b===_&&(E+=Math.pow(T,-l)),E*=c[b],g[_]+=E}}return r.makeTensorInfo(i.shape,a.dtype,g)}var Lj={kernelName:Cl,backendName:"cpu",kernelFunc:zj};function dN(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=n,o=r,u=a.shape,p=u.length,l=w.parseAxisParam(s,u),d=l,h=N.getAxesPermutation(d,p),c=o.data.get(a.dataId).values;if(h!=null){let v=new Array(p);for(let I=0;I<v.length;I++)v[I]=u[h[I]];c=ax(c,u,a.dtype,h,v),d=N.getInnerMostAxes(d.length,p),u=v}ye(a,"max"),N.assertAxesAreInnerMostDims("max",d,p);let[f,m]=N.computeOutAndReduceShapes(u,d),g=w.sizeFromShape(m),y=DS(c,g,f,a.dtype),b=o.write(y,f,a.dtype),x=f;return i&&(x=N.expandShapeToKeepDim(f,l)),{dataId:b,shape:x,dtype:a.dtype}}var Pj={kernelName:Si,backendName:"cpu",kernelFunc:dN};function Bj(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t;ye(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n,p=1;w.assert(N.eitherStridesOrDilationsAreOne(i,p),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let l=N.computePool2DInfo(a.shape,s,i,p,o,u),d;if(l.filterWidth===1&&l.filterHeight===1&&w.arraysEqual(l.inShape,l.outShape))d=Un({inputs:{x:a},backend:r});else{let h=r.data.get(a.dataId).values,c=w.computeStrides(a.shape),f=hx(h,a.shape,a.dtype,c,l,"max");d=r.makeTensorInfo(l.outShape,a.dtype,f.values)}return d}var Wj={kernelName:Ti,backendName:"cpu",kernelFunc:Bj};function Vj(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:p}=n;ye(a,"maxPool3d");let l=N.computePool3DInfo(a.shape,s,i,1,o,u,p),d=r.data.get(a.dataId).values,h=oN(d,a.shape,a.dtype,w.computeStrides(a.shape),l,"max");return r.makeTensorInfo(h.shape,"float32",h.values)}var Uj={kernelName:_l,backendName:"cpu",kernelFunc:Vj};function Gj(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:p}=n;ye([a,s],"maxPool3DGrad");let l=N.computePool3DInfo(s.shape,i,o,1,u,p),d=r.bufferSync(s),h=DH(d,l),c=l.strideDepth,f=l.strideHeight,m=l.strideWidth,g=l.dilationDepth,y=l.dilationHeight,b=l.dilationWidth,x=l.effectiveFilterDepth,v=l.effectiveFilterHeight,I=l.effectiveFilterWidth,T=x-1-l.padInfo.front,_=I-1-l.padInfo.left,E=v-1-l.padInfo.top,A=ze(s.shape,"float32"),R=r.bufferSync(a);for(let F=0;F<l.batchSize;++F)for(let S=0;S<l.inChannels;++S)for(let M=0;M<l.inDepth;++M)for(let B=0;B<l.inHeight;++B)for(let U=0;U<l.inWidth;++U){let G=M-T,K=B-E,j=U-_,X=0;for(let ee=0;ee<x;ee+=g){let Z=(G+ee)/c;if(!(Z<0||Z>=l.outDepth||Math.floor(Z)!==Z))for(let ne=0;ne<v;ne+=y){let te=(K+ne)/f;if(!(te<0||te>=l.outHeight||Math.floor(te)!==te))for(let ae=0;ae<I;ae+=b){let ie=(j+ae)/m;if(ie<0||ie>=l.outWidth||Math.floor(ie)!==ie)continue;let we=x*v*I-1-h.get(F,Z,te,ie,S),be=ee*v*I+ne*I+ae,de=we===be?1:0;if(de===0)continue;let Ie=R.get(F,Z,te,ie,S);X+=Ie*de}}}A.set(X,F,M,B,U,S)}return r.makeTensorInfo(A.shape,A.dtype,A.values)}var Hj={kernelName:wp,backendName:"cpu",kernelFunc:Gj};function jj(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:s,output:i}=t,o=s;ye([s,i],"maxPoolGrad");let{filterSize:u,strides:p,pad:l,dimRoundingMode:d}=n,h=N.computePool2DInfo(o.shape,u,p,1,l,d),c=r.data.get(o.dataId).values,f=ze(h.outShape,o.dtype,iN(c,o.shape,o.dtype,h).values),m=h.strideHeight,g=h.strideWidth,y=h.dilationHeight,b=h.dilationWidth,x=h.effectiveFilterHeight,v=h.effectiveFilterWidth,I=v-1-h.padInfo.left,T=x-1-h.padInfo.top,_=ze(o.shape,"float32"),E=r.data.get(a.dataId).values,A=ze(a.shape,"float32",E);for(let R=0;R<h.batchSize;++R)for(let F=0;F<h.inChannels;++F)for(let S=0;S<h.inHeight;++S)for(let M=0;M<h.inWidth;++M){let B=S-T,U=M-I,G=0;for(let K=0;K<x;K+=y){let j=(B+K)/m;if(!(j<0||j>=h.outHeight||Math.floor(j)!==j))for(let X=0;X<v;X+=b){let ee=(U+X)/g;if(ee<0||ee>=h.outWidth||Math.floor(ee)!==ee)continue;let Z=x*v-1-f.get(R,j,ee,F),ne=K*v+X,te=Z===ne?1:0;if(te===0)continue;let ae=A.get(R,j,ee,F);G+=ae*te}}_.set(G,R,S,M,F)}return r.makeTensorInfo(_.shape,_.dtype,_.values)}var qj={kernelName:qh,backendName:"cpu",kernelFunc:jj};function Kj(e,t,r,n,a){let s=w.computeStrides(t),i=hx(e,t,r,s,a,"max"),o=iN(e,t,r,a,!0,n);return[i.values,o.values]}var Xj={kernelName:Kh,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{x:n}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,u=r;ye(n,"MaxPoolWithArgmax");let p=u.data.get(n.dataId).values,l=N.computePool2DInfo(n.shape,a,s,[1,1],i),[d,h]=Kj(p,n.shape,n.dtype,o,l),c=u.write(d,l.outShape,n.dtype),f=u.write(h,l.outShape,n.dtype);return[{dataId:c,shape:l.outShape,dtype:n.dtype},{dataId:f,shape:l.outShape,dtype:"int32"}]}};function Zj(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n,o=w.parseAxisParam(s,a.shape),u=N.computeOutAndReduceShapes(a.shape,o)[1],p=w.sizeFromShape(u),l=[],d=r.makeTensorInfo([],"float32",new Float32Array([p]));l.push(d);let h=Ba({inputs:{x:a},backend:r,attrs:{dtype:"float32"}});l.push(h);let c=cx({inputs:{a:h,b:d},backend:r});l.push(c);let f=ld({inputs:{x:c},backend:r,attrs:{axis:s,keepDims:i}});return l.forEach(m=>r.disposeIntermediateTensorInfo(m)),f}var Jj={kernelName:Ci,backendName:"cpu",kernelFunc:Zj};function Yj(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n;ye(a,"min");let o=w.parseAxisParam(s,a.shape),u=o,p=N.getAxesPermutation(u,a.shape.length),l=a;p!=null&&(l=Er({inputs:{x:a},backend:r,attrs:{perm:p}}),u=N.getInnerMostAxes(u.length,a.shape.length)),N.assertAxesAreInnerMostDims("min",u,l.shape.length);let[d,h]=N.computeOutAndReduceShapes(l.shape,u),c=w.sizeFromShape(h),f=w.makeZerosTypedArray(w.sizeFromShape(d),l.dtype),m=r.data.get(l.dataId).values;for(let y=0;y<f.length;++y){let b=y*c,x=m[b];for(let v=0;v<c;++v){let I=m[b+v];(Number.isNaN(I)||I<x)&&(x=I)}f[y]=x}p!=null&&r.disposeIntermediateTensorInfo(l);let g=r.makeTensorInfo(d,l.dtype,f);if(i){let y=N.expandShapeToKeepDim(d,o),b=ct({inputs:{x:g},backend:r,attrs:{shape:y}});return r.disposeIntermediateTensorInfo(g),b}return g}var Qj={kernelName:_i,backendName:"cpu",kernelFunc:Yj};function e5(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{paddings:s,mode:i}=n;ye(a,"mirrorPad");let o=s.map((b,x)=>b[0]+a.shape[x]+b[1]),u=s.map(b=>b[0]),p=s.map((b,x)=>b[0]+a.shape[x]),l=i==="reflect"?0:1,d=r.data.get(a.dataId).values,h=a.shape.length,c=w.computeStrides(a.shape),f=w.sizeFromShape(o),m=o.length,g=w.computeStrides(o),y=w.getTypedArrayFromDType(a.dtype,f);for(let b=0;b<f;b++){let x=w.indexToLoc(b,m,g);for(let I=0;I<m;I++)x[I]<u[I]?x[I]=u[I]*2-x[I]-l:x[I]>=p[I]&&(x[I]=(p[I]-1)*2-x[I]+l);x=x.map((I,T)=>I-u[T]);let v=w.locToIndex(x,h,c);y[b]=d[v]}return{dataId:r.write(y,o,a.dtype),shape:o,dtype:a.dtype}}var t5={kernelName:$i,backendName:"cpu",kernelFunc:e5},r5=Rt((e,t)=>{let r=e%t;return e<0&&t<0||e>=0&&t>=0?r:(r+t)%t}),n5=qt(El,r5),a5={kernelName:El,backendName:"cpu",kernelFunc:n5},s5=Va(Dh());function hN(e){let{inputs:t,backend:r,attrs:n}=e,{logits:a}=t,{dim:s}=n,i=a.shape.length,o=s;if(o===-1&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let u=w.parseAxisParam([o],a.shape),p=dN({inputs:{x:a},backend:r,attrs:{reductionIndices:u,keepDims:!1}}),l=N.expandShapeToKeepDim(p.shape,u),d=ct({inputs:{x:p},backend:r,attrs:{shape:l}}),h=px({inputs:{a,b:d},backend:r}),c=kS({inputs:{x:h},backend:r}),f=ld({inputs:{x:c},backend:r,attrs:{axis:u,keepDims:!1}}),m=ct({inputs:{x:f},backend:r,attrs:{shape:l}}),g=cx({inputs:{a:c,b:m},backend:r});return r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(m),g}var i5={kernelName:Yi,backendName:"cpu",kernelFunc:hN};function o5(e){let{inputs:t,backend:r,attrs:n}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=n;ye(a,"multinomial");let u=o?a:hN({inputs:{logits:a},backend:r,attrs:{dim:-1}}),p=u.shape[0],l=u.shape[1],d=r.data.get(u.dataId).values,h=[p,s],c=w.makeZerosTypedArray(w.sizeFromShape(h),"int32");for(let f=0;f<p;++f){let m=f*l,g=new Float32Array(l-1);g[0]=d[m];for(let x=1;x<g.length;++x)g[x]=g[x-1]+d[m+x];let y=s5.alea(i.toString()),b=f*s;for(let x=0;x<s;++x){let v=y();c[b+x]=g.length;for(let I=0;I<g.length;I++)if(v<g[I]){c[b+x]=I;break}}}return o||r.disposeIntermediateTensorInfo(u),r.makeTensorInfo(h,"int32",c)}var l5={kernelName:$l,backendName:"cpu",kernelFunc:o5},u5=jn.nonMaxSuppressionV3Impl;function p5(e){let{inputs:t,backend:r,attrs:n}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=n;ye(a,"NonMaxSuppression");let p=r.data.get(a.dataId).values,l=r.data.get(s.dataId).values,{selectedIndices:d}=u5(p,l,i,o,u);return r.makeTensorInfo([d.length],"int32",new Int32Array(d))}var d5={kernelName:Rl,backendName:"cpu",kernelFunc:p5},h5=jn.nonMaxSuppressionV4Impl;function c5(e){let{inputs:t,backend:r,attrs:n}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:p}=n;ye(a,"NonMaxSuppressionPadded");let l=r.data.get(a.dataId).values,d=r.data.get(s.dataId).values,{selectedIndices:h,validOutputs:c}=h5(l,d,i,o,u,p);return[r.makeTensorInfo([h.length],"int32",new Int32Array(h)),r.makeTensorInfo([],"int32",new Int32Array([c]))]}var f5={kernelName:Dl,backendName:"cpu",kernelFunc:c5},m5=jn.nonMaxSuppressionV5Impl;function g5(e){let{inputs:t,backend:r,attrs:n}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:p}=n;ye(a,"NonMaxSuppressionWithScore");let l=r.data.get(a.dataId).values,d=r.data.get(s.dataId).values,h=i,c=o,f=u,m=p,{selectedIndices:g,selectedScores:y}=m5(l,d,h,c,f,m);return[r.makeTensorInfo([g.length],"int32",new Int32Array(g)),r.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var y5={kernelName:Ml,backendName:"cpu",kernelFunc:g5};function b5(e){let{inputs:t,backend:r,attrs:n}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:u}=n;ye(a,"oneHot");let p=w.sizeFromShape(a.shape),l=new Float32Array(p*i);l.fill(u);let d=r.data.get(a.dataId).values;for(let h=0;h<p;++h)d[h]>=0&&d[h]<i&&(l[h*i+d[h]]=o);return r.makeTensorInfo([...a.shape,i],s,l)}var x5={kernelName:Fi,backendName:"cpu",kernelFunc:b5};function Th(e){let{inputs:t,backend:r}=e,{x:n}=t;if(n.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(n.dtype==="complex64"){let a=Os({inputs:{input:n},backend:r}),s=Th({inputs:{x:a},backend:r}),i=qo({inputs:{input:n},backend:r}),o=Th({inputs:{x:i},backend:r}),u=zr({inputs:{real:s,imag:o},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),u}else return fx({backend:r,attrs:{shape:n.shape,value:0,dtype:n.dtype}})}var w5={kernelName:tu,backendName:"cpu",kernelFunc:Th};function cN(e){let{inputs:t,backend:r}=e,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(n.dtype==="complex64"){let a=Os({inputs:{input:n},backend:r}),s=cN({inputs:{x:a},backend:r}),i=qo({inputs:{input:n},backend:r}),o=Th({inputs:{x:i},backend:r}),u=zr({inputs:{real:s,imag:o},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),u}else return fx({backend:r,attrs:{shape:n.shape,value:1,dtype:n.dtype}})}var v5={kernelName:Ol,backendName:"cpu",kernelFunc:cN};function fN(e){let{inputs:t,backend:r,attrs:n}=e,{axis:a}=n;if(t.length===1)return Nh({inputs:{input:t[0]},backend:r,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(l=>{w.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],u=t.map(l=>{let d=Nh({inputs:{input:l},backend:r,attrs:{dim:a}});return o.push(d),d}),p=Ko({inputs:u,backend:r,attrs:{axis:a}});return o.forEach(l=>r.disposeIntermediateTensorInfo(l)),p}var k5={kernelName:zl,backendName:"cpu",kernelFunc:fN};function I5(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{paddings:s,constantValue:i}=n;ye(a,"pad");let o=s.map((y,b)=>y[0]+a.shape[b]+y[1]),u=s.map(y=>y[0]),p=r.data.get(a.dataId).values,l=w.sizeFromShape(a.shape),d=a.shape.length,h=w.computeStrides(a.shape),c=w.sizeFromShape(o),f=o.length,m=w.computeStrides(o),g=w.getTypedArrayFromDType(a.dtype,c);i!==0&&g.fill(i);for(let y=0;y<l;y++){let b=w.indexToLoc(y,d,h).map((v,I)=>v+u[I]),x=w.locToIndex(b,f,m);g[x]=p[y]}return{dataId:r.write(g,o,a.dtype),shape:o,dtype:a.dtype}}var mN={kernelName:Ri,backendName:"cpu",kernelFunc:I5},S5=Rt((e,t)=>Math.pow(e,t)),N5=qt(Di,S5),T5={kernelName:Di,backendName:"cpu",kernelFunc:N5};function C5(e){let{inputs:t,backend:r,attrs:n}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=n,u=a.map(y=>r.data.get(y.dataId).values),p=a.map(y=>y.shape),l=r.data.get(s.dataId).values,d=r.data.get(i.dataId).values,[h,c,f]=BS(u,p,l,s.shape,s.dtype,d,i.shape),m=h.map(y=>r.makeTensorInfo([y.length],"int32",y)),g=r.makeTensorInfo(f,s.dtype,c);return m.concat([g])}var _5={kernelName:Xh,backendName:"cpu",kernelFunc:C5};function E5(e){let{inputs:t,backend:r}=e,{starts:n,limits:a,deltas:s}=t,i=r.data.get(n.dataId).values,o=r.data.get(a.dataId).values,u=r.data.get(s.dataId).values,[p,l]=WS(i,n.shape,n.dtype,o,a.shape,u,s.shape),d=r.makeTensorInfo([p.length],"int32",p),h=r.makeTensorInfo([l.length],n.dtype,l);return[d,h]}var $5={kernelName:Zh,backendName:"cpu",kernelFunc:E5};function A5(e){let{inputs:t,backend:r,attrs:n}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=n,p=r.data.get(a.dataId).values,l=r.data.get(s.dataId).values,d=r.data.get(i.dataId).values,h=o.map(g=>r.data.get(g.dataId).values),c=o.map(g=>g.shape),[f,m]=VS(p,a.shape,l,s.shape,s.dtype,d,i.shape,h,c,u);return r.makeTensorInfo(f,s.dtype,m)}var F5={kernelName:Jh,backendName:"cpu",kernelFunc:A5};function R5(e){let{backend:t,attrs:r}=e,{start:n,stop:a,dtype:s,step:i}=r,o=sx(n,a,i,s);return t.makeTensorInfo([o.length],s,o)}var D5={kernelName:vp,backendName:"cpu",kernelFunc:R5},M5=tt(zi,e=>1/e),O5={kernelName:zi,backendName:"cpu",kernelFunc:M5};function z5(e){let{inputs:t,backend:r,attrs:n}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=n;ye(a,"resizeBilinear");let u=w.computeStrides(a.shape),[p,l]=o,[d,h,c,f]=a.shape,m=r.data.get(a.dataId).values,g=new Float32Array(w.sizeFromShape([d,p,l,f])),y=[s&&p>1?h-1:h,s&&l>1?c-1:c],b=[s&&p>1?p-1:p,s&&l>1?l-1:l],x=0,v=y[0]/b[0],I=y[1]/b[1];for(let T=0;T<d;T++)for(let _=0;_<p;_++){let E;i?E=v*(_+.5)-.5:E=v*_;let A=Math.max(0,Math.floor(E)),R=E-A,F=Math.min(h-1,Math.ceil(E)),S=T*u[0]+A*u[1],M=T*u[0]+F*u[1];for(let B=0;B<l;B++){let U;i?U=I*(B+.5)-.5:U=I*B;let G=Math.max(0,Math.floor(U)),K=U-G,j=Math.min(c-1,Math.ceil(U)),X=S+G*u[2],ee=M+G*u[2],Z=S+j*u[2],ne=M+j*u[2];for(let te=0;te<f;te++){let ae=m[X+te],ie=m[ee+te],we=m[Z+te],be=m[ne+te],de=ae+(we-ae)*K,Ie=ie+(be-ie)*K,Te=de+(Ie-de)*R;g[x++]=Te}}}return r.makeTensorInfo([d,p,l,f],"float32",g)}var L5={kernelName:Bi,backendName:"cpu",kernelFunc:z5};function P5(e){let{inputs:t,backend:r,attrs:n}=e,{images:a,dy:s}=t,{alignCorners:i}=n;ye([s,a],"resizeBilinearGrad");let o=w.computeStrides(a.shape),[u,p,l,d]=a.shape,[,h,c]=s.shape,f=new Float32Array(u*p*l*d),m=[i&&h>1?p-1:p,i&&c>1?l-1:l],g=[i&&h>1?h-1:h,i&&c>1?c-1:c],y=m[0]/g[0],b=m[1]/g[1],x=r.data.get(s.dataId).values,v=0;for(let I=0;I<u;I++){let T=I*o[0];for(let _=0;_<h;_++){let E=_*y,A=Math.floor(E),R=Math.min(Math.ceil(E),p-1),F=T+A*o[1],S=T+R*o[1],M=E-A,B=1-M;for(let U=0;U<c;U++){let G=U*b,K=Math.floor(G),j=Math.min(Math.ceil(G),l-1),X=G-K,ee=1-X,Z=F+K*o[2],ne=F+j*o[2],te=S+K*o[2],ae=S+j*o[2],ie=B*ee,we=B*X,be=M*ee,de=M*X;for(let Ie=0;Ie<d;Ie++){let Te=x[v++];f[Z+Ie]+=Te*ie,f[ne+Ie]+=Te*we,f[te+Ie]+=Te*be,f[ae+Ie]+=Te*de}}}}return r.makeTensorInfo([u,l,p,d],"float32",f)}var B5={kernelName:Bl,backendName:"cpu",kernelFunc:P5};function W5(e){let{inputs:t,backend:r,attrs:n}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=n;ye(a,"resizeNearestNeighbor");let u=w.computeStrides(a.shape),[p,l]=o,[d,h,c,f]=a.shape,m=r.data.get(a.dataId).values,g=new Float32Array(d*p*l*f),y=[s&&p>1?h-1:h,s&&l>1?c-1:c],b=[s&&p>1?p-1:p,s&&l>1?l-1:l],x=y[0]/b[0],v=y[1]/b[1],I=0;for(let T=0;T<d;T++){let _=T*u[0];for(let E=0;E<p;E++){let A=i?x*(E+.5):x*E,R=Math.min(h-1,s?Math.round(A):Math.floor(A));i&&(R=Math.max(0,R));let F=_+R*u[1];for(let S=0;S<l;S++){let M=i?v*(S+.5):v*S,B=Math.min(c-1,s?Math.round(M):Math.floor(M));i&&(B=Math.max(0,B));let U=F+B*u[2];for(let G=0;G<f;G++){let K=m[U+G];g[I++]=K}}}}return r.makeTensorInfo([d,p,l,f],a.dtype,g)}var V5={kernelName:Pi,backendName:"cpu",kernelFunc:W5};function U5(e){let{inputs:t,backend:r,attrs:n}=e,{images:a,dy:s}=t,{alignCorners:i}=n;ye([s,a],"resizeNearestNeighborGrad");let o=w.computeStrides(a.shape),u=w.computeStrides(s.shape),[p,l,d,h]=a.shape,[,c,f]=s.shape,m=new Float32Array(p*l*d*h),g=r.data.get(s.dataId).values,y=[i&&c>1?l-1:l,i&&f>1?d-1:d],b=[i&&c>1?c-1:c,i&&f>1?f-1:f],x=y[0]/b[0],v=y[1]/b[1],I=1/x,T=1/v,_=Math.ceil(I)*2+2,E=Math.ceil(T)*2+2;for(let A=0;A<p;A++){let R=A*o[0];for(let F=0;F<l;F++){let S=R+F*o[1],M=Math.floor(F*I),B=Math.floor(M-_/2);for(let U=0;U<d;U++){let G=S+U*o[2],K=Math.floor(U*T),j=Math.floor(K-E/2);for(let X=0;X<h;X++){let ee=0;for(let Z=0;Z<_;Z++){let ne=Z+B;if(ne<0||ne>=c)continue;let te=R+ne*u[1],ae=ne*x,ie=Math.min(l-1,i?Math.round(ae):Math.floor(ae));if(F===ie)for(let we=0;we<E;we++){let be=we+j;if(be<0||be>=f)continue;let de=te+be*u[2],Ie=be*v,Te=Math.min(d-1,i?Math.round(Ie):Math.floor(Ie));U===Te&&(ee+=g[de+X])}}m[G+X]=ee}}}}return r.makeTensorInfo(a.shape,a.dtype,m)}var G5={kernelName:Pl,backendName:"cpu",kernelFunc:U5};function H5(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{dims:s}=n;ye(a,"reverse");let i=a.shape.length,o=w.parseAxisParam(s,a.shape);if(i===0)return Un({inputs:{x:a},backend:r});let u=new $t(a.shape,a.dtype),p=r.bufferSync(a);for(let l=0;l<u.size;l++){let d=u.indexToLoc(l),h=d.slice();o.forEach(c=>h[c]=a.shape[c]-1-h[c]),u.set(p.get(...h),...d)}return r.makeTensorInfo(u.shape,u.dtype,u.values)}var j5={kernelName:Vi,backendName:"cpu",kernelFunc:H5},q5={kernelName:ru,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{image:n}=e,{radians:a,fillValue:s,center:i}=t,o=r,u=w.getTypedArrayFromDType(n.dtype,w.sizeFromShape(n.shape)),[p,l,d,h]=n.shape,[c,f]=N.getImageCenter(i,l,d),m=255,g=Math.sin(a),y=Math.cos(a),b=o.data.get(n.dataId).values;for(let x=0;x<p;x++){let v=x*d*l*h;for(let I=0;I<l;I++){let T=I*(d*h);for(let _=0;_<d;_++){let E=_*h;for(let A=0;A<h;A++){let R=[p,I,_,A],F=R[2],S=R[1],M=(F-c)*y-(S-f)*g,B=(F-c)*g+(S-f)*y;M=Math.round(M+c),B=Math.round(B+f);let U=s;if(typeof s!="number"&&(A===3?U=m:U=s[A]),M>=0&&M<d&&B>=0&&B<l){let K=B*(d*h),j=M*h,X=v+K+j+A;U=b[X]}let G=v+T+E+A;u[G]=U}}}}return{dataId:o.write(u,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},K5=tt(Ui,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1}),X5={kernelName:Ui,backendName:"cpu",kernelFunc:K5};function Z5(e){let{inputs:t,backend:r,attrs:n}=e,{indices:a,updates:s}=t,{shape:i}=n,{sliceRank:o,numUpdates:u,sliceSize:p,strides:l,outputSize:d}=N.calculateShapes(s,a,i),h=!0,c=r.bufferSync(a),f=r.bufferSync(s),m=ys(c,f,i,d,p,u,o,l,0,h);return r.makeTensorInfo(i,m.dtype,m.values)}var J5={kernelName:Wl,backendName:"cpu",kernelFunc:Z5};function Y5(e,t){let r=0,n=e.length,a=0;for(;r<n;)a=Math.floor((r+n)/2),e[a]<t?r=a+1:n=a;return n}function Q5(e,t){let r=0,n=e.length,a=0;for(;r<n;)a=Math.floor((r+n)/2),e[a]<=t?r=a+1:n=a;return n}function eq(e,t,r,n,a,s){let i=w.getArrayFromDType("int32",r*a);for(let o=0;o<r;++o){let u=e.slice(o*n,(o+1)*n),p=o*a;for(let l=0;l<a;++l)i[p+l]=s==="left"?Y5(u,t[l+p]):Q5(u,t[l+p])}return i}function tq(e){let{inputs:t,backend:r,attrs:n}=e,{sortedSequence:a,values:s}=t,{side:i}=n,o=r.data.get(a.dataId).values,u=r.data.get(s.dataId).values,p=eq(o,u,a.shape[0],a.shape[1],s.shape[1],i);return r.makeTensorInfo(s.shape,"int32",p)}var rq={kernelName:Ul,backendName:"cpu",kernelFunc:tq};function nq(e){let{inputs:t,backend:r}=e,{condition:n,t:a,e:s}=t;ye([n,a,s],"select");let i=n.shape.length,o=r.data.get(n.dataId).values,u=r.data.get(a.dataId).values,p=r.data.get(s.dataId).values,l=en(a.dtype,s.dtype),d=w.makeZerosTypedArray(w.sizeFromShape(a.shape),l),h=0,c=i===0||i>1||a.shape.length===1?1:w.sizeFromShape(a.shape.slice(1));for(let f=0;f<o.length;f++)for(let m=0;m<c;m++)o[f]===1?d[h++]=u[f]:d[h++]=p[f];return r.makeTensorInfo(a.shape,l,d)}var aq={kernelName:Gl,backendName:"cpu",kernelFunc:nq},sq=N.SELU_SCALEALPHA,iq=N.SELU_SCALE,oq=tt(Hi,e=>e>=0?iq*e:sq*(Math.exp(e)-1)),lq={kernelName:Hi,backendName:"cpu",kernelFunc:oq},uq=tt(qi,e=>e<0?-1:e>0?1:0),pq={kernelName:qi,backendName:"cpu",kernelFunc:uq},dq=tt(ji,e=>Math.sin(e)),hq={kernelName:ji,backendName:"cpu",kernelFunc:dq},cq=tt(jl,e=>Math.sinh(e)),fq={kernelName:jl,backendName:"cpu",kernelFunc:cq},mq=11920928955078125e-23,pv=Math.log(mq)+2,gq=tt(Xi,e=>{let t=e>-pv,r=e<pv,n=Math.exp(e),a;return r?a=n:t?a=e:a=Math.log(1+n),a}),yq={kernelName:Xi,backendName:"cpu",kernelFunc:gq};function bq(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockShape:s,paddings:i}=n;ye([a],"spaceToBatchND");let o=w.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let g=1+s.length;g<a.shape.length;++g)u.push([0,0]);let p=mN.kernelFunc({inputs:{x:a},backend:r,attrs:{paddings:u,constantValue:0}}),l=N.getReshaped(p.shape,s,o,!1),d=N.getPermuted(l.length,s.length,!1),h=N.getReshapedPermuted(p.shape,s,o,!1),c=ct({inputs:{x:p},backend:r,attrs:{shape:l}}),f=Er({inputs:{x:c},backend:r,attrs:{perm:d}}),m=ct({inputs:{x:f},backend:r,attrs:{shape:h}});return r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(f),m}var xq={kernelName:ql,backendName:"cpu",kernelFunc:bq};function wq(e){let{inputs:t,backend:r}=e,{indices:n,values:a,denseShape:s,defaultValue:i}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${n.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${a.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=r.data.get(n.dataId).values,u=r.data.get(a.dataId).values,p=r.data.get(s.dataId).values,l=r.data.get(i.dataId).values[0],[d,h,c,f,m]=HS(o,n.shape,n.dtype,u,a.dtype,p,l);return[r.makeTensorInfo(h,n.dtype,d),r.makeTensorInfo([h[0]],a.dtype,c),r.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),r.makeTensorInfo([m.length],n.dtype,new Int32Array(m))]}var vq={kernelName:kp,backendName:"cpu",kernelFunc:wq};function kq(e){let{inputs:t,backend:r}=e,{inputIndices:n,inputShape:a,newShape:s}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${a.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(r.data.get(a.dataId).values),o=r.data.get(n.dataId).values,u=Array.from(r.data.get(s.dataId).values),[p,l,d]=jS(o,n.shape,n.dtype,i,u);return[r.makeTensorInfo(l,n.dtype,p),r.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}var Iq={kernelName:Xl,backendName:"cpu",kernelFunc:kq};function Sq(e){let{inputs:t,backend:r}=e,{data:n,indices:a,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${a.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=r.data.get(n.dataId).values,o=r.data.get(a.dataId).values,u=r.data.get(s.dataId).values,[p,l]=ix(i,n.shape,n.dtype,o,u,!0);return r.makeTensorInfo(l,n.dtype,p)}var Nq={kernelName:Ip,backendName:"cpu",kernelFunc:Sq};function Tq(e){let{inputs:t,backend:r}=e,{data:n,indices:a,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${a.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=r.data.get(n.dataId).values,o=r.data.get(a.dataId).values,u=r.data.get(s.dataId).values,[p,l]=ix(i,n.shape,n.dtype,o,u);return r.makeTensorInfo(l,n.dtype,p)}var Cq={kernelName:Sp,backendName:"cpu",kernelFunc:Tq};function _q(e){let{inputs:t,backend:r,attrs:n}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=n,{sliceRank:u,numUpdates:p,sliceSize:l,strides:d,outputSize:h}=N.calculateShapes(s,a,o),c=!1,f=r.bufferSync(a),m;switch(s.dtype){case"bool":{let g=r.bufferSync(s),y=!!r.data.get(i.dataId).values[0];m=ys(f,g,o,h,l,p,u,d,y,c);break}case"float32":{let g=r.bufferSync(s),y=r.data.get(i.dataId).values[0];m=ys(f,g,o,h,l,p,u,d,y,c);break}case"int32":{let g=r.bufferSync(s),y=r.data.get(i.dataId).values[0];m=ys(f,g,o,h,l,p,u,d,y,c);break}case"string":{let g=r.bufferSync(s),y=w.decodeString(r.data.get(i.dataId).values[0]);m=ys(f,g,o,h,l,p,u,d,y,c);break}default:throw new Error(`Unsupported type ${s.dtype}`)}return r.makeTensorInfo(o,m.dtype,m.values)}var Eq={kernelName:Zl,backendName:"cpu",kernelFunc:_q};function $q(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=w.parseAxisParam(i,a.shape)[0],u=N.prepareSplitSize(a,s,o),p=new Array(a.shape.length).fill(0),l=a.shape.slice();return u.map(d=>{let h=[...l];h[o]=d;let c=zs({inputs:{x:a},backend:r,attrs:{begin:p,size:h}});return p[o]+=d,c})}var Aq={kernelName:Kl,backendName:"cpu",kernelFunc:$q},Fq={kernelName:Np,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:r}=e,n=t;ye(r,"square");let a=n.data.get(r.dataId).values,s=new Float32Array(a.length);for(let i=0;i<a.length;++i){let o=a[i];s[i]=o*o}return{dataId:n.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Rq=tt(qa,(e,t)=>{let r=t;return isNaN(e)?NaN:e>0?1:r.alpha}),Dq={kernelName:qa,backendName:"cpu",kernelFunc:Rq};function Mq(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:p,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h}=n;ye(a,"stridedSlice");let{finalShapeSparse:c,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=zt.sliceInfo(a.shape,s,i,o,u,p,l,d,h),I;if(m)I=ct({inputs:{x:a},backend:r,attrs:{shape:f}});else if(g||y){w.assert(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);let T=zt.computeOutShape(b,x,v),_=zs({inputs:{x:a},backend:r,attrs:{begin:b,size:T}});I=ct({inputs:{x:_},backend:r,attrs:{shape:f}}),r.disposeIntermediateTensorInfo(_)}else{let T=r.bufferSync(a),_=XS(c,T,v,b);I=r.makeTensorInfo(f,_.dtype,_.values)}return I}var Oq={kernelName:Jl,backendName:"cpu",kernelFunc:Mq};function zq(e){let{inputs:t,backend:r,attrs:n}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:p}=n,{data:l,dataSplits:d}=t,h=r.data.get(l.dataId).values,c=r.data.get(d.dataId).values,[f,m]=ox(h,c,a,s,i,o,u,p);return[r.makeTensorInfo([f.length],"string",f),r.makeTensorInfo(d.shape,"int32",m)]}var Lq={kernelName:Cp,backendName:"cpu",kernelFunc:zq};function Pq(e){let{inputs:t,backend:r,attrs:n}=e,{skipEmpty:a}=n,{input:s,delimiter:i}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=r.data.get(s.dataId).values,u=r.data.get(i.dataId).values[0],[p,l,d]=lx(o,u,a),h=l.length;return[r.makeTensorInfo([h,2],"int32",p),r.makeTensorInfo([h],"string",l),r.makeTensorInfo([2],"int32",new Int32Array(d))]}var Bq={kernelName:_p,backendName:"cpu",kernelFunc:Pq};function Wq(e){let{inputs:t,backend:r,attrs:n}=e,{numBuckets:a}=n,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=r.data.get(s.dataId).values,o=ux(i,a);return r.makeTensorInfo(s.shape,"int32",o)}var Vq={kernelName:Ep,backendName:"cpu",kernelFunc:Wq},Uq=tt(to,e=>Math.tan(e)),Gq={kernelName:to,backendName:"cpu",kernelFunc:Uq},Hq=tt(ro,e=>Math.tanh(e)),jq={kernelName:ro,backendName:"cpu",kernelFunc:Hq};function qq(e){let{inputs:t,backend:r}=e,{tensor:n,indices:a,updates:s}=t,{sliceRank:i,numUpdates:o,sliceSize:u,strides:p,outputSize:l}=N.calculateShapes(s,a,n.shape),d=!1,h=r.bufferSync(a),c=r.bufferSync(s),f=r.bufferSync(n),m=ys(h,c,n.shape,l,u,o,i,p,f,d);return r.makeTensorInfo(n.shape,m.dtype,m.values)}var Kq={kernelName:Vl,backendName:"cpu",kernelFunc:qq};function Xq(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{reps:s}=n;ye(a,"tile");let i=JS(r.bufferSync(a),s);return r.makeTensorInfo(i.shape,i.dtype,i.values)}var Zq={kernelName:ja,backendName:"cpu",kernelFunc:Xq};function Jq(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{k:s,sorted:i}=n;ye(a,"topk");let o=r.data.get(a.dataId).values,[u,p]=QS(o,a.shape,a.dtype,s,i);return[r.makeTensorInfo(u.shape,u.dtype,u.values),r.makeTensorInfo(p.shape,p.dtype,p.values)]}var Yq={kernelName:Yl,backendName:"cpu",kernelFunc:Jq};function Qq(e){let{inputs:t,attrs:r,backend:n}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:p}=r,[l,d,h,c]=a.shape,[f,m]=p!=null?p:[d,h],g=[l,f,m,c],y=w.computeStrides(a.shape),b=y[0],x=y[1],v=y[2],I=w.computeStrides(g),T=I[0],_=I[1],E=I[2],A=w.getTypedArrayFromDType(a.dtype,w.sizeFromShape(g));A.fill(u);let R=n.data.get(a.dataId).values,F=n.data.get(s.dataId).values;for(let S=0;S<l;++S){let M=s.shape[0]===1?F:F.subarray(S*8,S*8+8);for(let B=0;B<f;++B)for(let U=0;U<m;++U)for(let G=0;G<c;++G){let K,j=M[6]*U+M[7]*B+1;if(j===0)continue;let X=(M[0]*U+M[1]*B+M[2])/j,ee=(M[3]*U+M[4]*B+M[5])/j,Z=dv(X,h,o),ne=dv(ee,d,o);switch(i){case"nearest":K=sK(R,d,h,b,x,v,S,ne,Z,G,u);break;case"bilinear":K=iK(R,d,h,b,x,v,S,ne,Z,G,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}let te=S*T+B*_+U*E+G;A[te]=K}return n.makeTensorInfo(g,a.dtype,A)}return{dataId:n.write(A,g,a.dtype),shape:a.shape,dtype:a.dtype}}var eK={kernelName:Ql,backendName:"cpu",kernelFunc:Qq};function dv(e,t,r){switch(r){case"reflect":return tK(e,t);case"wrap":return rK(e,t);case"nearest":return aK(e,t);case"constant":default:return nK(e)}}function tK(e,t){let r=e;if(r<0)if(t<=1)r=0;else{let n=2*t;r<n&&(r=n*Math.trunc(-r/n)+r),r=r<-t?r+n:-r-1}else if(r>t-1)if(t<=1)r=0;else{let n=2*t;r-=n*Math.trunc(r/n),r>=t&&(r=n-r-1)}return w.clamp(0,r,t-1)}function rK(e,t){let r=e;if(r<0)if(t<=1)r=0;else{let n=t-1;r+=t*(Math.trunc(-r/n)+1)}else if(r>t-1)if(t<=1)r=0;else{let n=t-1;r-=t*Math.trunc(r/n)}return w.clamp(0,r,t-1)}function nK(e,t){return e}function aK(e,t){return w.clamp(0,e,t-1)}function Ou(e,t,r,n,a,s,i,o,u,p,l){let d=i*n+o*a+u*s+p;return 0<=o&&o<t&&0<=u&&u<r?e[d]:l}function sK(e,t,r,n,a,s,i,o,u,p,l){let d=Math.round(o),h=Math.round(u);return Ou(e,t,r,n,a,s,i,d,h,p,l)}function iK(e,t,r,n,a,s,i,o,u,p,l){let d=Math.floor(o),h=Math.floor(u),c=d+1,f=h+1,m=(f-u)*Ou(e,t,r,n,a,s,i,d,h,p,l)+(u-h)*Ou(e,t,r,n,a,s,i,d,f,p,l),g=(f-u)*Ou(e,t,r,n,a,s,i,c,h,p,l)+(u-h)*Ou(e,t,r,n,a,s,i,c,f,p,l);return(c-o)*m+(o-d)*g}function oK(e){let{inputs:t,attrs:r,backend:n}=e,{axis:a}=r,{x:s}=t;ye(s,"unique");let i=n.data.get(s.dataId).values,{outputValues:o,outputShape:u,indices:p}=dx(i,a,s.shape,s.dtype);return[n.makeTensorInfo(u,s.dtype,o),n.makeTensorInfo([p.length],"int32",p)]}var lK={kernelName:$p,backendName:"cpu",kernelFunc:oK};function uK(e){let{inputs:t,backend:r,attrs:n}=e,{value:a}=t,{axis:s}=n;s<0&&(s+=a.shape.length);let i=a.shape.length,o=a.shape[s],u=new Array(i-1),p=0;for(let c=0;c<i;c++)c!==s&&(u[p++]=a.shape[c]);let l=new Array(i).fill(0),d=a.shape.slice();d[s]=1;let h=new Array(o);for(let c=0;c<h.length;c++){l[s]=c;let f=zs({inputs:{x:a},backend:r,attrs:{begin:l,size:d}});h[c]=ct({inputs:{x:f},backend:r,attrs:{shape:u}}),r.disposeIntermediateTensorInfo(f)}return h}var pK={kernelName:eu,backendName:"cpu",kernelFunc:uK};function dK(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,segmentIds:s}=t,{numSegments:i}=n;ye(a,"unsortedSegmentSum");let o=a.shape.length,u=s.shape.length,p=[],l=[],d=o-u,h=s;for(let f=0;f<d;++f){let m=Nh({inputs:{input:h},backend:r,attrs:{dim:f+1}});h=m,l.push(m)}for(let f=0;f<i;++f){let m=w.createScalarValue(f,"int32"),g=r.makeTensorInfo([],"int32",m),y=wS({inputs:{a:g,b:h},backend:r}),b=Ba({inputs:{x:y},backend:r,attrs:{dtype:"float32"}}),x=rf({inputs:{a:b,b:a},backend:r}),v=ld({inputs:{x},backend:r,attrs:{axis:0,keepDims:!1}});p.push(v),l.push(g),l.push(y),l.push(b),l.push(x),l.push(v)}let c=fN({inputs:p,backend:r,attrs:{axis:0}});return l.forEach(f=>r.disposeIntermediateTensorInfo(f)),c}var hK={kernelName:Ap,backendName:"cpu",kernelFunc:dK},cK=[lH,GU,pH,hH,ZU,fH,gH,bH,wH,kH,SH,TH,_H,AH,RH,OH,LH,BH,VH,iH,GH,jH,KH,ZH,KU,YU,YH,HU,e6,r6,n6,s6,o6,u6,d6,c6,m6,y6,x6,v6,I6,N6,C6,_6,$6,F6,D6,M6,O6,z6,B6,QG,V6,QU,Z6,eG,J6,rG,nj,aj,ij,aG,iG,lj,pj,hj,fj,lG,pG,jU,gj,t6,bj,wj,kj,eH,hG,fG,Sj,gG,Tj,Ej,Aj,Dj,Oj,Lj,Pj,bG,Wj,Uj,Hj,qj,Xj,Jj,Qj,wG,t5,a5,l5,kG,SG,d5,f5,y5,TG,x5,v5,k5,mN,T5,rH,EG,_5,$5,F5,D5,qU,Im,O5,nH,aH,sH,L5,B5,V5,G5,j5,q5,X5,zG,J5,rq,aq,lq,PG,pq,hq,fq,BG,i5,yq,xq,vq,Iq,Nq,Cq,Eq,Aq,UG,Fq,HG,qG,Dq,Oq,Lq,Bq,Vq,JG,L6,Gq,jq,Kq,Zq,Yq,eK,CG,lK,pK,hK,w5];for(let e of cK)Fp(e);var gN={};Ee(gN,{assertNotComplex:()=>mu,bindCanvasToFramebuffer:()=>SK,bindColorTextureToFramebuffer:()=>Jd,bindTextureToProgramUniformSampler:()=>FN,bindTextureUnit:()=>EN,bindVertexBufferToProgramAttribute:()=>Nm,callAndCheck:()=>pe,canBeRepresented:()=>bN,createFragmentShader:()=>vN,createFramebuffer:()=>_N,createProgram:()=>kN,createStaticIndexBuffer:()=>NN,createStaticVertexBuffer:()=>SN,createTexture:()=>TN,createVertexShader:()=>wN,getBatchDim:()=>Ls,getExtensionOrThrow:()=>zu,getFramebufferErrorMessage:()=>RN,getMaxTexturesInShader:()=>zN,getNumChannels:()=>kK,getProgramUniformLocation:()=>AN,getProgramUniformLocationOrThrow:()=>$N,getRowsCols:()=>Ps,getShapeAs3D:()=>Pu,getTextureShapeFromLogicalShape:()=>MN,getWebGLDisjointQueryTimerVersion:()=>LN,getWebGLErrorMessage:()=>xN,getWebGLMaxTextureSize:()=>ON,hasExtension:()=>Jr,isCapableOfRenderingToFloatTexture:()=>PN,isDownloadFloatTextureEnabled:()=>BN,isReshapeFree:()=>ip,isWebGLFenceEnabled:()=>WN,isWebGLVersionEnabled:()=>Cm,linkProgram:()=>IN,logShaderSourceAndInfoLog:()=>gx,resetMaxTextureSize:()=>NK,resetMaxTexturesInShader:()=>TK,unbindColorTextureFromFramebuffer:()=>Tm,unbindTextureUnit:()=>IK,validateFramebuffer:()=>Lu,validateProgram:()=>Zd,validateTextureSize:()=>CN});var fs={},Bd={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function yN(e,t){fs[e]=t}function Cn(e,t){if(!(e in fs)||t!=null){let n=mK(e,t);if(n!==null)fs[e]=n;else return console.log("Could not get context for WebGL version",e),null}let r=fs[e];return r==null||r.isContextLost()?(delete fs[e],Cn(e)):(r.disable(r.DEPTH_TEST),r.disable(r.STENCIL_TEST),r.disable(r.BLEND),r.disable(r.DITHER),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SAMPLE_COVERAGE),r.enable(r.SCISSOR_TEST),r.enable(r.CULL_FACE),r.cullFace(r.BACK),fs[e])}function fK(e){if(!H().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&e===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function mK(e,t){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let r=t==null?fK(e):t;return r.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete fs[e]},!1),H().getBool("SOFTWARE_WEBGL_ENABLED")&&(Bd.failIfMajorPerformanceCaveat=!1),e===1?r.getContext("webgl",Bd)||r.getContext("experimental-webgl",Bd):r.getContext("webgl2",Bd)}var sp;(function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"})(sp||(sp={}));var Zr;(function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"})(Zr||(Zr={}));var tr;(function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(tr||(tr={}));function ud(e,t){return[t,e]}function gK(e,t){return e*t}function Wd(e){let t=w.sizeFromShape(e),r=Math.ceil(t/4);return w.sizeToSquarishShape(r)}function fu(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function yK(e,t){let[r,n]=fu(e,t);return r*n*4}function mx(e,t){let r=e,n,a,s,i,o,u,p,l,d,h;return H().getNumber("WEBGL_VERSION")===2?(n=r.R32F,a=r.R16F,s=r.RGBA16F,i=r.RGBA32F,o=r.RED,p=4,l=1,d=r.HALF_FLOAT,h=r.FLOAT,u=r.RGBA8):(n=e.RGBA,a=e.RGBA,s=e.RGBA,i=r.RGBA,o=e.RGBA,p=4,l=4,d=t!=null?t.HALF_FLOAT_OES:null,h=e.FLOAT,u=e.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:p,defaultNumChannels:l,textureTypeHalfFloat:d,textureTypeFloat:h}}function pe(e,t){let r=t();return H().getBool("DEBUG")&&bK(e),r}function bK(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+xN(e,t))}var xK=596e-10,wK=65504;function bN(e){return!!(H().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||xK<Math.abs(e)&&Math.abs(e)<wK)}function xN(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function zu(e,t){return fa(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function wN(e,t){let r=fa(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(pe(e,()=>e.shaderSource(r,t)),pe(e,()=>e.compileShader(r)),e.getShaderParameter(r,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(r)),new Error("Failed to compile vertex shader.");return r}function vN(e,t){let r=fa(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(pe(e,()=>e.shaderSource(r,t)),pe(e,()=>e.compileShader(r)),H().get("ENGINE_COMPILE_ONLY"))return r;if(e.getShaderParameter(r,e.COMPILE_STATUS)===!1)throw gx(t,e.getShaderInfoLog(r)),new Error("Failed to compile fragment shader.");return r}var vK=/ERROR: [0-9]+:([0-9]+):/g;function gx(e,t){let r=vK.exec(t);if(r==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let n=+r[1],a=e.split(`
`),s=a.length.toString().length+2,i=a.map((d,h)=>w.rightPad((h+1).toString(),s)+d),o=0;for(let d=0;d<i.length;d++)o=Math.max(i[d].length,o);let u=i.slice(0,n-1),p=i.slice(n-1,n),l=i.slice(n);console.log(u.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${w.rightPad(p[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join(`
`))}function kN(e){return fa(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function IN(e,t){if(pe(e,()=>e.linkProgram(t)),!H().get("ENGINE_COMPILE_ONLY")&&e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Zd(e,t){if(pe(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function SN(e,t){let r=fa(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return pe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),pe(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),r}function NN(e,t){let r=fa(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return pe(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,r)),pe(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),r}function kK(){return H().getNumber("WEBGL_VERSION")===2?1:4}function TN(e){return fa(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function CN(e,t){let r=H().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let n=`[${e}x${t}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(e>r||t>r){let n=`[${e}x${t}]`,a=`[${r}x${r}]`;throw new Error("Requested texture size "+n+" greater than WebGL maximum on this browser / GPU "+a+".")}}function _N(e){return fa(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Nm(e,t,r,n,a,s,i){let o=e.getAttribLocation(t,r);return o===-1?!1:(pe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),pe(e,()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i)),pe(e,()=>e.enableVertexAttribArray(o)),!0)}function EN(e,t,r){DN(e,r),pe(e,()=>e.activeTexture(e.TEXTURE0+r)),pe(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function IK(e,t){DN(e,t),pe(e,()=>e.activeTexture(e.TEXTURE0+t)),pe(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function $N(e,t,r){return fa(e,()=>e.getUniformLocation(t,r),'uniform "'+r+'" not present in program.')}function AN(e,t,r){return e.getUniformLocation(t,r)}function FN(e,t,r,n){pe(e,()=>EN(e,t,n)),pe(e,()=>e.uniform1i(r,n))}function SK(e){pe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),pe(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),pe(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function Jd(e,t,r){pe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,r)),pe(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function Tm(e,t){pe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),pe(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function Lu(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+RN(e,t))}function RN(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function fa(e,t,r){let n=pe(e,()=>t());if(n==null)throw new Error(r);return n}function DN(e,t){let r=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=t+e.TEXTURE0;if(n<e.TEXTURE0||n>r){let a=`[gl.TEXTURE0, gl.TEXTURE${r}]`;throw new Error(`textureUnit must be in ${a}.`)}}function Ls(e,t=2){return w.sizeFromShape(e.slice(0,e.length-t))}function Ps(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Pu(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[Ls(e),...Ps(e)]),t}function MN(e,t=!1){let r=H().getNumber("WEBGL_MAX_TEXTURE_SIZE"),n=H().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");n===1/0&&H().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(n=r/2),t&&(r=r*2,n=n*2,e=e.map((o,u)=>u>=e.length-2?w.nearestLargerEven(e[u]):e[u]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=w.squeezeShape(e).newShape);let a=w.sizeFromShape(e),s=null;e.length<=1&&a<=r?s=[1,a]:e.length===2&&e[0]<=r&&e[1]<=r?s=e:e.length===3&&e[0]*e[1]<=r&&e[2]<=r?s=[e[0]*e[1],e[2]]:e.length===3&&e[0]<=r&&e[1]*e[2]<=r?s=[e[0],e[1]*e[2]]:e.length===4&&e[0]*e[1]*e[2]<=r&&e[3]<=r?s=[e[0]*e[1]*e[2],e[3]]:e.length===4&&e[0]<=r&&e[1]*e[2]*e[3]<=r&&(s=[e[0],e[1]*e[2]*e[3]]);let i=s!=null&&Math.max(...s)>n&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(s==null||i)if(t){let o=Ls(e),u=2,p=2;e.length&&([u,p]=Ps(e)),a=o*(u/2)*(p/2),s=w.sizeToSquarishShape(a).map(l=>l*2)}else s=w.sizeToSquarishShape(a);return s}function Vd(e){return e%2===0}function ip(e,t){if(e=e.slice(-2),t=t.slice(-2),w.arraysEqual(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){let r=e[e.length-1],n=t[t.length-1];if(r===n||Vd(r)&&Vd(n)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&Vd(e[0])&&Vd(t[0])}var Yd,Qd;function ON(e){if(Yd==null){let t=Cn(e);Yd=t.getParameter(t.MAX_TEXTURE_SIZE)}return Yd}function NK(){Yd=null}function TK(){Qd=null}function zN(e){if(Qd==null){let t=Cn(e);Qd=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Qd)}function LN(e){if(e===0)return 0;let t,r=Cn(e);return Jr(r,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:Jr(r,"EXT_disjoint_timer_query")?t=1:t=0,t}function Jr(e,t){return e.getExtension(t)!=null}function Cm(e){try{if(Cn(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function PN(e){if(e===0)return!1;let t=Cn(e);if(e===1){if(!Jr(t,"OES_texture_float"))return!1}else if(!Jr(t,"EXT_color_buffer_float"))return!1;return _m(t)}function BN(e){if(e===0)return!1;let t=Cn(e);if(e===1){if(!Jr(t,"OES_texture_float")||!Jr(t,"WEBGL_color_buffer_float"))return!1}else{if(Jr(t,"EXT_color_buffer_float"))return _m(t);let r="EXT_color_buffer_half_float";if(Jr(t,r)){let n=t.getExtension(r);return CK(t,n)}return!1}return _m(t)}function _m(e){let t=mx(e),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),i}function CK(e,t){let r=mx(e,t),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,r.internalFormatHalfFloat,1,1,0,r.textureFormatFloat,r.textureTypeHalfFloat,null);let i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(i),o}function WN(e){return e!==2?!1:Cn(e).fenceSync!=null}function mu(e,t){Array.isArray(e)||(e=[e]),e.forEach(r=>{r!=null&&w.assert(r.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var xe=H();xe.registerFlag("HAS_WEBGL",()=>xe.getNumber("WEBGL_VERSION")>0);xe.registerFlag("WEBGL_VERSION",()=>Cm(2)?2:Cm(1)?1:0);xe.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);xe.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>xe.get("WEBGL_VERSION")===2);xe.registerFlag("WEBGL_CPU_FORWARD",()=>!0);xe.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);xe.registerFlag("WEBGL_PACK",()=>xe.getBool("HAS_WEBGL"));xe.registerFlag("WEBGL_PACK_NORMALIZATION",()=>xe.getBool("WEBGL_PACK"));xe.registerFlag("WEBGL_PACK_CLIP",()=>xe.getBool("WEBGL_PACK"));xe.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>xe.getBool("WEBGL_PACK"));xe.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>xe.getBool("WEBGL_PACK"));xe.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>xe.getBool("WEBGL_PACK"));xe.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>xe.getBool("WEBGL_PACK"));xe.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>xe.getBool("WEBGL_PACK"));xe.registerFlag("WEBGL_PACK_REDUCE",()=>xe.getBool("WEBGL_PACK"));xe.registerFlag("WEBGL_LAZILY_UNPACK",()=>xe.getBool("WEBGL_PACK"));xe.registerFlag("WEBGL_CONV_IM2COL",()=>xe.getBool("WEBGL_PACK"));xe.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>ON(xe.getNumber("WEBGL_VERSION")));xe.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>zN(xe.getNumber("WEBGL_VERSION")));xe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=xe.getNumber("WEBGL_VERSION");return e===0?0:LN(e)});xe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>xe.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Mp.isMobile());xe.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>PN(xe.getNumber("WEBGL_VERSION")));xe.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>xe.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:xe.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));xe.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>BN(xe.getNumber("WEBGL_VERSION")));xe.registerFlag("WEBGL_FENCE_API_ENABLED",()=>WN(xe.getNumber("WEBGL_VERSION")));xe.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>xe.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);xe.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)});xe.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Mp.isMobile()?1:-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});xe.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);xe.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);xe.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);xe.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);xe.registerFlag("WEBGL_EXP_CONV",()=>!1);xe.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>xe.getBool("IS_TEST"));xe.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);xe.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);xe.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);xe.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);function xr(){let e,t,r,n,a,s,i,o,u,p;return H().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",r="out",n="in",a="texture",s="outputColor",i="out vec4 outputColor;",o=H().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",u="",p=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",r="varying",n="varying",a="texture2D",s="gl_FragColor",i="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,p=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:r,varyingFs:n,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:p}}function po(e,t,r="index"){let n=w.computeStrides(t);return n.map((a,s)=>{let i=`int ${e[s]} = ${r} / ${a}`,o=s===n.length-1?`int ${e[s+1]} = ${r} - ${e[s]} * ${a}`:`index -= ${e[s]} * ${a}`;return`${i}; ${o};`}).join("")}function nf(e,t,r="index"){let n=w.computeStrides(t);return n.map((a,s)=>{let i=`int ${e[s]} = ${r} / outShapeStrides[${s}]`,o=s===n.length-1?`int ${e[s+1]} = ${r} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`;return`${i}; ${o};`}).join("")}function _K(e,t){let r=e.length,n=e.map(s=>`${t}[${s}]`),a=new Array(r-1);a[r-2]=n[r-1];for(let s=r-3;s>=0;--s)a[s]=`(${a[s+1]} * ${n[s+1]})`;return a}function EK(e,t,r="index"){let n=e.map((s,i)=>i),a=_K(n,t);return a.map((s,i)=>{let o=`int ${e[i]} = ${r} / ${a[i]}`,u=i===a.length-1?`int ${e[i+1]} = ${r} - ${e[i]} * ${a[i]}`:`index -= ${e[i]} * ${a[i]}`;return`${o}; ${u};`}).join("")}function yx(e){let t=w.computeStrides(e).map(r=>r.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function bx(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var VN=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:UN}=N;function $K(e,t,r){let n=[];if(e.forEach(h=>{let c=w.sizeFromShape(h.shapeInfo.logicalShape);if(h.shapeInfo.isUniform?n.push(`uniform float ${h.name}${c>1?`[${c}]`:""};`):(n.push(`uniform sampler2D ${h.name};`),n.push(`uniform int offset${h.name};`)),r.enableShapeUniforms){let{uniformShape:f}=xx(r.packedInputs,h.shapeInfo.logicalShape,h.shapeInfo.texShape);switch(f.length){case 1:n.push(`uniform int ${h.name}Shape;`);break;case 2:n.push(`uniform ivec2 ${h.name}Shape;`);break;case 3:n.push(`uniform ivec3 ${h.name}Shape;`);break;case 4:n.push(`uniform ivec4 ${h.name}Shape;`);break}n.push(`uniform ivec2 ${h.name}TexShape;`)}}),r.enableShapeUniforms){switch(t.logicalShape.length){case 1:n.push("uniform int outShape;");break;case 2:n.push("uniform ivec2 outShape;"),n.push("uniform int outShapeStrides;");break;case 3:n.push("uniform ivec3 outShape;"),n.push("uniform ivec2 outShapeStrides;");break;case 4:n.push("uniform ivec4 outShape;"),n.push("uniform ivec3 outShapeStrides;");break}n.push("uniform ivec2 outTexShape;")}r.customUniforms&&r.customUniforms.forEach(h=>{n.push(`uniform ${h.type} ${h.name}${h.arrayIndex?`[${h.arrayIndex}]`:""};`)});let a=n.join(`
`),s=e.map(h=>AK(h,t,r.packedInputs,r.enableShapeUniforms)).join(`
`),i=t.texShape,o=xr(),u=DK(o),p,l,d=zK(o);return t.isPacked?(p=FK(t.logicalShape,i,r.enableShapeUniforms),l=OK(o)):(p=RK(t.logicalShape,i,r.enableShapeUniforms),l=MK(o)),r.packedInputs&&(d+=WK),[d,u,l,a,p,s,r.userCode].join(`
`)}function gu(e,t=!1){let r=e.shapeInfo.logicalShape;switch(r.length){case 0:return QK(e,t);case 1:return t8(e,t);case 2:return n8(e,t);case 3:return s8(e,t);case 4:return o8(e,t);case 5:return l8(e);case 6:return u8(e);default:throw new Error(`${r.length}-D input sampling is not yet supported`)}}function GN(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return YK(e);case 1:return e8(e,t);case 2:return r8(e,t);case 3:return a8(e,t);default:return i8(e,t)}}function AK(e,t,r=!1,n){let a="";r?a+=GN(e,n):a+=gu(e,n);let s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(r?a+=p8(e,t):a+=d8(e,t)),a}function FK(e,t,r){switch(e.length){case 0:return HN();case 1:return VK(e,t,r);case 2:return ZK(e,t,r);case 3:return GK(e,t,r);default:return jK(e,t,r)}}function RK(e,t,r){switch(e.length){case 0:return HN();case 1:return UK(e,t,r);case 2:return JK(e,t,r);case 3:return HK(e,t,r);case 4:return qK(e,t,r);case 5:return KK(e,t);case 6:return XK(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function DK(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function MK(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function OK(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function zK(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${LK}
    ${PK}
    ${BK}
  `}var LK=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,PK=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,BK=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,WK=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function HN(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function VK(e,t,r){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return n[0]===1?r?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${n[1]}.0);
      }
    `:n[1]===1?r?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${n[0]}.0);
      }
    `:r?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);
    }
  `}function UK(e,t,r){return t[0]===1?r?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?r?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:r?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function GK(e,t,r){if(r)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec3(b, r, c);
    }
  `}function HK(e,t,r){if(r)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${nf(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;let n=po(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec3(r, c, d);
    }
  `}function jK(e,t,r){if(r)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2),i=s,o="",u="b, r, c";for(let p=2;p<e.length-1;p++)i*=e[e.length-p-1],o=`
      int b${p} = index / ${i};
      index -= b${p} * ${i};
    `+o,u=`b${p}, `+u;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${o}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec${e.length}(${u});
    }
  `}function qK(e,t,r){if(r)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${nf(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;let n=po(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec4(r, c, d, d2);
    }
  `}function KK(e,t){let r=po(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${r}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function XK(e,t){let r=po(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${r}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function ZK(e,t,r){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(w.arraysEqual(e,t))return r?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));
      }
    `;let a=Math.ceil(e[1]/2);return r?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));

      int index = resTexRC.x * ${n[1]} + resTexRC.y;
      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec2(r, c);
    }
  `}function JK(e,t,r){return w.arraysEqual(e,t)?r?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?r?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?r?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:r?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function ho(e){return`offset${e}`}function YK(e){let t=e.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),n=xr();return`
    vec4 ${r}() {
      return ${n.texture2D}(${t}, halfCR);
    }
  `}function QK(e,t){let r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${r};}`;let[a,s]=e.shapeInfo.texShape;if(a===1&&s===1)return`
      float ${n}() {
        return sampleTexture(${r}, halfCR);
      }
    `;let i=ho(r);if(t)return`
    float ${n}() {
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], ${i});
      return sampleTexture(${r}, uv);
    }
  `;let[o,u]=e.shapeInfo.texShape;return`
    float ${n}() {
      vec2 uv = uvFromFlat(${o}, ${u}, ${i});
      return sampleTexture(${r}, uv);
    }
  `}function e8(e,t){let r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,s=xr();if(t)return`
    vec4 ${n}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${r}, uv);
    }
  `;let i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`
    vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${s.texture2D}(${r}, uv);
    }
  `}function t8(e,t){let r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1);if(e.shapeInfo.isUniform)return`
      float ${n}(int index) {
        ${yu(e)}
      }
    `;let a=e.shapeInfo.texShape,s=a[0],i=a[1];if(i===1&&s===1)return`
      float ${n}(int index) {
        return sampleTexture(${r}, halfCR);
      }
    `;let o=ho(r);return i===1?t?`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);
        return sampleTexture(${r}, uv);
      }
    `:s===1?t?`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${r}, uv);
      }
    `:t?`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${o});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});
      return sampleTexture(${r}, uv);
    }
  `}function r8(e,t){let r=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],u=xr();if(s!=null&&w.arraysEqual(r,s))return t?`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);

        return ${u.texture2D}(${n}, uv);
      }
    `:`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);

        return ${u.texture2D}(${n}, uv);
      }
    `;if(t)return`
    vec4 ${a}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${n}, uv);
    }
  `;let p=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],l=Math.ceil(r[1]/2);return`
    vec4 ${a}(int row, int col) {
      vec2 uv = packedUVfrom2D(${l}, ${p[0]}, ${p[1]}, row, col);
      return ${u.texture2D}(${n}, uv);
    }
  `}function n8(e,t){let r=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape;if(s!=null&&w.arraysEqual(r,s)){if(t)return`
      float ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `;let h=s[0],c=s[1];return`
    float ${a}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${c}.0, ${h}.0);
      return sampleTexture(${n}, uv);
    }
  `}let{newShape:i,keptDims:o}=w.squeezeShape(r),u=i;if(u.length<r.length){let h=bu(e,u),c=["row","col"];return`
      ${gu(h,t)}
      float ${a}(int row, int col) {
        return ${a}(${xu(c,o)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${r[1]}, 1)));
        ${yu(e)}
      }
    `;let p=s[0],l=s[1],d=ho(n);return l===1?t?`
      float ${a}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${r[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${p}.0);
      return sampleTexture(${n}, uv);
    }
  `:p===1?t?`
      float ${a}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${r[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);
      return sampleTexture(${n}, uv);
    }
  `:t?`
      float ${a}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${n}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
        return sampleTexture(${n}, uv);
      }
    `:`
  float ${a}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${r[1]} + col + ${d};
    vec2 uv = uvFromFlat(${p}, ${l}, index);
    return sampleTexture(${n}, uv);
  }
`}function a8(e,t){let r=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(r[0]===1){let h=r.slice(1),c=[1,2],f=bu(e,h),m=["b","row","col"];return`
        ${GN(f,t)}
        vec4 ${a}(int b, int row, int col) {
          return ${a}(${xu(m,c)});
        }
      `}let o=xr();if(t)return`
    vec4 ${a}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${o.texture2D}(${n}, uv);
    }
  `;let u=i[0],p=i[1],l=Math.ceil(r[2]/2),d=l*Math.ceil(r[1]/2);return`
    vec4 ${a}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${p}, ${d}, ${l}, b, row, col);
      return ${o.texture2D}(${n}, uv);
    }
  `}function s8(e,t){let r=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r[1]*r[2],i=r[2],{newShape:o,keptDims:u}=w.squeezeShape(r),p=o;if(p.length<r.length){let m=bu(e,p),g=["row","col","depth"];return`
        ${gu(m,t)}
        float ${a}(int row, int col, int depth) {
          return ${a}(${xu(g,u)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${i}, 1)));
        ${yu(e)}
      }
    `;let l=e.shapeInfo.texShape,d=l[0],h=l[1],c=e.shapeInfo.flatOffset;if(h===s&&c==null)return t?`
      float ${a}(int row, int col, int depth) {
        int stride1 = ${n}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
        float ${a}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${h}.0, ${d}.0);
          return sampleTexture(${n}, uv);
        }
      `;if(h===i&&c==null)return t?`
      float ${a}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${n}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${a}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${r[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${d}.0);
      return sampleTexture(${n}, uv);
    }
  `;let f=ho(n);return t?`
    float ${a}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${n}Shape[1] * ${n}Shape[2];
      int stride1 = ${n}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
      return sampleTexture(${n}, uv);
    }
    `:`
      float ${a}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${i} + depth + ${f};
        vec2 uv = uvFromFlat(${d}, ${h}, index);
        return sampleTexture(${n}, uv);
      }
  `}function i8(e,t){let r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1),a=xr();if(t)return`
    vec4 ${n}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${r}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${r}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${r}, uv);
    }
  `;let s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],p=u[0],l=u[1],d=Math.ceil(s[i-1]/2),h=d*Math.ceil(s[i-2]/2),c="int b, int row, int col",f=`b * ${h} + (row / 2) * ${d} + (col / 2)`;for(let m=2;m<i-1;m++)c=`int b${m}, `+c,h*=s[i-m-1],f=`b${m} * ${h} + `+f;return`
    vec4 ${n}(${c}) {
      int index = ${f};
      int texR = index / ${l};
      int texC = index - texR * ${l};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${p});
      return ${a.texture2D}(${r}, uv);
    }
  `}function o8(e,t){let r=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r[3],i=r[2]*s,o=r[1]*i,{newShape:u,keptDims:p}=w.squeezeShape(r);if(u.length<r.length){let b=bu(e,u),x=["row","col","depth","depth2"];return`
      ${gu(b,t)}
      float ${a}(int row, int col, int depth, int depth2) {
        return ${a}(${xu(x,p)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${o}, ${i}, ${s}, 1)));
        ${yu(e)}
      }
    `;let l=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],c=d[1],f=`int stride2 = ${n}Shape[3];`,m=`int stride1 = ${n}Shape[2] * stride2;`,g=`int stride0 = ${n}Shape[1] * stride1;`;if(c===o&&l==null)return t?`
      float ${a}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${c}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(c===s&&l==null)return t?`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n}Shape[1] * ${n}Shape[2], ${n}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r[1]*r[2]}, ${r[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${c}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;let y=ho(n);return t?`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${y});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${h}, ${c}, index + ${y});
      return sampleTexture(${n}, uv);
    }
  `}function l8(e){let t=e.shapeInfo.logicalShape,r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:u,keptDims:p}=w.squeezeShape(t);if(u.length<t.length){let m=bu(e,u),g=["row","col","depth","depth2","depth3"];return`
      ${gu(m)}
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        return ${n}(${xu(g,p)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${o}, ${i}, ${s}, ${a})) +
          depth3;
        ${yu(e)}
      }
    `;let l=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],c=d[1];if(c===o&&l==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${s}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${c}.0, ${h}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(c===a&&l==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${c}.0, ${h}.0);
        return sampleTexture(${r}, uv);
      }
    `;let f=ho(r);return`
    float ${n}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} + depth * ${s} +
          depth2 * ${a} + depth3 + ${f};
      vec2 uv = uvFromFlat(${h}, ${c}, index);
      return sampleTexture(${r}, uv);
    }
  `}function u8(e){let t=e.shapeInfo.logicalShape,r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1),{newShape:a,keptDims:s}=w.squeezeShape(t);if(a.length<t.length){let g=bu(e,a),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${gu(g)}
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${n}(${xu(y,s)});
      }
    `}let i=t[5],o=t[4]*i,u=t[3]*o,p=t[2]*u,l=t[1]*p;if(e.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${p}, ${u}, ${o})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${yu(e)}
      }
    `;let d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,c=h[0],f=h[1];if(f===l&&d==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${p}, ${u}, ${o}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${c}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(f===i&&d==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${c}.0);
        return sampleTexture(${r}, uv);
      }
    `;let m=ho(r);return`
    float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${p} + depth * ${u} +
          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};
      vec2 uv = uvFromFlat(${c}, ${f}, index);
      return sampleTexture(${r}, uv);
    }
  `}function yu(e){let t=e.name,r=w.sizeFromShape(e.shapeInfo.logicalShape);return r<2?`return ${t};`:`
    for (int i = 0; i < ${r}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function p8(e,t){let r=e.name,n=r.charAt(0).toUpperCase()+r.slice(1),a="get"+n+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=UN(e.shapeInfo.logicalShape,t.logicalShape),u=it(i),p=i-s,l,d=["x","y","z","w","u","v"];s===0?l="":i<2&&o.length>=1?l="coords = 0;":l=o.map(g=>`coords.${d[g+p]} = 0;`).join(`
`);let h="";i<2&&s>0?h="coords":h=e.shapeInfo.logicalShape.map((g,y)=>`coords.${d[y+p]}`).join(", ");let c="return outputValue;",f=w.sizeFromShape(e.shapeInfo.logicalShape)===1,m=w.sizeFromShape(t.logicalShape)===1;if(s===1&&!f&&!m)c=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(f&&!m)i===1?c=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:c=`
        return vec4(outputValue.x);
      `;else if(o.length){let g=s-2,y=s-1;o.indexOf(g)>-1&&o.indexOf(y)>-1?c="return vec4(outputValue.x);":o.indexOf(g)>-1?c="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(y)>-1&&(c="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${a}() {
      ${u} coords = getOutputCoords();
      ${l}
      vec4 outputValue = get${n}(${h});
      ${c}
    }
  `}function d8(e,t){let r=e.name,n=r.charAt(0).toUpperCase()+r.slice(1),a="get"+n+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&e.shapeInfo.flatOffset==null&&w.arraysEqual(i,s))return`
      float ${a}() {
        return sampleTexture(${r}, resultUV);
      }
    `;let p=it(u),l=UN(e.shapeInfo.logicalShape,t.logicalShape),d=u-o,h,c=["x","y","z","w","u","v"];o===0?h="":u<2&&l.length>=1?h="coords = 0;":h=l.map(m=>`coords.${c[m+d]} = 0;`).join(`
`);let f="";return u<2&&o>0?f="coords":f=e.shapeInfo.logicalShape.map((m,g)=>`coords.${c[g+d]}`).join(", "),`
    float ${a}() {
      ${p} coords = getOutputCoords();
      ${h}
      return get${n}(${f});
    }
  `}function it(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function xx(e,t,r){let{newShape:n,keptDims:a}=w.squeezeShape(t),s=t.length,i=e&&s===3&&t[0]===1,o=i?t.slice(1):n,u=!e&&s>1&&!w.arraysEqual(t,r)&&n.length<s||i;return{useSqueezeShape:u,uniformShape:u?o:t,keptDims:a}}function bu(e,t){let r=JSON.parse(JSON.stringify(e));return r.shapeInfo.logicalShape=t,r}function xu(e,t){return t.map(r=>e[r]).join(", ")}function h8(e,t,r,n){let a=r.map((l,d)=>{let h={logicalShape:l.shape,texShape:l.isUniform?null:l.texData.texShape,isUniform:l.isUniform,isPacked:l.isUniform?!1:l.texData.isPacked,flatOffset:null};return l.texData!=null&&l.texData.slice!=null&&l.texData.slice.flatOffset>0&&(h.flatOffset=l.texData.slice.flatOffset),{name:t.variableNames[d],shapeInfo:h}}),s=a.map(l=>l.shapeInfo),i={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},o=$K(a,i,t),u=vN(e.gl,o),p=e.createProgram(u);return H().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:o,webGLProgram:p,inShapeInfos:s,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:u,source:o,webGLProgram:p,inShapeInfos:s,outShapeInfo:i},jN(e,t,p))}function jN(e,t,r){let n=[],a=[],s,i,o,u=null,p=null;p=e.getUniformLocation(r,"NAN",!1),H().getNumber("WEBGL_VERSION")===1&&(u=e.getUniformLocation(r,"INFINITY",!1));let l=!1;for(let d of t.variableNames){let h={name:d,uniform:e.getUniformLocation(r,d,l),offset:e.getUniformLocation(r,`offset${d}`,l)};t.enableShapeUniforms&&(h.shape=e.getUniformLocation(r,`${d}Shape`,l),h.texShape=e.getUniformLocation(r,`${d}TexShape`,l)),n.push(h)}if(t.enableShapeUniforms&&(s=e.getUniformLocation(r,"outShape",l),o=e.getUniformLocation(r,"outShapeStrides",l),i=e.getUniformLocation(r,"outTexShape",l)),t.customUniforms)for(let d of t.customUniforms)a.push(e.getUniformLocation(r,d.name,l));return{variablesLocations:n,customUniformLocations:a,infLoc:u,nanLoc:p,outShapeLocation:s,outShapeStridesLocation:o,outTexShapeLocation:i}}function hv(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((r,n)=>{let a=r.logicalShape,s=t[n],i=s.shape;if(!w.arraysEqual(a,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${i} must match`);if(r.isUniform&&s.isUniform)return;let o=r.texShape,u=s.isUniform?null:s.texData.texShape;if(!w.arraysEqual(o,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${u} must match`)})}function c8(e,t,r,n,a){t.program.enableShapeUniforms||(hv(t.inShapeInfos,r),hv([t.outShapeInfo],[n]));let s=n.texData.texture,i=n.texData.texShape;n.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),H().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN);for(let u=0;u<r.length;++u){let p=r[u],{uniform:l,offset:d,shape:h,texShape:c}=t.variablesLocations[u];if(h){let{uniformShape:f}=xx(t.program.packedInputs,p.shape,p.texData.texShape);switch(f.length){case 1:e.gl.uniform1iv(h,new Int32Array(f));break;case 2:e.gl.uniform2iv(h,new Int32Array(f));break;case 3:e.gl.uniform3iv(h,new Int32Array(f));break;case 4:e.gl.uniform4iv(h,new Int32Array(f));break}}if(c&&e.gl.uniform2i(c,p.texData.texShape[0],p.texData.texShape[1]),l!=null){if(p.isUniform){if(w.sizeFromShape(p.shape)<2)e.gl.uniform1f(l,p.uniformValues[0]);else{let f=p.uniformValues;f instanceof Float32Array||(f=new Float32Array(f)),e.gl.uniform1fv(l,f)}continue}p.texData.slice!=null&&d!=null&&e.gl.uniform1i(d,p.texData.slice.flatOffset),e.setInputMatrixTexture(p.texData.texture.texture,l,u)}}let o=t.outShapeLocation;if(o)switch(n.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(n.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(n.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(n.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(n.shape));break}if(t.outShapeStridesLocation){let u=w.computeStrides(n.shape);switch(n.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(u));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(u));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(u));break}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,n.texData.texShape[0],n.texData.texShape[1]),t.program.customUniforms&&a)for(let u=0;u<t.program.customUniforms.length;++u){let p=t.program.customUniforms[u],l=t.customUniformLocations[u],d=a[u];if(p.type==="float")e.gl.uniform1fv(l,d);else if(p.type==="vec2")e.gl.uniform2fv(l,d);else if(p.type==="vec3")e.gl.uniform3fv(l,d);else if(p.type==="vec4")e.gl.uniform4fv(l,d);else if(p.type==="int")e.gl.uniform1iv(l,d);else if(p.type==="ivec2")e.gl.uniform2iv(l,d);else if(p.type==="ivec3")e.gl.uniform3iv(l,d);else if(p.type==="ivec4")e.gl.uniform4iv(l,d);else throw Error(`uniform type ${p.type} is not supported yet.`)}e.executeProgram()}function f8(e,t,r){let n="";t.concat(r).forEach(i=>{let o=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!i.isUniform){let u=i.texData.texShape,{useSqueezeShape:p,uniformShape:l,keptDims:d}=xx(e.packedInputs,i.shape,u),h="",c="",f="";if(l.length===1&&e.packedInputs){let I=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];h=`${I[0]>1}_${I[1]>1}`}else if(l.length===2&&!e.packedInputs)c=`${l[0]>1}_${l[1]>1}`;else if(l.length>2&&!e.packedInputs){let I=w.computeStrides(l);f=`${I[0]===u[1]}_${I[I.length-1]===u[1]}`}let m=i.shape.length,g=l.length===2&&w.arraysEqual(i.shape,u),y=w.sizeFromShape(i.shape)===1,b=N.getBroadcastDims(i.shape,r.shape),x=!e.packedInputs&&m===r.shape.length&&w.arraysEqual(u,r.texData.texShape),v=e.packedInputs||l.length>2?"":`${u[0]>1}_${u[1]>1}`;n+=`${m}_${x}_${p?d:""}_${l.length}_${y}_${b}_${g}_${h}_${c}_${f}_${v}_${o}`}else{let u=i.isUniform?"uniform":i.texData.texShape;n+=`${i.shape}_${u}_${o}`}});let a=e.userCode,s=e.constructor.name;return s+="_"+n+"_"+a+`${H().getNumber("WEBGL_VERSION")}`,s}function or(e){return H().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var m8=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=sp.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=xr();this.outputShape=e,this.enableShapeUniforms=or(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?nf(["r","c","d"],e):po(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}},g8=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=sp.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=xr();this.outputShape=e,this.enableShapeUniforms=or(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?nf(["r","c","d"],e):po(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}},y8=class{constructor(e){this.variableNames=["A"],this.outTexUsage=Zr.DOWNLOAD;let t=xr();this.outputShape=e,this.userCode=`
      ${VN}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},b8=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Zr.DOWNLOAD;let t=xr();this.outputShape=e,this.userCode=`
      ${VN}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},x8={R:0,G:1,B:2,A:3},cv=class{constructor(e,t=!1,r="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=xr();this.outputShape=e,this.enableShapeUniforms=or(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)");let s="";for(let i=0;i<r.length;i++){let o=r[i];s+=`
          if(offset == ${i}) {
            result = values[${x8[o]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?bx():yx(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${r.length});

        flatIndex = idiv(flatIndex, ${r.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${n.texture2D}(A, uv);
          ${s}
        }
        ${n.output} = vec4(${a}, 0., 0., 0.);
      }
    `}},w8=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let r=xr();this.outputShape=e,this.enableShapeUniforms=or(this.outputShape.length);let n="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let i=0;i<=1;i++){let o=s*2+i;n+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${s} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${s};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${r.texture2D}(A, uv);

            if (offset == 0) {
              result[${o}] = values[0];
            } else if (offset == 1) {
              result[${o}] = values[1];
            } else if (offset == 2) {
              result[${o}] = values[2];
            } else {
              result[${o}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?bx():yx(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${n}

          ${r.output} = ${a};
        }
    `}},qN={};Ee(qN,{bindVertexProgramAttributeStreams:()=>r2,createBufferFromOutputTexture:()=>s2,createFloat16MatrixTexture:()=>YN,createFloat16PackedMatrixTexture:()=>t2,createFloat32MatrixTexture:()=>JN,createIndexBuffer:()=>ZN,createPackedMatrixTexture:()=>e2,createUnsignedBytesMatrixTexture:()=>QN,createVertexBuffer:()=>XN,createVertexShader:()=>KN,downloadByteEncodedFloatMatrixFromOutputTexture:()=>o2,downloadFloat32MatrixFromBuffer:()=>i2,downloadMatrixFromPackedOutputTexture:()=>u2,downloadPackedMatrixFromBuffer:()=>l2,getInternalFormatForFloat16MatrixTexture:()=>vx,getInternalFormatForFloat16PackedMatrixTexture:()=>Sx,getInternalFormatForFloat32MatrixTexture:()=>wx,getInternalFormatForPackedMatrixTexture:()=>Ix,getInternalFormatForUnsignedBytesMatrixTexture:()=>kx,uploadDenseMatrixToTexture:()=>n2,uploadPixelDataToTexture:()=>a2});function KN(e){let t=xr(),r=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return wN(e,r)}function XN(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return SN(e,t)}function ZN(e){let t=new Uint16Array([0,1,2,2,1,3]);return NN(e,t)}function pd(e,t,r,n,a,s){CN(t,r);let i=TN(e),o=e.TEXTURE_2D;return pe(e,()=>e.bindTexture(o,i)),pe(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),pe(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),pe(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),pe(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),H().getNumber("WEBGL_VERSION")===1?pe(e,()=>e.texImage2D(o,0,n,t,r,0,a,s,null)):pe(e,()=>e.texStorage2D(o,1,n,t,r)),pe(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:i,texShape:[r,t]}}function wx(e){return e.internalFormatFloat}function JN(e,t,r,n){let[a,s]=ud(t,r);return pd(e,a,s,wx(n),n.textureFormatFloat,e.FLOAT)}function vx(e){return e.internalFormatHalfFloat}function YN(e,t,r,n){let[a,s]=ud(t,r);return pd(e,a,s,vx(n),n.textureFormatFloat,n.textureTypeHalfFloat)}function kx(e){return e.downloadTextureFormat}function QN(e,t,r,n){let[a,s]=ud(t,r);return pd(e,a,s,kx(n),e.RGBA,e.UNSIGNED_BYTE)}function Ix(e){return e.internalFormatPackedFloat}function e2(e,t,r,n){let[a,s]=fu(t,r);return pd(e,a,s,Ix(n),e.RGBA,e.FLOAT)}function Sx(e){return e.internalFormatPackedHalfFloat}function t2(e,t,r,n){let[a,s]=fu(t,r);return pd(e,a,s,Sx(n),e.RGBA,n.textureTypeHalfFloat)}function r2(e,t,r){return pe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),Nm(e,t,"clipSpacePos",r,3,20,0)&&Nm(e,t,"uv",r,2,20,12)}function n2(e,t,r,n,a,s){pe(e,()=>e.bindTexture(e.TEXTURE_2D,t));let i,o,u;a instanceof Uint8Array?(i=new Uint8Array(r*n*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(r*n*4),o=e.FLOAT,u=s.internalFormatPackedFloat),i.set(a),H().getNumber("WEBGL_VERSION")===2?pe(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,r,n,e.RGBA,o,i)):pe(e,()=>e.texImage2D(e.TEXTURE_2D,0,u,r,n,0,e.RGBA,o,i)),pe(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function a2(e,t,r){pe(e,()=>e.bindTexture(e.TEXTURE_2D,t)),r.data instanceof Uint8Array?H().getNumber("WEBGL_VERSION")===2?pe(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,r.width,r.height,e.RGBA,e.UNSIGNED_BYTE,r.data)):pe(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,r.width,r.height,0,e.RGBA,e.UNSIGNED_BYTE,r.data)):H().getNumber("WEBGL_VERSION")===2?pe(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,r)):pe(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,r)),pe(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function s2(e,t,r,n){let a=e.createBuffer();pe(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a));let s=4*4*t*r;return pe(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)),pe(e,()=>e.readPixels(0,0,r,t,e.RGBA,e.FLOAT,0)),pe(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),a}function i2(e,t,r){let n=e,a=new Float32Array(r);return n.bindBuffer(n.PIXEL_PACK_BUFFER,t),n.getBufferSubData(n.PIXEL_PACK_BUFFER,0,a),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),a}function o2(e,t,r,n){let[a,s]=ud(t,r),i=4,o=new Uint8Array(gK(t*r,i));return pe(e,()=>e.readPixels(0,0,a,s,n.downloadTextureFormat,e.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}function l2(e,t,r,n,a,s,i,o){let u=e,p=new Float32Array(yK(s,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,p),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),p}function u2(e,t,r){let n=new Float32Array(t*r*4);return pe(e,()=>e.readPixels(0,0,r,t,e.RGBA,e.FLOAT,n)),n}var eh=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let t=H().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,yN(t,e)):this.gl=Cn(t),e=this.gl,H().getNumber("WEBGL_VERSION")===2){let a=e;this.createVertexArray=()=>pe(a,()=>a.createVertexArray()),this.bindVertexArray=s=>pe(a,()=>a.bindVertexArray(s)),this.deleteVertexArray=s=>pe(a,()=>a.deleteVertexArray(s)),this.getVertexArray=()=>pe(a,()=>a.getParameter(a.VERTEX_ARRAY_BINDING))}else if(e!=null){let a=e.getExtension("OES_vertex_array_object");if(a==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>pe(e,()=>a.createVertexArrayOES()),this.bindVertexArray=s=>pe(e,()=>a.bindVertexArrayOES(s)),this.deleteVertexArray=s=>pe(e,()=>a.deleteVertexArrayOES(s)),this.getVertexArray=()=>pe(e,()=>e.getParameter(a.VERTEX_ARRAY_BINDING_OES))}let r="WEBGL_color_buffer_float",n="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),H().getNumber("WEBGL_VERSION")===1){let a="OES_texture_float",s="OES_texture_half_float";if(this.textureFloatExtension=zu(this.gl,a),Jr(this.gl,s))this.textureHalfFloatExtension=zu(this.gl,s);else if(H().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(r),Jr(this.gl,n))this.colorBufferHalfFloatExtension=zu(this.gl,n);else if(H().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(r="EXT_color_buffer_float",Jr(this.gl,r))this.colorBufferFloatExtension=this.gl.getExtension(r);else if(Jr(this.gl,n))this.colorBufferHalfFloatExtension=this.gl.getExtension(n);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=XN(this.gl),this.indexBuffer=ZN(this.gl),this.framebuffer=_N(this.gl),this.textureConfig=mx(this.gl,this.textureHalfFloatExtension)}get debug(){return H().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;pe(e,()=>e.finish()),pe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),pe(e,()=>e.deleteFramebuffer(this.framebuffer)),pe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),pe(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),pe(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),JN(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),YN(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),QN(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),a2(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,r,n){this.throwIfDisposed(),n2(this.gl,e,t,r,n,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),t2(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),e2(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Tm(this.gl,this.framebuffer),this.outputTexture=null),pe(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,r){return this.downloadMatrixDriver(e,()=>o2(this.gl,t,r,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,r,n,a,s){return l2(this.gl,e,t,r,n,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return i2(this.gl,e,t)}createBufferFromTexture(e,t,r){this.bindTextureToFrameBuffer(e);let n=s2(this.gl,t,r,this.textureConfig);return this.unbindTextureToFrameBuffer(),n}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,r;if(H().getBool("WEBGL_FENCE_API_ENABLED")){let n=e,a=n.fenceSync(n.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),r=()=>{let s=n.clientWaitSync(a,0,0);return s===n.ALREADY_SIGNALED||s===n.CONDITION_SATISFIED},t=a}else H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),r=()=>this.isQueryAvailable(t,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):r=()=>!0;return{query:t,isFencePassed:r}}downloadMatrixFromPackedTexture(e,t,r){return this.downloadMatrixDriver(e,()=>u2(this.gl,t,r))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=KN(t));let r=kN(t);pe(t,()=>t.attachShader(r,this.vertexShader)),pe(t,()=>t.attachShader(r,e)),IN(t,r);let n;return n=Object.assign(r,{vao:this.createVertexArray()}),this.bindVertexArray(n.vao),pe(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),console.assert(r2(t,n,this.vertexBuffer),"gpgpu_util.bindVertexProgramAttributeStreams not fully successful."),this.debug&&Zd(t,n),this.setProgram(n),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(pe(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&(this.bindVertexArray(this.program.vao),this.debug&&Zd(this.gl,this.program)),pe(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,r=!0){return this.throwIfDisposed(),r?$N(this.gl,e,t):AN(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),pe(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,r){this.throwIfDisposed(),this.throwIfNoProgram(),FN(this.gl,e,t,r)}setOutputMatrixTexture(e,t,r){this.setOutputMatrixTextureDriver(e,r,t)}setOutputPackedMatrixTexture(e,t,r){this.throwIfDisposed();let[n,a]=fu(t,r);this.setOutputMatrixTextureDriver(e,n,a)}setOutputMatrixWriteRegion(e,t,r,n){this.setOutputMatrixWriteRegionDriver(r,e,n,t)}setOutputPackedMatrixWriteRegion(e,t,r,n){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Zd(this.gl,this.program),Lu(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;if(this.debug){let t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}pe(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),pe(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=zu(this.gl,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let r=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=r.createQuery();return r.beginQuery(n.TIME_ELAPSED_EXT,a),a}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,r=this.getQueryTimerExtensionWebGL2();t.endQuery(r.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await w.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let r=this.gl;return r.getQueryParameter(e,r.QUERY_RESULT)/1e6}else{let r=this.getQueryTimerExtensionWebGL1();return r.getQueryObjectEXT(e,r.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let r=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=r.getQueryParameter(e,r.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}else{let r=this.getQueryTimerExtensionWebGL1(),n=r.getQueryObjectEXT(e,r.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=v8(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:r}=this.itemsToPoll[t];r()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let r;"setTimeoutCustom"in H().platform&&(r=H().platform.setTimeoutCustom.bind(H().platform)),w.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,r)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Jd(this.gl,e,this.framebuffer),this.debug&&Lu(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Jd(this.gl,this.outputTexture,this.framebuffer),this.debug&&Lu(this.gl)):Tm(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let r=t();return this.unbindTextureToFrameBuffer(),r}setOutputMatrixTextureDriver(e,t,r){this.throwIfDisposed();let n=this.gl;Jd(n,e,this.framebuffer),this.debug&&Lu(n),this.outputTexture=e,pe(n,()=>n.viewport(0,0,t,r)),pe(n,()=>n.scissor(0,0,t,r))}setOutputMatrixWriteRegionDriver(e,t,r,n){this.throwIfDisposed(),pe(this.gl,()=>this.gl.scissor(e,t,r,n))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function v8(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:k8,bincountImpl:p2,bincountReduceImpl:I8,castImpl:S8,ceilImpl:N8,concatImpl:T8,equalImpl:C8,expImpl:_8,expm1Impl:E8,floorImpl:$8,gatherNdImpl:A8,gatherV2Impl:F8,greaterImpl:R8,greaterEqualImpl:D8,lessImpl:M8,lessEqualImpl:O8,linSpaceImpl:z8,logImpl:L8,maxImpl:P8,maximumImpl:B8,minimumImpl:W8,multiplyImpl:V8,negImpl:U8,notEqualImpl:G8,prodImpl:H8,raggedGatherImpl:j8,raggedRangeImpl:q8,raggedTensorToTensorImpl:K8,rangeImpl:X8,rsqrtImpl:Z8,scatterImpl:J8,sigmoidImpl:Y8,simpleAbsImpl:d2,sliceImpl:Q8,sparseFillEmptyRowsImpl:eX,sparseReshapeImpl:tX,sparseSegmentReductionImpl:h2,sqrtImpl:rX,staticRegexReplaceImpl:nX,stridedSliceImpl:aX,stringNGramsImpl:sX,stringSplitImpl:iX,stringToHashBucketFastImpl:oX,subImpl:lX,tileImpl:uX,topKImpl:pX,transposeImpl:Nx,uniqueImpl:dX}=Qb;function c2(e,t){return["x","y","z","w","u","v"].slice(0,t).map(r=>`${e}.${r}`)}function dr(e,t){return t===1?[e]:c2(e,t)}function hX(e,t){if(e===1)return"rc";let r="";for(let n=0;n<e;n++)r+=t[n],n<e-1&&(r+=",");return r}var cX=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=or(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=dr("rc",this.rank),r=it(this.rank),n=this.getOutOfBoundsCondition(t),a=this.getSetup(t),s=this.getOutput(t);this.userCode=`
        void main() {
          ${r} rc = getOutputCoords();

          if(${n}) {
            setOutput(vec4(0));
          } else {
            ${a}

            setOutput(vec4(${s}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let r=0;r<=1;r++)for(let n=0;n<=1;n++){let a=`${r===0?"r":"rp1"}, ${n===0?"c":"cp1"}`;for(let s=2;s<this.rank;s++)a=`${e[e.length-1-s]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let r=this.rank-2;r<this.rank;r++)t+=`${e[r]} >= ${this.enableShapeUniforms?`outShape[${r}]`:this.outputShape[r]}`,r<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),r=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],n=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${r};
      bool rEdge = rp1 >= ${n};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}},f2=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=or(this.outputShape.length);let r="";for(let n=0;n<4;n++){let a="thisRC = rc;";n%2===1&&(a+="thisRC.z += 1;"),n>1&&(a+="thisRC.y += 1;"),r+=`
        ${a}
        ${n>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${n}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${n>0?"}":""}
      `}this.userCode=`
      ${fX(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?bx():yx(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${r}

        setOutput(result);
      }
    `}};function fX(e,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?EK(["r","c","d"],"inputShape"):po(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}var mX=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,r){let n=mv(t,r),a=gv(e,n,r);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);let s=fv(e,n,this.gpgpu.gl,this.gpgpu.textureConfig,r);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();let o=this.freeTextures[a].pop();return this.usedTextures[a].push(o),o}let i;return n===tr.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):n===tr.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):n===tr.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):n===tr.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):n===tr.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,r,n){if(this.freeTextures==null)return;let a=mv(r,n),s=gv(t,a,n);s in this.freeTextures||(this.freeTextures[s]=[]);let i=fv(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,n),o=H().get("WEBGL_DELETE_TEXTURE_THRESHOLD");o!==-1&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let u=this.usedTextures[s],p=u&&u.indexOf(e);if(p==null||p<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[p]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function gX(e,t){let r=e;if(t===r.R32F)return 4;if(t===r.R16F)return 2;if(t===r.RGBA32F||t===e.RGBA)return 16;if(t===r.RGBA16F)return 8;if(t===r.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function fv(e,t,r,n,a){let s=yX(t,n),i;if(a){let[u,p]=fu(e[0],e[1]);i=u*p}else{let[u,p]=ud(e[0],e[1]);i=u*p}let o=gX(r,s);return i*o}function yX(e,t){switch(e){case tr.PACKED_2X2_FLOAT32:return Ix(t);case tr.PACKED_2X2_FLOAT16:return Sx(t);case tr.UNPACKED_FLOAT32:return wx(t);case tr.UNPACKED_FLOAT16:return vx(t);case tr.PACKED_4X1_UNSIGNED_BYTE:return kx(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function bX(e){return H().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?tr.PACKED_2X2_FLOAT32:tr.UNPACKED_FLOAT32:e?tr.PACKED_2X2_FLOAT16:tr.UNPACKED_FLOAT16}function mv(e,t){if(e===Zr.UPLOAD)return tr.PACKED_2X2_FLOAT32;if(e===Zr.RENDER||e==null)return bX(t);if(e===Zr.DOWNLOAD||e===Zr.PIXELS)return tr.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function gv(e,t,r){return`${e[0]}_${e[1]}_${t}_${r}`}var zn=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=or(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},gn="if (isnan(x)) return x;",xX="return x;",yv="return abs(x);",wX="return (x >= 0.0) ? x : (exp(x) - 1.0);",vX=gn+`
  return (x < 0.0) ? 0.0 : x;
`,kX=gn+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,ka="return x;",IX="return 1.0 / (1.0 + exp(-1.0 * x));",SX="return x;",NX=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,TX=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,CX=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,_X="return 1.0 / (1.0 + exp(-1.0 * x));",Ca=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=or(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},EX=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=or(this.outputShape.length);let t=e.length,r=dr("rc",t),n=it(t),a=hX(t,r),s=r.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`
      void main() {
        ${n} rc = getOutputCoords();
        vec4 packedInput = getA(${a});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}},$X=jn.whereImpl,AX=1e-7,FX=1e-4,Rf={};function RX(e){return e in Rf||(Rf[e]={}),Rf[e]}var DX=H().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),MX=600;function OX(){return H().global.screen==null?1024:H().global.screen.height*H().global.screen.width*window.devicePixelRatio*MX/1024/1024}var af=class extends hp{nextDataId(){return af.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!H().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof eh)t=e;else{let r=Cn(H().getNumber("WEBGL_VERSION"),e);t=new eh(r)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let r=Cn(H().getNumber("WEBGL_VERSION"));t=new eh(r),this.binaryCache=RX(H().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new mX(this.gpgpu),this.numMBBeforeWarning=OX(),this.texData=new Mh(this,pn())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,r,n,a,s){let i=this.makeTensorInfo(t,r),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[n,a]},o.texShape=[n,a];let u=Pu(t),p=new cv(u,!1,s),l=this.runWebGLProgram(p,[i],r,[[n,a]]);return l.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),l.dataId}write(e,t,r){if((H().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||H().getBool("DEBUG"))&&this.checkNumericalProblems(e),r==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let n={id:this.nextDataId()};return this.texData.set(n,{shape:t,dtype:r,values:e,usage:Zr.UPLOAD,refCount:1}),n}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,r,n,a){if(H().getBool("DEBUG")&&this.checkNumericalProblems(t),n==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:r,dtype:n,values:t,usage:Zr.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:r,dtype:n,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(s!=null){let d;o?d=new Ca(i,ka):d=new zn(i,ka);let h=this.runWebGLProgram(d,[{dataId:e,shape:i,dtype:n}],n),c=this.readSync(h.dataId);return this.disposeIntermediateTensorInfo(h),c}if(r!=null)return this.convertAndCacheOnCPU(e);if(n==="string")return r;let u=this.activeTimers!=null,p;u&&(p=w.now());let l;if(n==="complex64"){let d=this.readSync(a.real.dataId),h=this.readSync(a.imag.dataId);l=N.mergeRealAndImagArrays(d,h)}else l=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=w.now()-p),this.convertAndCacheOnCPU(e,l)}async read(e){if(this.pendingRead.has(e)){let c=this.pendingRead.get(e);return new Promise(f=>c.push(f))}let t=this.texData.get(e),{values:r,shape:n,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(a!=null){let c;o?c=new Ca(n,ka):c=new zn(n,ka);let f=this.runWebGLProgram(c,[{dataId:e,shape:n,dtype:s}],s),m=this.read(f.dataId);return this.disposeIntermediateTensorInfo(f),m}if(r!=null)return this.convertAndCacheOnCPU(e);if(H().getBool("DEBUG")&&!H().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&H().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,p;if(s!=="complex64"&&H().get("WEBGL_BUFFER_SUPPORTED")){p=this.decode(e);let c=this.texData.get(p.dataId);u=this.gpgpu.createBufferFromTexture(c.texture.texture,...Wd(n))}this.pendingRead.set(e,[]),s!=="complex64"&&await this.gpgpu.createAndWaitForFence();let l;if(s==="complex64"){let c=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),f=c[0],m=c[1];l=N.mergeRealAndImagArrays(f,m)}else if(u==null)l=this.getValuesFromTexture(e);else{let c=w.sizeFromShape(n);l=this.gpgpu.downloadFloat32MatrixFromBuffer(u,c)}if(p!=null&&this.disposeIntermediateTensorInfo(p),u!=null){let c=this.gpgpu.gl;pe(c,()=>c.deleteBuffer(u))}let d=this.convertAndCacheOnCPU(e,l),h=this.pendingRead.get(e);return this.pendingRead.delete(e),h.forEach(c=>c(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&pn().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){let r=this.texData.get(e),{values:n,shape:a,slice:s,dtype:i,isPacked:o,texture:u}=r;if(i==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(s!=null){let h;o?h=new Ca(a,ka):h=new zn(a,ka);let c=this.runWebGLProgram(h,[{dataId:e,shape:a,dtype:i}],i),f=this.readToGPU(c,t);return this.disposeIntermediateTensorInfo(c),f}if(u==null)throw n!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let p=this.decode(e,t.customTexShape),l=pn().makeTensorFromTensorInfo(p),d=this.texData.get(p.dataId);return Object.assign({tensorRef:l},d.texture)}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let r=t.map(n=>w.decodeString(n));return ze(e.shape,e.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return ze(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let r=e[t];if(!bN(r))throw H().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${r} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${r} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:r,isPacked:n}=this.texData.get(e),a=w.sizeFromShape(t);if(H().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let d=this.decode(e),h=this.texData.get(d.dataId),c=this.gpgpu.downloadMatrixFromPackedTexture(h.texture.texture,...Wd(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(d),c}let s=H().getBool("WEBGL_PACK")&&n===!0,i=s?Pu(t):t,o=s?new b8(i):new y8(i),u=this.runWebGLProgram(o,[{shape:i,dtype:r,dataId:e}],"float32"),p=this.texData.get(u.dataId),l=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(p.texture.texture,p.texShape[0],p.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),l}timerAvailable(){return H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,r=[],n=!1;this.programTimersStack==null?(this.programTimersStack=r,n=!0):this.activeTimers.push(r),this.activeTimers=r,e();let a=w.flatten(this.activeTimers.map(o=>o.query)).filter(o=>o!=null),s=w.flatten(this.activeTimers.map(o=>o.name)).filter(o=>o!=null);this.activeTimers=t,n&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let o=await Promise.all(a);i.kernelMs=w.sum(o),i.getExtraProfileInfo=()=>o.map((u,p)=>({name:s[p],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:w.now(),endMs:null}}endTimer(e){return H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=w.now(),e)}async getQueryTime(e){if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:r}=this.texData.get(e);return r!=null&&(this.disposeData(r.real.dataId,t),this.disposeData(r.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:r,texShape:n,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),t!=null&&(this.numBytesInGPU-=this.computeBytes(n,r),this.textureManager.releaseTexture(t,n,a,s)));let p=this.texData.get(e);p.texture=null,p.texShape=null,p.isPacked=!1,p.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=DX){return H().getBool("WEBGL_CPU_FORWARD")&&e.every(r=>this.texData.get(r.dataId).texture==null&&w.sizeFromShape(r.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){N.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return $X(e.shape,t)}packedUnaryOp(e,t,r){let n=new Ca(e.shape,t),a=this.compileAndRun(n,[e],r);return pn().makeTensorFromTensorInfo(a)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let n=d2(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,n)}if(H().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,yv,e.dtype);let t=new zn(e.shape,yv),r=this.compileAndRun(t,[e]);return pn().makeTensorFromTensorInfo(r)}makeTensorInfo(e,t,r){let n;if(t==="string"&&r!=null&&r.length>0&&w.isString(r[0])){let a=r.map(s=>w.encodeString(s));n=this.write(a,e,t)}else n=this.write(r,e,t);return this.texData.get(n).usage=null,{dataId:n,shape:e,dtype:t}}makeOutput(e,t,r){return pn().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,r),this)}unpackTensor(e){let t=new EX(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new cX(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){let r=[Ls(e.shape),...Ps(e.shape)],n={dtype:e.dtype,shape:r,dataId:e.dataId},a=[Ls(t),...Ps(t)],s=new f2(a,r),i=!0,o=[r],u=this.runWebGLProgram(s,[n],e.dtype,o,i);return{dataId:u.dataId,shape:t,dtype:u.dtype}}decode(e,t){let r=this.texData.get(e),{isPacked:n,shape:a,dtype:s}=r;if(t!=null){let d=w.sizeFromShape(a),h=t[0]*t[1]*4;w.assert(d<=h,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let i=Pu(a),o;n?o=new g8(i):o=new m8(i);let u=!0,p=[t!=null?t:Wd(i)],l=this.runWebGLProgram(o,[{shape:i,dtype:s,dataId:e}],s,p,u,t);return{dtype:s,shape:a,dataId:l.dataId}}runWebGLProgram(e,t,r,n,a=!1,s){let i=this.makeTensorInfo(e.outputShape,r),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===sp.DENSE){let g=s!=null?s:Wd(e.outputShape);o.texShape=g.map(y=>y*2)}if(e.outTexUsage!=null&&(o.usage=e.outTexUsage),w.sizeFromShape(i.shape)===0)return o.values=w.getTypedArrayFromDType(i.dtype,0),i;let u=[],p=t.map(g=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let y=this.texData.get(g.dataId);if(y.texture==null){if(!e.packedInputs&&w.sizeFromShape(g.shape)<=H().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:y.values};e.packedInputs&&(y.isPacked=!0,y.shape=g.shape)}if(this.uploadToGPU(g.dataId),!!y.isPacked!=!!e.packedInputs)g=y.isPacked?this.unpackTensor(g):this.packTensor(g),u.push(g),y=this.texData.get(g.dataId);else if(y.isPacked&&!ip(y.shape,g.shape)){let b=g,x=g.shape;g.shape=y.shape,g=this.packedReshape(g,x),u.push(g),y=this.texData.get(g.dataId),b.shape=x}return{shape:g.shape,texData:y,isUniform:!1}});this.uploadToGPU(i.dataId);let l={shape:i.shape,texData:o,isUniform:!1},d=f8(e,p,l),h=this.getAndSaveBinary(d,()=>h8(this.gpgpu,e,p,l)),c=this.activeTimers!=null,f;c&&(f=this.startTimer()),H().get("ENGINE_COMPILE_ONLY")||c8(this.gpgpu,h,p,l,n),u.forEach(g=>this.disposeIntermediateTensorInfo(g)),c&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));let m=H().get("WEBGL_FLUSH_THRESHOLD");if(m>0){let g=w.now();g-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=g)}if(!H().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&a===!1){let g=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),g}return i}compileAndRun(e,t,r,n,a=!1){return r=r||t[0].dtype,this.runWebGLProgram(e,t,r,n,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(H().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=W(()=>{if(!H().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=H().getBool("DEBUG");H().set("DEBUG",!1);let t=this.abs(ve(1e-8)).dataSync()[0];if(H().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?AX:FX}uploadToGPU(e){let t=this.texData.get(e),{shape:r,dtype:n,values:a,texture:s,usage:i,isPacked:o}=t;if(s!=null)return;let u=this.activeTimers!=null,p;u&&(p=w.now());let l=t.texShape;if(l==null&&(l=MN(r,o),t.texShape=l),a!=null){let d=Pu(r),h,c=l[1],f=l[0],m=a instanceof Uint8Array||a instanceof Uint8ClampedArray;(o||!m)&&([c,f]=fu(l[0],l[1])),o?h=new w8(d,m):h=new cv(d,m);let g=m?[f,c]:l,y=this.makeTensorInfo(g,n),b=this.texData.get(y.dataId);m?b.usage=Zr.PIXELS:b.usage=Zr.UPLOAD,b.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),c,f,a);let x=[[f,c]],v=!0,I=this.runWebGLProgram(h,[y],n,x,v),T=this.texData.get(I.dataId);t.texShape=T.texShape,t.isPacked=T.isPacked,t.usage=T.usage,H().get("ENGINE_COMPILE_ONLY")?this.disposeData(I.dataId):(t.texture=T.texture,t.values=null,this.texData.delete(I.dataId)),this.disposeIntermediateTensorInfo(y),u&&(this.uploadWaitMs+=w.now()-p)}else{let d=this.acquireTexture(l,i,n,o);t.texture=d}}convertAndCacheOnCPU(e,t){let r=this.texData.get(e),{dtype:n}=r;return t!=null&&(r.values=zX(t,n)),r.values}acquireTexture(e,t,r,n){if(this.numBytesInGPU+=this.computeBytes(e,r),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let a=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${a} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,n)}computeBytes(e,t){return e[0]*e[1]*w.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(let[,t]of Object.entries(this.binaryCache)){let r=new Promise(n=>{try{this.checkCompletion_(t),n(!0)}catch(a){throw a}});e.push(r)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await yy(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(gx(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let e of Object.values(this.binaryCache)){let{variablesLocations:t,customUniformLocations:r,infLoc:n,nanLoc:a,outShapeLocation:s,outShapeStridesLocation:i,outTexShapeLocation:o}=jN(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=r,e.infLoc=n,e.nanLoc=a,e.outShapeLocation=s,e.outShapeStridesLocation=i,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,r){e.channels=e.channels||"RGBA";let{texture:n,height:a,width:s,channels:i}=e,o=pn().backend;if(!o.gpgpu.gl.isTexture(n))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let u=o.writeTexture(n,t,r,a,s,i);return pn().makeTensorFromDataId(u,t,r,o)}};af.nextDataId=0;function zX(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){let r=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let n=0;n<r.length;++n)r[n]=Math.round(e[n]);return r}else throw new Error(`Unknown dtype ${t}`)}var LX="4.3.0";function m2(){H().set("WEBGL_FORCE_F16_TEXTURES",!0)}Mp.isBrowser()&&tc("webgl",()=>new af,2);var PX={forceHalfFloat:m2},Tx=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,Xo=class{constructor(e,t,r){this.variableNames=["A","B"],this.outputShape=N.assertAndGetBroadcastShape(t,r),this.enableShapeUniforms=or(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},co=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`,dd=class{constructor(e,t,r,n=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=N.assertAndGetBroadcastShape(t,r);let a=this.outputShape.length;this.enableShapeUniforms=or(a);let s="";if(n)if(a===0||w.sizeFromShape(this.outputShape)===1)s=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(s=`
          ${it(a)} coords = getOutputCoords();
        `,a===1)this.enableShapeUniforms?s+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:s+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let i=dr("coords",a);this.enableShapeUniforms?s+=`
            bool nextRowOutOfBounds =
              (${i[a-2]} + 1) >= outShape[${a} - 2];
            bool nextColOutOfBounds =
              (${i[a-1]} + 1) >= outShape[${a} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:s+=`
            bool nextRowOutOfBounds =
              (${i[a-2]} + 1) >= ${this.outputShape[a-2]};
            bool nextColOutOfBounds =
              (${i[a-1]} + 1) >= ${this.outputShape[a-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${s}

        setOutput(result);
      }
    `}};function Gr(e){let{inputs:t,backend:r}=e,{x:n}=t;return r.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var BX={kernelName:gi,backendName:"webgl",kernelFunc:Gr};function Qa(e){let{inputs:t,backend:r}=e,{real:n,imag:a}=t,s=r.makeTensorInfo(n.shape,"complex64"),i=r.texData.get(s.dataId),o=Gr({inputs:{x:n},backend:r}),u=Gr({inputs:{x:a},backend:r});return i.complexTensorInfos={real:o,imag:u},s}var WX={kernelName:Ph,backendName:"webgl",kernelFunc:Qa},g2="return (a < 0.) ? b * a : a;",y2=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function VX(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{alpha:s}=n,i=r.makeTensorInfo([],"float32",w.createScalarValue(s,"float32")),o=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new dd(y2,a.shape,i.shape):new Xo(g2,a.shape,i.shape),u=r.runWebGLProgram(o,[a,i],"float32");return r.disposeIntermediateTensorInfo(i),u}var UX={kernelName:wi,backendName:"webgl",kernelFunc:VX},b2="return (a < 0.) ? b * a : a;",x2=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function GX(e){let{inputs:t,backend:r}=e,{x:n,alpha:a}=t,s=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new dd(x2,n.shape,a.shape):new Xo(b2,n.shape,a.shape);return r.runWebGLProgram(s,[n,a],"float32")}var HX={kernelName:Mi,backendName:"webgl",kernelFunc:GX},wu="if (isnan(x)) return x;";function qe({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:r,dtype:n}){return({inputs:a,backend:s})=>{let{x:i}=a,o=s,u=n||i.dtype;if(o.shouldExecuteOnCPU([i])&&r!=null){let d=o.texData.get(i.dataId),h=r(d.values,u);return o.makeTensorInfo(i.shape,u,h)}let p=H().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,l;return p?l=new Ca(i.shape,t):l=new zn(i.shape,e),o.runWebGLProgram(l,[i],u)}}function ar({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:r=!1,supportsComplex:n=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{let{a:u,b:p}=i,l=o;if(n&&u.dtype==="complex64"){let f=l.texData.get(u.dataId),m=l.texData.get(p.dataId),[g,y]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(x=>{let[v,I]=x,T={dataId:v.dataId,dtype:v.dtype,shape:u.shape},_={dataId:I.dataId,dtype:I.dtype,shape:p.shape},E=new Xo(e,u.shape,p.shape);return l.runWebGLProgram(E,[T,_],en(v.dtype,I.dtype))}),b=Qa({inputs:{real:g,imag:y},backend:l});return l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(y),b}let d=s||en(u.dtype,p.dtype);if((u.dtype==="string"||p.dtype==="string"||l.shouldExecuteOnCPU([u,p]))&&a!=null){let f=l.texData.get(u.dataId).values,m=l.texData.get(p.dataId).values,g=u.dtype==="string"?N.fromUint8ToStringArray(f):f,y=u.dtype==="string"?N.fromUint8ToStringArray(m):m,[b,x]=a(u.shape,p.shape,g,y,d),v=l.makeTensorInfo(x,d),I=l.texData.get(v.dataId);return I.values=b,v}let h=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,c;return h?c=new dd(t,u.shape,p.shape,r):c=new Xo(e,u.shape,p.shape),l.runWebGLProgram(c,[u,p],d)}}function op(e,t=!1){if(e==="linear")return t?SX:xX;if(e==="relu")return t?TX:vX;if(e==="elu")return t?NX:wX;if(e==="relu6")return t?CX:kX;if(e==="prelu")return t?x2:b2;if(e==="leakyrelu")return t?y2:g2;if(e==="sigmoid")return t?_X:IX;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var w2=class{constructor(e,t,r,n=!1,a=!1,s=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r,this.enableShapeUniforms=or(this.outputShape.length);let p=n?e[1]:e[2],l=Math.ceil(p/2),d=n?"i * 2, rc.y":"rc.y, i * 2",h=a?"rc.z, i * 2":"i * 2, rc.z",c=n?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";i&&(o?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:u?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:m=`vec4 activation(vec4 x) {
          ${i}
        }`,g="result = activation(result);");let y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${l}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${b};
        int batchB = ${x};
        for (int i = 0; i < ${l}; i++) {
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${h});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${c[0]} * ${f[0]});
          result += (${c[1]} * ${f[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${y}

        ${g}

        setOutput(result);
      }
    `}},bv={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},xv=class{constructor(e,t,r){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=N.assertAndGetBroadcastShape(t,r),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},wv="return a * b;";function Cx(e){let{inputs:t,backend:r}=e,{a:n,b:a}=t,s=N.upcastType(n.dtype,a.dtype);if(n.dtype==="complex64"){let o=r.texData.get(n.dataId),u=r.texData.get(a.dataId),p=new xv(bv.REAL,n.shape,a.shape),l=new xv(bv.IMAG,n.shape,a.shape),d=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:n.shape},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:n.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:a.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:a.shape}],h=r.runWebGLProgram(p,d,"float32"),c=r.runWebGLProgram(l,d,"float32"),f=Qa({inputs:{real:h,imag:c},backend:r});return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(c),f}if(r.shouldExecuteOnCPU([n,a])){let o=r.texData.get(n.dataId),u=r.texData.get(a.dataId),[p,l]=V8(n.shape,a.shape,o.values,u.values,s),d=r.makeTensorInfo(l,s),h=r.texData.get(d.dataId);return h.values=p,d}let i;return H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new dd(wv,n.shape,a.shape):i=new Xo(wv,n.shape,a.shape),r.runWebGLProgram(i,[n,a],s)}var jX={kernelName:Ai,backendName:"webgl",kernelFunc:Cx};function qX(e,t,r){let n=[Ls(e.shape),...Ps(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},s=[Ls(t),...Ps(t)],i=new f2(s,n),o=!0,u=[n],p=r.runWebGLProgram(i,[a],e.dtype,u,o);return{dataId:p.dataId,shape:t,dtype:p.dtype}}function ue(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{shape:s}=n,i=r,o=w.sizeFromShape(a.shape),u=w.inferFromImplicitShape(s,o),p=w.sizeFromShape(u);w.assert(o===p,()=>`The new shape (${u}) has ${p} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);let l=i.texData.get(a.dataId);return l.isPacked&&!ip(a.shape,u)&&!(l.texture!==null&&ip(l.shape,u))?qX(a,u,i):(i.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype})}var KX={kernelName:Ll,backendName:"webgl",kernelFunc:ue},vv=class{constructor(e,t){this.variableNames=["x"];let{windowSize:r,batchSize:n,inSize:a,outSize:s}=e;this.outputShape=[n,s];let i=Math.floor(r/4)*4,o=r%4,u="sumValue += dot(values, ones);";if(t!=null){let l=1/t;u=`sumValue += dot(values * ${w.isInt(l)?l.toPrecision(2):l}, ones);`}let p="";a%r>0&&(p=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${i};
        if (${o===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${o===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${o===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}},XX=class{constructor(e,t){this.variableNames=["x"];let{windowSize:r,batchSize:n,inSize:a,outSize:s}=e;this.outputShape=[n,s];let i="0.0",o="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",o="min"):t==="max"&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?u="sumValue":t==="prod"?u="prodValue":t==="all"?u="allValue":t==="any"&&(u="anyValue");let p=Math.floor(r/4)*4,l=r%4,d=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${o}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${o}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,h="vec4";t==="all"?(i="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,h="bvec4"):t==="any"&&(i="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,h="bvec4");let c="";a%r>0&&(c=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${p}; i += 4) {
          int inIdx = inOffset + i;
          ${h} values = ${h}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${p};
        if (${l===1}) {
          ${h} values = ${h}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${l===2}) {
          ${h} values = ${h}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${l===3}) {
          ${h} values = ${h}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${u});
      }
    `}};function ZX(e){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let r=t.length?t[t.length-1].outSize:e[1],n=N.computeOptimalWindowSize(r);t.push({inSize:r,windowSize:n,outSize:Math.ceil(r/n)})}return t}function fo(e,t,r,n){let a=ZX(e.shape),s=e;for(let i=0;i<a.length;i++){let{inSize:o,windowSize:u,outSize:p}=a[i],l,d;r==="mean"?l=i===0?new vv({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:p},o):new vv({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:p}):l=new XX({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:p},r),d=s,s=n.runWebGLProgram(l,[s],t),d.dataId!==e.dataId&&n.disposeIntermediateTensorInfo(d)}return s}var JX=class{constructor(e,t){this.variableNames=["A"];let r=new Array(e.length);for(let s=0;s<r.length;s++)r[s]=e[t[s]];this.outputShape=r,this.rank=r.length;let n=it(this.rank),a=YX(t);this.userCode=`
    void main() {
      ${n} resRC = getOutputCoords();
      setOutput(getA(${a}));
    }
    `}};function YX(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let r=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=new Array(t);for(let a=0;a<e.length;a++)n[e[a]]=r[a];return n.join()}var QX=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let r=new Array(e.length);for(let p=0;p<r.length;p++)r[p]=e[t[p]];if(this.outputShape=r,this.rank=r.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let n=it(this.rank),a=c2("rc",this.rank),s=new Array(this.rank);for(let p=0;p<t.length;p++)s[t[p]]=a[p];let i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${r[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`
    void main() {
      ${n} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${o}) {
        result[1] = ${u};
      }
      --${a[this.rank-1]};
      if(++${a[this.rank-2]} < ${r[this.rank-2]}) {
        result[2] = ${u};
        if(${o}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}};function sf(e,t,r){let n=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new QX(e.shape,t):new JX(e.shape,t);return r.runWebGLProgram(n,[e],e.dtype)}function e7(e,t,r,n){let a=t,s=e.shape.length,i=w.parseAxisParam(a,e.shape),o=i,u=N.getAxesPermutation(o,s),p=u!=null,l=e;p&&(l=sf(e,u,n),o=N.getInnerMostAxes(o.length,s)),N.assertAxesAreInnerMostDims("sum",o,s);let[d,h]=N.computeOutAndReduceShapes(l.shape,o),c=d;r&&(c=N.expandShapeToKeepDim(d,i));let f=w.sizeFromShape(h),m=w.sizeFromShape(e.shape)/f,g=ue({inputs:{x:l},attrs:{shape:[m,f]},backend:n}),y=ec(e.dtype),b=fo(g,y,"sum",n),x=ue({inputs:{x:b},attrs:{shape:c},backend:n});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(b),p&&n.disposeIntermediateTensorInfo(l),x}function of(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n;return e7(a,s,i,r)}var t7={kernelName:Ji,backendName:"webgl",kernelFunc:of};function mr(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{perm:s}=n,i=r,o=a.shape.length,u=new Array(o);for(let l=0;l<u.length;l++)u[l]=a.shape[s[l]];let p;if(i.shouldExecuteOnCPU([a])){let l=i.texData.get(a.dataId).values,d=Nx(l,a.shape,a.dtype,s,u);p=i.makeTensorInfo(u,a.dtype);let h=i.texData.get(p.dataId);h.values=d}else p=sf(a,s,i);return p}var r7={kernelName:aa,backendName:"webgl",kernelFunc:mr},v2=1e3;function Ch({a:e,b:t,transposeA:r,transposeB:n,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){let p=e.shape.length,l=t.shape.length,d=r?e.shape[p-2]:e.shape[p-1],h=n?t.shape[l-1]:t.shape[l-2],c=r?e.shape[p-1]:e.shape[p-2],f=n?t.shape[l-2]:t.shape[l-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=w.sizeFromShape(m),b=w.sizeFromShape(g),x=nu.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([c,f]);w.assert(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${r} and transposeB=${n} must match.`);let v=r?[y,d,c]:[y,c,d],I=n?[b,f,h]:[b,h,f],T=ue({inputs:{x:e},backend:a,attrs:{shape:v}}),_=ue({inputs:{x:t},backend:a,attrs:{shape:I}}),E=[T,_],A=Math.max(y,b),R=r?T.shape[1]:T.shape[2],F=s!=null,S=i!=null,M=u==="leakyrelu",B=u!=null?op(u,!0):null,U=F||S||M||B!=null,G;if((c===1||f===1)&&R>v2&&U===!1){let j=T,X=_;r&&(j=mr({inputs:{x:T},backend:a,attrs:{perm:[0,2,1]}}),E.push(j)),n&&(X=mr({inputs:{x:_},backend:a,attrs:{perm:[0,2,1]}}),E.push(X));let ee=f!==1,Z=f===1,ne=j;ee&&(ne=ue({inputs:{x:j},backend:a,attrs:{shape:[A,R,1]}}),E.push(ne));let te=f===1?2:1,ae=X;Z&&(ae=ue({inputs:{x:X},backend:a,attrs:{shape:[A,1,R]}}),E.push(ae));let ie=Cx({inputs:{a:ne,b:ae},backend:a});G=of({inputs:{x:ie},backend:a,attrs:{axis:te,keepDims:!0}}),E.push(ie)}else{let j=en(e.dtype,t.dtype),X=new w2(v,I,[A,c,f],r,n,F,B,S,M),ee=[T,_];if(s!=null&&ee.push(s),S&&ee.push(i),M){let Z=a.makeTensorInfo([],"float32",w.createScalarValue(o,"float32"));ee.push(Z),E.push(Z)}G=a.runWebGLProgram(X,ee,j)}let K=ue({inputs:{x:G},backend:a,attrs:{shape:x}});E.push(G);for(let j of E)a.disposeIntermediateTensorInfo(j);return K}function n7(e){let{inputs:t,backend:r,attrs:n}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:p,activation:l,leakyreluAlpha:d}=n;return Ch({a,b:s,transposeA:u,transposeB:p,backend:r,bias:i,preluActivationWeights:o,leakyreluAlpha:d,activation:l})}var a7={kernelName:Is,backendName:"webgl",kernelFunc:n7},kv="return abs(x);";function s7(e){let{inputs:t,backend:r}=e,{x:n}=t;if(r.shouldExecuteOnCPU([n])&&n.dtype!=="complex64"){let s=r.texData.get(n.dataId),i=d2(s.values);return r.makeTensorInfo(n.shape,n.dtype,i)}let a;return H().getBool("WEBGL_PACK_UNARY_OPERATIONS")?a=new Ca(n.shape,kv):a=new zn(n.shape,kv),r.runWebGLProgram(a,[n],n.dtype)}var i7={kernelName:Qo,backendName:"webgl",kernelFunc:s7},o7=gn+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,l7=qe({opSnippet:o7}),u7={kernelName:Vs,backendName:"webgl",kernelFunc:l7},p7=gn+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,d7=qe({opSnippet:p7}),h7={kernelName:Us,backendName:"webgl",kernelFunc:d7},Iv="return a + b;",c7=ar({opSnippet:Iv,packedOpSnippet:Iv,supportsComplex:!0,cpuKernelImpl:k8}),f7={kernelName:Ga,backendName:"webgl",kernelFunc:c7},m7=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((a,s)=>`T${s}`);let r=[];this.variableNames.forEach(a=>{r.push(`float v${a} = get${a}AtOutCoords();`)});let n=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        float result = ${n};
        setOutput(result);
      }
    `}},g7=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((a,s)=>`T${s}`);let r=[];this.variableNames.forEach(a=>{r.push(`vec4 v${a} = get${a}AtOutCoords();`)});let n=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        vec4 result = ${n};
        setOutput(result);
      }
    `}};function th(e){let{inputs:t,backend:r}=e,n=t;if(n.length===1)return Gr({inputs:{x:n[0]},backend:r});if(n.length>H().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let o=Math.floor(n.length/2),u=th({inputs:n.slice(0,o),backend:r}),p=th({inputs:n.slice(o),backend:r});return th({inputs:[u,p],backend:r})}let a=n.map(o=>o.dtype).reduce((o,u)=>en(o,u)),s=n.map(o=>o.shape),i=H().getBool("WEBGL_PACK")?new g7(n[0].shape,s):new m7(n[0].shape,s);return r.runWebGLProgram(i,n,a)}var y7={kernelName:Gs,backendName:"webgl",kernelFunc:th};function b7(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n,o=a.shape.length,u=w.parseAxisParam(s,a.shape),p=u,l=N.getAxesPermutation(p,o),d=a;l!=null&&(d=mr({inputs:{x:a},backend:r,attrs:{perm:l}}),p=N.getInnerMostAxes(p.length,o)),N.assertAxesAreInnerMostDims("all",p,o);let[h,c]=N.computeOutAndReduceShapes(d.shape,p),f=w.sizeFromShape(c),m=ue({inputs:{x:d},backend:r,attrs:{shape:[-1,f]}}),g=fo(m,m.dtype,"all",r),y;if(i){let b=N.expandShapeToKeepDim(h,u);y=ue({inputs:{x:g},backend:r,attrs:{shape:b}})}else y=ue({inputs:{x:g},backend:r,attrs:{shape:h}});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),l!=null&&r.disposeIntermediateTensorInfo(d),y}var x7={kernelName:el,backendName:"webgl",kernelFunc:b7};function w7(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n,o=a.shape.length,u=w.parseAxisParam(s,a.shape),p=u,l=N.getAxesPermutation(p,o),d=a;l!=null&&(d=mr({inputs:{x:a},backend:r,attrs:{perm:l}}),p=N.getInnerMostAxes(p.length,o)),N.assertAxesAreInnerMostDims("any",p,o);let[h,c]=N.computeOutAndReduceShapes(d.shape,p),f=w.sizeFromShape(c),m=ue({inputs:{x:d},backend:r,attrs:{shape:[-1,f]}}),g=fo(m,m.dtype,"any",r),y;if(i){let b=N.expandShapeToKeepDim(h,u);y=ue({inputs:{x:g},backend:r,attrs:{shape:b}})}else y=ue({inputs:{x:g},backend:r,attrs:{shape:h}});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),l!=null&&r.disposeIntermediateTensorInfo(d),y}var v7={kernelName:tl,backendName:"webgl",kernelFunc:w7},k7=class{constructor(e,t,r){this.variableNames=["A"];let{windowSize:n,batchSize:a,outSize:s}=e;r||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];let i=t==="max"?">":"<",o=r?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${n}; i++) {
          int inIdx = ${o};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},I7=class{constructor(e,t,r,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,w.assert(e.length>2,()=>`Packed arg${r.charAt(0).toUpperCase()+r.slice(1)} supports only inputs with rank above 2.`);let a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),n||this.variableNames.push("bestIndicesA");let i=this.outputShape,o=i.length,u=it(o),p=dr("coords",o),l,d;if(s===1){d=o+1;let _=it(d);l=`
        ${_} sourceLocR = ${_}(${p.join()}, 0);
        ++${p[o-1]};
        ${_} sourceLocG = ${_}(${p.join()}, 0);
        ++${p[o-2]};
        ${_} sourceLocA = ${_}(${p.join()}, 0);
        --${p[o-1]};
        ${_} sourceLocB = ${_}(${p.join()}, 0);
        --${p[o-2]};`}else d=o,l=`
        ${u} sourceLocR = coords;
        ++${p[o-1]};
        ${u} sourceLocG = coords;
        ++${p[o-2]};
        ${u} sourceLocA = coords;
        --${p[o-1]};
        ${u} sourceLocB = coords;
        --${p[o-2]};`;let h=["x","y","z","w","u","v"].slice(0,d),c="."+h[d-1],f=h.map(_=>"int "+_),m=dr("sourceLocR",d-1).concat("inIdx.r"),g=dr("sourceLocG",d-1).concat("inIdx.g"),y=dr("sourceLocB",d-1).concat("inIdx.b"),b=dr("sourceLocA",d-1).concat("inIdx.a"),x=r==="max"?"greaterThan":"lessThan",v=n?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()})));`,I=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,T=n?"":`
      float getBestIndicesAChannel(${f.join()}) {
        return getChannel(getBestIndicesA(${h.join()}),
                                          vec2(${h.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${f.join()}) {
        return getChannel(getA(${h.join()}),
                               vec2(${h.slice(-2).join()}));
      }
      ${T}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${p[o-1]} < ${i[o-1]-1};
        bool hasNextRow = ${p[o-2]} < ${i[o-2]-1};
        ${l}
        ivec4 srcIdx = ivec4(sourceLocR${c}, sourceLocG${c},
          sourceLocB${c}, sourceLocA${c}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${I};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${v}
          vec4 candidate = ${I};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function k2(e,t,r,n=null){let a=t.shape[0],s=t.shape[1];n!=null&&(a=n.shape[0],s=n.shape[1]);let i=N.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},u=new k7(o,r,n==null),p=[t];n!=null&&p.push(n);let l=e.runWebGLProgram(u,p,"int32");if(l.shape[1]===1)return l;let d=k2(e,t,r,l);return e.disposeIntermediateTensorInfo(l),d}function I2(e,t,r,n=null){let a=n!=null?n.shape:t.shape,s=a[a.length-1],i=N.computeOptimalWindowSize(s),o=new I7(a,i,r,n==null),u=n==null?[t]:[t,n],p=e.runWebGLProgram(o,u,"int32");if(p.shape.length===t.shape.length){let l=I2(e,t,r,p);return e.disposeIntermediateTensorInfo(p),l}return p}function S2(e,t,r,n){let a=[r];if(N.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),a,t.shape.length),!H().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let s=[],i=e.texData.get(t.dataId),o=i!==null&&i.isPacked,u=t;o&&(u=e.unpackTensor(t),s.push(u));let[p,l]=N.computeOutAndReduceShapes(u.shape,a),d=w.sizeFromShape(l),h=ue({inputs:{x:u},backend:e,attrs:{shape:[-1,d]}});s.push(h);let c=k2(e,h,n);s.push(c);let f=ue({inputs:{x:c},backend:e,attrs:{shape:p}});return s.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}return I2(e,t,n)}function S7(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s}=n,i=w.parseAxisParam(s,a.shape),o=N.getAxesPermutation(i,a.shape.length),u=a,p=[];o!=null&&(u=mr({inputs:{x:a},backend:r,attrs:{perm:o}}),p.push(u),i=N.getInnerMostAxes(i.length,u.shape.length)),N.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);let l=S2(r,u,i[0],"max");return p.forEach(d=>r.disposeIntermediateTensorInfo(d)),l}var N7={kernelName:rl,backendName:"webgl",kernelFunc:S7};function T7(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s}=n,i=w.parseAxisParam(s,a.shape),o=N.getAxesPermutation(i,a.shape.length),u=a,p=[];o!=null&&(u=mr({inputs:{x:a},backend:r,attrs:{perm:o}}),p.push(u),i=N.getInnerMostAxes(i.length,u.shape.length)),N.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);let l=S2(r,u,i[0],"min");return p.forEach(d=>r.disposeIntermediateTensorInfo(d)),l}var C7={kernelName:nl,backendName:"webgl",kernelFunc:T7},_7=gn+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,E7=qe({opSnippet:_7}),$7={kernelName:Hs,backendName:"webgl",kernelFunc:E7},A7=gn+"return log(x + sqrt(x * x + 1.0));",F7=qe({opSnippet:A7}),R7={kernelName:js,backendName:"webgl",kernelFunc:F7},D7=gn+`
  return atan(x);
`,M7=qe({opSnippet:D7}),O7={kernelName:qs,backendName:"webgl",kernelFunc:M7},z7=Tx+`
  return atan(a, b);
`,L7=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+co+`
  return result;
`,P7=ar({opSnippet:z7,packedOpSnippet:L7}),B7={kernelName:Xs,backendName:"webgl",kernelFunc:P7},W7=gn+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,V7=qe({opSnippet:W7}),U7={kernelName:Ks,backendName:"webgl",kernelFunc:V7},lp=class{constructor(e,t,r,n=!1,a=!1){if(this.variableNames=["x"],t==="avg"&&r)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,p=e.dilationWidth,l=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.top,c=e.padInfo.left;this.outputShape=e.outShape;let f=t==="avg",m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),r){let _=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${o});
        const ivec2 pads = ivec2(${h}, ${c});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${l};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${p}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${_} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${n?a?m:g:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let b="max",x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(x="avgValue / max(count, 1.0)");let v=Math.floor(s/4)*4,I=s%4,T=`
      if (${f}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${b}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${o});
      const ivec2 pads = ivec2(${h}, ${c});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${l};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${v}; wC += 4) {
            int xC = xCCorner + wC * ${p};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              getValue(batch, xR, xC + 2 * ${p}, d),
              getValue(batch, xR, xC + 3 * ${p}, d)
            );

            ${T}
          }

          int xC = xCCorner + ${v};
          if (${I===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${T}
          } else if (${I===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              initializationValue,
              initializationValue
            );

            ${T}
          } else if (${I===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              getValue(batch, xR, xC + 2 * ${p}, d),
              initializationValue
            );

            ${T}
          }
        }
        setOutput(${x});
      }
    `}},_x=class{constructor(e,t,r,n=!1,a=!1){if(this.variableNames=["x"],t==="avg"&&r)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,p=e.dilationDepth,l=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterDepth,c=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let b=t==="avg",x="0.0";if(b||(x="-1.0 / 1e-20"),r){let A=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${o}, ${u});
        const ivec3 pads = ivec3(${m}, ${g}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${h};
              wD += ${p}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${c};
                wR += ${l}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${f};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${A} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${n?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${c} * ${f} +
                      wR * ${f} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let v="max",I=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(I="avgValue / max(count, 1.0)");let T=Math.floor(s/4)*4,_=s%4,E=`
      if (${b}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${o}, ${u});
      const ivec3 pads = ivec3(${m}, ${g}, ${y});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${p}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${c};
            wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${T}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${E}
            }

            int xC = xCCorner + ${T};
            if (${_===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${_===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${_===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${E}
            }
          }
        }
        setOutput(${I});
      }
    `}};function G7(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t;mu(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n,p=1;w.assert(N.eitherStridesOrDilationsAreOne(i,p),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let l=N.computePool2DInfo(a.shape,s,i,p,o,u);if(l.filterWidth===1&&l.filterHeight===1&&w.arraysEqual(l.inShape,l.outShape))return Gr({inputs:{x:a},backend:r});let d=new lp(l,"avg",!1);return r.runWebGLProgram(d,[a],"float32")}var H7={kernelName:Zs,backendName:"webgl",kernelFunc:G7};function j7(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:p}=n,l=[1,1,1],d=N.computePool3DInfo(a.shape,s,i,l,o,u,p),h=new _x(d,"avg",!1);return r.runWebGLProgram(h,[a],"float32")}var q7={kernelName:al,backendName:"webgl",kernelFunc:j7},K7=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,r=e.filterWidth,n=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,p=o-1-e.padInfo.top,l=u-1-e.padInfo.left,d=1/(t*r);this.userCode=`
      const ivec2 pads = ivec2(${p}, ${l});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
            wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},X7=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,r=e.filterHeight,n=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,p=e.dilationWidth,l=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,c=l-1-e.padInfo.front,f=d-1-e.padInfo.top,m=h-1-e.padInfo.left,g=1/(t*r*n);this.userCode=`
      const ivec3 pads = ivec3(${c}, ${f}, ${m});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
            wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${a}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${h};
                wC += ${p}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Z7(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:u,pad:p,dimRoundingMode:l}=n,d=[1,1,1],h=N.computePool3DInfo(i.shape,o,u,d,p,l),c=new X7(h);return r.runWebGLProgram(c,[a],i.dtype)}var J7={kernelName:fp,backendName:"webgl",kernelFunc:Z7};function Y7(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:s}=t,i=s;mu([a,s],"avgPoolGrad");let{filterSize:o,strides:u,pad:p}=n,l=N.computePool2DInfo(i.shape,o,u,1,p),d=new K7(l);return r.runWebGLProgram(d,[a],i.dtype)}var Q7={kernelName:Lh,backendName:"webgl",kernelFunc:Y7};function eZ(e){let{inputs:t,backend:r,attrs:n}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=n;return Ch({a,b:s,transposeA:i,transposeB:o,backend:r})}var tZ={kernelName:Js,backendName:"webgl",kernelFunc:eZ},rZ=class{constructor(e,t,r,n,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(e,t),N.assertAndGetBroadcastShape(e,r);let i="0.0";n!=null&&(N.assertAndGetBroadcastShape(e,n),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";a!=null&&(N.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${o};
        float inv = scale * inversesqrt(variance + float(${s}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},nZ=class{constructor(e,t,r,n,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(e,t),N.assertAndGetBroadcastShape(e,r);let i="vec4(0.0)";n!=null&&(N.assertAndGetBroadcastShape(e,n),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";a!=null&&(N.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${o};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${s}));

        setOutput((x - mean) * inv + offset);
      }
    `}},aZ=({inputs:e,backend:t,attrs:r})=>{let{x:n,mean:a,variance:s,offset:i,scale:o}=e;w.assert(a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(o==null||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=r;u==null&&(u=.001);let p=[n,a,s],l=null;i!=null&&(l=i.shape,p.push(i));let d=null;o!=null&&(d=o.shape,p.push(o));let h=H().getBool("WEBGL_PACK_NORMALIZATION")?new nZ(n.shape,a.shape,s.shape,l,d,u):new rZ(n.shape,a.shape,s.shape,l,d,u);return t.runWebGLProgram(h,p,p[0].dtype)},sZ={kernelName:fi,backendName:"webgl",kernelFunc:aZ},iZ=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=it(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let r=oZ(this.rank),n,a=e.map((s,i)=>`sourceLoc.${Em[i]} = start[${i}] + coords.${Em[i]};`);n=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${a.join(`
`)}
      `,this.userCode=`
      void main() {
        ${n}
        setOutput(getSource(${r}));
      }
    `}},Em=["x","y","z","w","u","v"];function oZ(e){if(e===1)return"sourceLoc";if(e<=6)return Em.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var lZ=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=it(this.rank),r=dr("coords",this.rank),n=dr("sourceLoc",this.rank),a=this.rank===1?"sourceLoc":`vec2(${n.slice(-2).join()})`,s=`getChannel(getSource(${n.join()}), ${a})`,i=`
      result.x = ${s};
      if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
        ++${n[this.rank-1]};
        result.y = ${s};
        --${n[this.rank-1]};
      }
    `,o=this.rank===1?"":`
      --${r[this.rank-1]};
      if (++${r[this.rank-2]} < ${e[this.rank-2]}) {
        ++${n[this.rank-2]};
        result.z = ${s};
        if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
          ++${n[this.rank-1]};
          result.w = ${s};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((p,l)=>`start[${l}]`).join()});`:e.map((p,l)=>`${n[l]} = ${r[l]} + start[${l}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${i}
        ${o}
        setOutput(result);
      }
    `}};function uZ(e,t,r,n){let a=n.texData.get(e.dataId),s=n.makeTensorInfo(r,e.dtype),i=n.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=r,i.dtype=e.dtype;let o=zt.computeFlatOffset(t,w.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};let u=n.dataRefCount.get(i.slice.origDataId)||1;return n.dataRefCount.set(i.slice.origDataId,u+1),s}function vu(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{begin:s,size:i}=n,[o,u]=zt.parseSliceParams(a,s,i);if(zt.assertParamsValid(a,o,u),w.sizeFromShape(u)===0)return r.makeTensorInfo(u,a.dtype,[]);if(r.shouldExecuteOnCPU([a])||a.dtype==="string"){let d=r.texData.get(a.dataId),h=Q8(d.values,o,u,a.shape,a.dtype);return r.makeTensorInfo(u,a.dtype,h)}let{isPacked:p}=r.texData.get(a.dataId),l=zt.isSliceContinous(a.shape,o,u);if(p||!l){let d=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new lZ(u):new iZ(u),h=[o];return r.runWebGLProgram(d,[a],a.dtype,h)}return r.uploadToGPU(a.dataId),uZ(a,o,u,r)}var pZ={kernelName:Hl,backendName:"webgl",kernelFunc:vu},dZ=e=>{let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockShape:s,crops:i}=n;w.assert(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((b,x)=>b*x),u=N.getReshaped(a.shape,s,o),p=N.getPermuted(u.length,s.length),l=N.getReshapedPermuted(a.shape,s,o),d=N.getSliceBeginCoords(i,s.length),h=N.getSliceSize(l,i,s.length),c=[],f=ue({inputs:{x:a},backend:r,attrs:{shape:u}}),m=mr({inputs:{x:f},backend:r,attrs:{perm:p}}),g=ue({inputs:{x:m},backend:r,attrs:{shape:l}}),y=vu({inputs:{x:g},backend:r,attrs:{begin:d,size:h}});return c.push(f),c.push(m),c.push(g),c.forEach(b=>r.disposeIntermediateTensorInfo(b)),y},hZ={kernelName:sl,backendName:"webgl",kernelFunc:dZ};function cZ(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,weights:s}=t,{size:i}=n,o=r.readSync(a.dataId),u=r.readSync(s.dataId),p=p2(o,u,s.dtype,s.shape,i);return r.makeTensorInfo([i],s.dtype,p)}var fZ={kernelName:il,backendName:"webgl",kernelFunc:cZ};function mZ(e){let{inputs:t,backend:r}=e,{s0:n,s1:a}=t,s=r.readSync(n.dataId),i=r.readSync(a.dataId),o=N.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return r.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var gZ={kernelName:mp,backendName:"webgl",kernelFunc:mZ},yZ="return float(a != b);",N2=ar({opSnippet:yZ,cpuKernelImpl:G8,dtype:"bool"}),bZ={kernelName:Fl,backendName:"webgl",kernelFunc:N2};function hd(e){let{inputs:t,backend:r}=e,{input:n}=t,a=r.texData.get(n.dataId);return Gr({inputs:{x:a.complexTensorInfos.real},backend:r})}var xZ={kernelName:Yh,backendName:"webgl",kernelFunc:hd},wZ="return float(int(x));";function vZ(e,t){let r=new zn(e.shape,wZ),n=t.runWebGLProgram(r,[e],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function $m(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{dtype:s}=n;if(s==="complex64"){if(a.dtype==="complex64")return Gr({inputs:{x:a},backend:r});let i=wt(a.shape),o=$m({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),u=Qa({inputs:{real:o,imag:i},backend:r});return i.dispose(),r.disposeIntermediateTensorInfo(o),u}if(a.dtype==="complex64"){let i=hd({inputs:{input:a},backend:r}),o=$m({inputs:{x:i},backend:r,attrs:{dtype:s}});return r.disposeIntermediateTensorInfo(i),o}if(!w.hasEncodingLoss(a.dtype,s)){let i=Gr({inputs:{x:a},backend:r});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(r.shouldExecuteOnCPU([a])){let i=r.texData.get(a.dataId).values,[o,u,p]=S8(i,a.shape,a.dtype,s);return r.makeTensorInfo(o,u,p)}if(s==="int32")return vZ(a,r);if(s==="bool"){let i=r.makeTensorInfo([],"bool",w.getTypedArrayFromDType("bool",1)),o=N2({inputs:{a,b:i},backend:r});return r.disposeIntermediateTensorInfo(i),o}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}var kZ={kernelName:Ys,backendName:"webgl",kernelFunc:$m},Sv="return ceil(x);",IZ=qe({opSnippet:Sv,packedOpSnippet:Sv,cpuKernelImpl:N8}),SZ={kernelName:Qs,backendName:"webgl",kernelFunc:IZ},NZ=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}},TZ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function CZ(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=n,o;H().getBool("WEBGL_PACK_CLIP")?o=new TZ(a.shape):o=new NZ(a.shape);let u=[[s],[i]];return r.runWebGLProgram(o,[a],a.dtype,u)}var _Z={kernelName:Ha,backendName:"webgl",kernelFunc:CZ},EZ=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function Nv(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function $Z(e){let{inputs:t,backend:r}=e,{x:n}=t,a=r.texData.get(n.dataId),s=new EZ(n.shape),i=[Nv(n,a.complexTensorInfos.real),Nv(n,a.complexTensorInfos.imag)];return r.runWebGLProgram(s,i,i[0].dtype)}var AZ={kernelName:gp,backendName:"webgl",kernelFunc:$Z},FZ=class{constructor(e){this.outputShape=[],this.outputShape=N.computeOutShape(e,1),this.variableNames=e.map((s,i)=>`T${i}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];let r=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<t.length;s++){let i=t[s-1];r.push(`else if (yC < ${t[s]}) setOutput(getT${s}(yR, yC-${i}));`)}let n=t.length,a=t[t.length-1];r.push(`else setOutput(getT${n}(yR, yC-${a}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${r.join(`
        `)}
      }
    `}},RZ=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=N.computeOutShape(e,t);let r=this.outputShape,n=r.length,a=it(n),s=dr("coords",n),i=["x","y","z","w","u","v"].slice(0,n);this.variableNames=e.map((f,m)=>`T${m}`);let o=new Array(e.length-1);o[0]=e[0][t];for(let f=1;f<o.length;f++)o[f]=o[f-1]+e[f][t];let u=i[t],p=i.slice(-2),l=i.join(),d=`if (${u} < ${o[0]}) {
        return getChannel(
            getT0(${l}), vec2(${p.join()}));
        }`;for(let f=1;f<o.length;f++){let m=o[f-1];d+=`
        if (${u} < ${o[f]}  && ${u} >= ${o[f-1]}) {
          return getChannel(
            getT${f}(${Ud(i,u,m)}),
            vec2(${Ud(p,u,m)}));
        }`}let h=o.length,c=o[o.length-1];d+=`
        return getChannel(
          getT${h}(${Ud(i,u,c)}),
          vec2(${Ud(p,u,c)}));`,this.userCode=`
      float getValue(${i.map(f=>"int "+f)}) {
        ${d}
      }

      void main() {
        ${a} coords = getOutputCoords();
        vec4 result = vec4(getValue(${s}), 0., 0., 0.);

        ${s[n-1]} = ${s[n-1]} + 1;
        if (${s[n-1]} < ${r[n-1]}) {
          result.g = getValue(${s});
        }

        ${s[n-2]} = ${s[n-2]} + 1;
        if (${s[n-2]} < ${r[n-2]}) {
          result.a = getValue(${s});
        }

        ${s[n-1]} = ${s[n-1]} - 1;
        if (${s[n-2]} < ${r[n-2]} &&
            ${s[n-1]} < ${r[n-1]}) {
          result.b = getValue(${s});
        }
        setOutput(result);
      }
    `}};function Ud(e,t,r){let n=e.indexOf(t);return e.map((a,s)=>s===n?`${a} - ${r}`:a).join()}function lf(e){let{inputs:t,backend:r}=e,{input:n}=t,a=r.texData.get(n.dataId);return Gr({inputs:{x:a.complexTensorInfos.imag},backend:r})}var DZ={kernelName:jh,backendName:"webgl",kernelFunc:lf};function Bu(e,t,r){let n=e[0].dtype;if(n==="complex64"){let c=e.map(b=>hd({inputs:{input:b},backend:r})),f=e.map(b=>lf({inputs:{input:b},backend:r})),m=Bu(c,t,r),g=Bu(f,t,r),y=Qa({inputs:{real:m,imag:g},backend:r});return c.forEach(b=>r.disposeIntermediateTensorInfo(b)),f.forEach(b=>r.disposeIntermediateTensorInfo(b)),r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),y}let a=r.shouldExecuteOnCPU(e);if(n==="string"&&(a=!0),a){let c=e.map(v=>{let I=[-1,w.sizeFromShape(v.shape.slice(t))];return ue({inputs:{x:v},backend:r,attrs:{shape:I}})}),f=c.map(v=>({vals:r.readSync(v.dataId),shape:v.shape})),m=N.computeOutShape(c.map(v=>v.shape),1),g=c[0].shape[0]===1,y=T8(f,m,n,g),b=N.computeOutShape(e.map(v=>v.shape),t),x=r.makeTensorInfo(b,n,y);return c.forEach(v=>r.disposeIntermediateTensorInfo(v)),x}let s=e.filter(c=>w.sizeFromShape(c.shape)>0),i=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(s.length===1){let c=i?new zn(e[0].shape,ka):new Ca(e[0].shape,ka);return r.runWebGLProgram(c,e,n)}let o=H().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>o){let c=[];for(let m=0;m<s.length;m+=o){let g=s.slice(m,m+o);c.push(Bu(g,t,r))}let f=Bu(c,t,r);for(let m of c)r.disposeIntermediateTensorInfo(m);return f}if(i){let c=new RZ(s.map(f=>f.shape),t);return r.runWebGLProgram(c,s,n)}let{tensors2D:u,outShape:p}=MZ(s,t,r),l=new FZ(u.map(c=>c.shape)),d=r.runWebGLProgram(l,u,n);u.forEach(c=>r.disposeIntermediateTensorInfo(c));let h=ue({inputs:{x:d},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(d),h}function MZ(e,t,r){let n=N.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>ue({inputs:{x:a},attrs:{shape:[-1,w.sizeFromShape(a.shape.slice(t))]},backend:r})),outShape:n}}function T2(e){let{inputs:t,backend:r,attrs:n}=e,{axis:a}=n,s=w.parseAxisParam(a,t[0].shape)[0],i=t.map(p=>p.shape);N.assertParamsConsistent(i,s);let o=N.computeOutShape(t.map(p=>p.shape),s);if(w.sizeFromShape(o)===0)return r.makeTensorInfo(o,t[0].dtype,[]);let u=t.filter(p=>w.sizeFromShape(p.shape)>0);return u.length===1?Gr({inputs:{x:u[0]},backend:r}):Bu(u,s,r)}var OZ={kernelName:ol,backendName:"webgl",kernelFunc:T2},C2=class{constructor(e,t=!1,r=null,n=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,p=e.dilationHeight,l=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,c=Math.floor(e.inChannels/4)*4,f=e.inChannels%4,m=e.dataFormat==="channelsLast",g=m?1:2,y=m?2:3,b=m?3:1,x="",v="";r&&(n?x=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:a?x=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:x=`
          float activation(float x) {
            ${r}
          }
        `,v="result = activation(result);");let I=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${x}

      const ivec2 strides = ivec2(${o}, ${u});
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${b}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${p};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${h}; wC++) {
            int xC = xCCorner + wC * ${l};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${c}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${f===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${c}) *
                    getW(wR, wC, ${c}, d2);
              } else {
                dotProd +=
                    getX(batch, ${c}, xR, xC) *
                    getW(wR, wC, ${c}, d2);
              }

            } else if (${f===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${c}, d2),
                getW(wR, wC, ${c} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${c}),
                  getX(batch, xR, xC, ${c} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${c}, xR, xC),
                  getX(batch, ${c} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${f===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${c}, d2),
                getW(wR, wC, ${c} + 1, d2),
                getW(wR, wC, ${c} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${c}),
                  getX(batch, xR, xC, ${c} + 1),
                  getX(batch, xR, xC, ${c} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${c}, xR, xC),
                  getX(batch, ${c} + 1, xR, xC),
                  getX(batch, ${c} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${I}
        ${v}
        setOutput(result);
      }
    `}},zZ=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,r=e.padInfo.top,n=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,p=e.dilationWidth,l=e.filterDepth,d=e.filterHeight,h=e.filterWidth,c=Math.floor(e.inChannels/4)*4,f=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${a}, ${s}, ${i});
      const ivec3 pads = ivec3(${t}, ${r}, ${n});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${l}; wF++) {
          int xF = xFCorner + wF * ${o};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${h}; wC++) {
              int xC = xCCorner + wC * ${p};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${c}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${f===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${c}) *
                  getW(wF, wR, wC, ${c}, d2);
              } else if (${f===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${c}),
                  getX(batch, xF, xR, xC, ${c} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${c}, d2),
                  getW(wF, wR, wC, ${c} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${f===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${c}),
                  getX(batch, xF, xR, xC, ${c} + 1),
                  getX(batch, xF, xR, xC, ${c} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${c}, d2),
                  getW(wF, wR, wC, ${c} + 1, d2),
                  getW(wF, wR, wC, ${c} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},_2=class{constructor(e,t=!1,r=null,n=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=or(this.outputShape.length);let s=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,u=e.filterHeight,p=e.filterWidth,l=p,d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let m=0;m<p;m++)d+=`
           vec4 xTexelC${m*2};
           int xTexelC${m*2}Ready;
           vec4 xTexelC${m*2+1};
           int xTexelC${m*2+1}Ready;
           vec4 xC${m};`;d+=`
     for (int r = 0; r < ${u}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let m=0;m<p;m++)d+=`
           xTexelC${m*2} = vec4(0.0);
           xTexelC${m*2}Ready = 0;
           xTexelC${m*2+1} = vec4(0.0);
           xTexelC${m*2+1}Ready = 0;
           xC${m} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let m=0;m<(l+1)/2;m++){let g=m*2;if(d+=`
           xC = xCCorner + ${g*o};
           `,i===1){if(g<p&&(s%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }
               `,o===1&&g>0?d+=`
                 xC${g} = vec4(xTexelC${g-2}.zw, xTexelC${g}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${g} = vec4(previous.zw, xTexelC${g}.xy);
                   } else {
                     xC${g} = vec4(0.0, 0.0, xTexelC${g}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xC${g} = xTexelC${g};
                 `,g+1<p)){let y=s%2===0?w.nearestLargerEven(o):o;o%2===0&&s%2===1||o%2!==0&&s%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${y};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                     xTexelC${g+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${g+1}.zw = vec2(0.0);
                     }
                     xTexelC${g+1}Ready = 1;
                   }
                   `,o>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${g+1} = vec4(previous.zw, xTexelC${g+1}.xy);
                     } else {
                      xC${g+1} = vec4(0.0, 0.0, xTexelC${g+1}.xy);
                     }
                     `:d+=`
                     xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.xy);
                     `):y===1?d+=`
                     xC${g+1} = xTexelC${g};
                     `:d+=`
                     xCOffset = xC + ${y};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                       xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${g+1}.zw = vec2(0.0);
                       }
                       xTexelC${g+1}Ready = 1;
                     }

                     xC${g+1} = xTexelC${g+1};
                     `}}else g<p&&(s%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.0);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
               `,g+1<p&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${g+1} = vec4(xTexelC${g+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(
                   xTexelC${g}.xy, xTexelC${g+1}.xy);
               `,g+1<p&&(d+=`
                   xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
                 `)));g<p&&(d+=`
             wTexel = getW(r, ${g}, d1, d2);
             dotProd += xC${g}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${g}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,g+1<p&&(d+=`
               wTexel = getW(r, ${g+1}, d1, d2);
               dotProd += xC${g+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${g+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let h="",c="";r&&(n?h=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${r}
         }`:a?h=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${r}
         }`:h=`vec4 activation(vec4 x) {
           ${r}
         }`,c="result = activation(result);");let f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${h}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${f}
         ${c}
         setOutput(result);
       }
     `}},LZ=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=or(this.outputShape.length);let{dataFormat:r}=t,n=xr(),a=r==="channelsLast",s=a?1:2,i=a?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,u="";for(let p=0;p<=1;p++)for(let l=0;l<=1;l++)u+=`
          blockIndex = rc.z + ${l};
          pos = rc.y + ${p};

          ${o}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${s}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${a}) {
                  innerDims = vec2(d1, ch);
                  result[${p*2+l}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${p*2+l}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${n.output} = result;
      }
    `}};function _h(e,t){let r=e.length;return r>=3?t?[...e.slice(0,-3),e[r-3]*e[r-2],e[r-1]]:[...e.slice(0,-3),e[r-3],e[r-2]*e[r-1]]:!t&&r===1&&e[0]>1?[e[0],1]:null}function E2({x:e,filter:t,convInfo:r,backend:n,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let u=e.shape,p=n.texData.get(e.dataId),l=r.inChannels,d=u[0]*u[1]*u[2],h=r.outChannels,c=r.dataFormat==="channelsLast",f=!1,m=!1,g,y=[];if(s!=null){let b=_h(s.shape,c);b!=null&&(s=ue({inputs:{x:s},backend:n,attrs:{shape:b}}),y.push(s))}if(a!=null){let b=_h(a.shape,c);b!=null&&(a=ue({inputs:{x:a},backend:n,attrs:{shape:b}}),y.push(a))}if(!((d===1||h===1)&&l>v2)&&p.isPacked&&c&&p.texture!=null&&u[2]%2!==0&&w.arraysEqual(p.shape.slice(-3),u.slice(-3))){let b=u[0]*u[1]*(u[2]+1),x={dataId:e.dataId,shape:[1,b,r.inChannels],dtype:e.dtype},v=p.shape;p.shape=p.shape.slice(),p.shape[p.shape.length-2]++,w.assert(ip(p.shape,x.shape),()=>`packed reshape ${p.shape} to ${x.shape} isn't free`);let I=ue({inputs:{x:t},backend:n,attrs:{shape:[1,r.inChannels,r.outChannels]}});y.push(I);let T=Ch({a:x,b:I,backend:n,transposeA:f,transposeB:m,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),_=n.texData.get(T.dataId);w.assert(_.isPacked,()=>"batchMatMul result is expected to be packed"),p.shape=v,_.shape=r.outShape,g=Gr({inputs:{x:T},backend:n}),g.shape=r.outShape,y.push(T)}else{let b=r.outHeight*r.outWidth,x=ue({inputs:{x:e},backend:n,attrs:{shape:c?[r.batchSize,b,r.inChannels]:[r.batchSize,r.inChannels,b]}}),v=ue({inputs:{x:t},backend:n,attrs:{shape:[1,r.inChannels,r.outChannels]}}),I=Ch({a:c?x:v,b:c?v:x,transposeA:!c,transposeB:m,backend:n,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});g=ue({inputs:{x:I},backend:n,attrs:{shape:r.outShape}}),y.push(x),y.push(v),y.push(I)}for(let b of y)n.disposeIntermediateTensorInfo(b);return g}function $2({x:e,filter:t,convInfo:r,backend:n,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:u,filterHeight:p,inChannels:l,outWidth:d,outHeight:h,dataFormat:c}=r,f=c==="channelsLast",m=u*p*l,g=h*d,y=[r.batchSize,m,g],b=!0,x=!1,v=[];if(s!=null){let j=_h(s.shape,f);j!=null&&(s=ue({inputs:{x:s},backend:n,attrs:{shape:j}}),v.push(s))}if(a!=null){let j=_h(a.shape,f);j!=null&&(a=ue({inputs:{x:a},backend:n,attrs:{shape:j}}),v.push(a))}let I=ue({inputs:{x:t},backend:n,attrs:{shape:[1,m,w.sizeFromShape(t.shape)/m]}});v.push(I);let T=new LZ(y,r),_=[e.shape,[r.padInfo.top,r.padInfo.left],[r.strideHeight,r.strideWidth],[r.dilationHeight,r.dilationWidth],[r.inChannels],[r.filterWidth*r.inChannels],[r.outWidth]],E=n.runWebGLProgram(T,[e],"float32",_),A=ue({inputs:{x:E},backend:n,attrs:{shape:y}});v.push(E),v.push(A);let R=a!=null,F=s!=null,S=o==="leakyrelu",M=o?op(o,!0):null,B=new w2(f?A.shape:I.shape,f?I.shape:A.shape,f?[r.batchSize,g,r.outChannels]:[r.batchSize,r.outChannels,g],b,x,R,M,F,S),U=f?[A,I]:[I,A];if(a&&U.push(a),F&&U.push(s),S){let j=n.makeTensorInfo([],"float32",w.createScalarValue(i,"float32"));U.push(j),v.push(j)}let G=n.runWebGLProgram(B,U,"float32"),K=ue({inputs:{x:G},backend:n,attrs:{shape:r.outShape}});v.push(G);for(let j of v)n.disposeIntermediateTensorInfo(j);return K}function PZ(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:p,dimRoundingMode:l}=n,d=N.convertConv2DDataFormat(u),h=N.computeConv2DInfo(a.shape,s.shape,i,p,o,l,!1,d),c;if(h.filterHeight===1&&h.filterWidth===1&&h.dilationHeight===1&&h.dilationWidth===1&&h.strideHeight===1&&h.strideWidth===1&&(h.padInfo.type==="SAME"||h.padInfo.type==="VALID"))c=E2({x:a,filter:s,convInfo:h,backend:r});else if(h.strideWidth<=2&&d==="channelsLast"&&H().getBool("WEBGL_EXP_CONV")){let m=new _2(h),g=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];c=r.runWebGLProgram(m,[a,s],"float32",g)}else if(H().getBool("WEBGL_CONV_IM2COL"))c=$2({x:a,filter:s,convInfo:h,backend:r});else{let m=new C2(h);c=r.runWebGLProgram(m,[a,s],"float32")}let f=ue({inputs:{x:c},backend:r,attrs:{shape:h.outShape}});return r.disposeIntermediateTensorInfo(c),f}var BZ={kernelName:ei,backendName:"webgl",kernelFunc:PZ},WZ=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,r=e.strideWidth,n=e.padInfo.top,a=e.padInfo.left,s=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${n};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${a};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${s?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}},VZ=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,r=e.filterWidth,n=e.strideHeight,a=e.strideWidth,s=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,o=r-1-e.padInfo.left,u=s?1:2,p=s?2:3,l=s?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${l}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${p}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${s}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},UZ=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,r=e.strideHeight,n=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${a};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${r} - ${s};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${n} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},GZ=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,r=e.filterHeight,n=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=r-1-e.padInfo.top,p=n-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${o}, ${u}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${a}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${r}; wR++) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${r} - 1 - wR;

            for (int wC = 0; wC < ${n}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${n} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function HZ(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:p,filterShape:l}=n,d=N.convertConv2DDataFormat(u),h=N.computeConv2DInfo(a.shape,l,i,1,o,p,!1,d),c=new WZ(h);return r.runWebGLProgram(c,[a,s],"float32")}var jZ={kernelName:Bh,backendName:"webgl",kernelFunc:HZ},qZ=class{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=or(this.outputShape.length);let t=e.filterHeight,r=e.filterWidth,n=t-1-e.padInfo.top,a=r-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${n}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            int wCPerm = ${r} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}};function KZ(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:p,dimRoundingMode:l}=n,d=N.convertConv2DDataFormat(p),h=N.computeConv2DInfo(i,s.shape,o,1,u,l,!1,d);if(H().getBool("WEBGL_PACK")&&d==="channelsLast"){let c=[[h.strideHeight,h.strideWidth]],f=new qZ(h);return r.runWebGLProgram(f,[a,s],"float32",c)}else{let c=new VZ(h);return r.runWebGLProgram(c,[a,s],"float32")}}var XZ={kernelName:ti,backendName:"webgl",kernelFunc:KZ};function ZZ(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=n,p=N.computeConv3DInfo(a.shape,s.shape,i,u,o),l=new zZ(p);return r.runWebGLProgram(l,[a,s],"float32")}var JZ={kernelName:ri,backendName:"webgl",kernelFunc:ZZ};function YZ(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=n,p=N.computeConv3DInfo(a.shape,u,i,1,o),l=new UZ(p);return r.runWebGLProgram(l,[a,s],"float32")}var QZ={kernelName:ll,backendName:"webgl",kernelFunc:YZ};function eJ(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=n,p=N.computeConv3DInfo(u,s.shape,o,1,i),l=new GZ(p);return r.runWebGLProgram(l,[a,s],"float32")}var tJ={kernelName:ul,backendName:"webgl",kernelFunc:eJ},rJ=wu+`
  return cos(x);
`,nJ=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${co}
  return result;
`,aJ=qe({opSnippet:rJ,packedOpSnippet:nJ}),sJ={kernelName:ni,backendName:"webgl",kernelFunc:aJ},iJ=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,oJ=qe({opSnippet:iJ}),lJ={kernelName:ai,backendName:"webgl",kernelFunc:oJ},uJ=class{constructor(e,t,r,n,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,u]=e,[p]=t,[l,d]=r;this.outputShape=[p,l,d,u];let h=n==="bilinear"?1:0,[c,f]=[`${i-1}.0`,`${o-1}.0`],[m,g,y]=l>1?[`${(i-1)/(l-1)}`,"(y2-y1) * height_ratio",`y1*${c} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${c}`],[b,x,v]=d>1?[`${(o-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${b});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${s}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${x};

        float in_y = ${y};
        if( in_y < 0.0 || in_y > ${c} ) {
          setOutput(float(${a}));
          return;
        }
        float in_x = ${v};
        if( in_x < 0.0 || in_x > ${f} ) {
          setOutput(float(${a}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${h} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}},pJ=e=>{let{inputs:t,backend:r,attrs:n}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:p}=n,l=new uJ(a.shape,s.shape,o,u,p);return r.runWebGLProgram(l,[a,s,i],"float32")},dJ={kernelName:dl,backendName:"webgl",kernelFunc:pJ},up;(function(e){e.Prod="*",e.Sum="+"})(up||(up={}));var Tv=class{constructor(e,t,r,n){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let a=this.outputShape.length,s=this.op===up.Prod?"1.0":"0.0",i=r?s:`getX(${Cv(a,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],u="",p="";r?(u=n?`end != ${o-1}`:"end != 0",p=n?"end + 1":"end - 1"):(u=n?`end + pow2 < ${o}`:"end >= pow2",p=n?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${it(a)} coords = getOutputCoords();
        int end = ${_v(a,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${p};
          ${_v(a,"coords",this.op)} = idx;
          val ${this.op}= getX(${Cv(a,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function Cv(e,t,r){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${r} for rank ${e} is not yet supported`)}function _v(e,t,r){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw new Error(`Cumulative ${r} for rank ${e} is not yet supported`)}function A2(e,t,r,n,a,s){let i=t.shape.length,o=N.getAxesPermutation([n],i),u=t;o!=null&&(u=mr({inputs:{x:t},backend:r,attrs:{perm:o}}));let p=N.getInnerMostAxes(1,i)[0];if(p!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${n}`);let l=u.shape[p],d=Gr({inputs:{x:u},backend:r});for(let h=0;h<=Math.ceil(Math.log2(l))-1;h++){let c=new Tv(e,u.shape,!1,s),f=[[h]],m=d;d=r.runWebGLProgram(c,[d],d.dtype,f),r.disposeIntermediateTensorInfo(m)}if(a){let h=new Tv(e,u.shape,a,s),c=d;d=r.runWebGLProgram(h,[d],d.dtype),r.disposeIntermediateTensorInfo(c)}if(o!=null){let h=N.getUndoAxesPermutation(o),c=mr({inputs:{x:d},backend:r,attrs:{perm:h}});return r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(u),c}return d}function hJ(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=n;return A2(up.Prod,a,r,s,i,o)}var cJ={kernelName:pl,backendName:"webgl",kernelFunc:hJ};function fJ(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=n;return A2(up.Sum,a,r,s,i,o)}var mJ={kernelName:si,backendName:"webgl",kernelFunc:fJ};function gJ(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=n;if(a.shape.length===1){let u=r.readSync(a.dataId),p=r.readSync(s.dataId),l=p2(u,p,s.dtype,s.shape,i);return r.makeTensorInfo([i],s.dtype,l)}else if(a.shape.length===2){let u=r.bufferSync(a),p=r.bufferSync(s),l=I8(u,p,i,o);return r.makeTensorInfo(l.shape,s.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}var yJ={kernelName:yp,backendName:"webgl",kernelFunc:gJ},bJ=class{constructor(e,t,r){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=r,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function xJ(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockSize:s,dataFormat:i}=n,o=a.shape[0],u=i==="NHWC"?a.shape[1]:a.shape[2],p=i==="NHWC"?a.shape[2]:a.shape[3],l=i==="NHWC"?a.shape[3]:a.shape[1],d=u*s,h=p*s,c=l/(s*s),f=i==="NHWC"?[o,d,h,c]:[o,c,d,h],m=new bJ(f,s,i);return r.runWebGLProgram(m,[a],a.dtype)}var wJ={kernelName:hl,backendName:"webgl",kernelFunc:xJ},F2=class{constructor(e,t=!1,r=null,n=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=or(this.outputShape.length);let s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,u="",p="";r&&(n?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:a?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:u=`
          float activation(float x) {
            ${r}
          }
        `,p="result = activation(result);");let l=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${s}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${l}
        ${p}
        setOutput(result);
      }
    `}},R2=class{constructor(e,t=!1,r=null,n=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=or(this.outputShape.length);let s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,p=e.filterHeight,l=e.filterWidth,d=l,h=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<l;g++)h+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;h+=`
    for (int r = 0; r < ${p}; r++) {
      `;for(let g=0;g<l;g++)h+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;h+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(d+1)/2;g++){let y=g*2;if(h+=`
          xC = xCCorner + ${y*u};
          `,o===1){if(y<l&&(i%2===1?(h+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }
              `,u===1&&y>0?h+=`
                xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                `:h+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                  } else {
                    xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                  }
                  `):h+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xC${y} = xTexelC${y};
                `,y+1<l)){let b=i%2===0?w.nearestLargerEven(u):u;u%2===0&&i%2===1||u%2!==0&&i%2!==1?(h+=`
                  xCOffset = xC + imod(pads[1], 2) + ${b};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                    xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${y+1}.zw = vec2(0.0);
                    }
                    xTexelC${y+1}Ready = 1;
                  }
                  `,u>1?h+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                    } else {
                     xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                    }
                    `:h+=`
                    xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                    `):b===1?h+=`
                    xC${y+1} = xTexelC${y};
                    `:h+=`
                    xCOffset = xC + ${b};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                      xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${y+1}.zw = vec2(0.0);
                      }
                      xTexelC${y+1}Ready = 1;
                    }

                    xC${y+1} = xTexelC${y+1};
                    `}}else y<l&&(i%2===1?(h+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.0);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
              `,y+1<l&&(h+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                `)):(h+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(
                  xTexelC${y}.xy, xTexelC${y+1}.xy);
              `,y+1<l&&(h+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                `)));y<l&&(h+=`
            wTexel = getW(r, ${y}, d1, q);
            dotProd += xC${y} * vec4(wTexel.xz, wTexel.xz);
          `,y+1<l&&(h+=`
              wTexel = getW(r, ${y+1}, d1, q);
              dotProd += xC${y+1} * vec4(wTexel.xz, wTexel.xz);
            `))}h+=`
    }
  `,h+=`
      }
    `;let c="",f="";r&&(n?c=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:a?c=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:c=`vec4 activation(vec4 x) {
          ${r}
        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${s};
        int q = d2 - d1 * ${s};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${h}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${f}
        setOutput(result);
      }
    `}};function vJ(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:p}=n,l=u;l==null&&(l=[1,1]),w.assert(N.eitherStridesOrDilationsAreOne(i,l),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let d=N.computeConv2DInfo(a.shape,s.shape,i,l,o,p,!0),h;H().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?h=new R2(d):h=new F2(d);let c=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return r.runWebGLProgram(h,[a,s],"float32",c)}var kJ={kernelName:ii,backendName:"webgl",kernelFunc:vJ},IJ=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,r=e.strideWidth,n=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${s} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${n};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${a};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},SJ=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,r=e.filterWidth,n=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=r-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${o}; dm++) {
              int d2 = d1 * ${o} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function NJ(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:p,filterShape:l}=n,d=N.computeConv2DInfo(a.shape,l,i,o,u,p,!0),h=new IJ(d);return r.runWebGLProgram(h,[a,s],"float32")}var TJ={kernelName:Wh,backendName:"webgl",kernelFunc:NJ};function CJ(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:p,inputShape:l}=n,d=N.computeConv2DInfo(l,s.shape,i,o,u,p,!0),h=new SJ(d);return r.runWebGLProgram(h,[a,s],"float32")}var _J={kernelName:Vh,backendName:"webgl",kernelFunc:CJ},EJ=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function $J(e){let{inputs:t,backend:r}=e,{x:n}=t,a=[...n.shape,...n.shape],s=w.sizeFromShape(n.shape),i=ue({inputs:{x:n},backend:r,attrs:{shape:[s]}}),o=new EJ(s),u=r.runWebGLProgram(o,[i],i.dtype),p=ue({inputs:{x:u},backend:r,attrs:{shape:a}});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(u),p}var AJ={kernelName:bp,backendName:"webgl",kernelFunc:$J},FJ=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:r,padInfo:n,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:p}=e,{top:l,left:d}=n;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${s});
      const ivec2 pads = ivec2(${l}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${o}; w++) {
              int wIn = wBeg + w * ${p};

              if (wIn >= 0 && wIn < ${r}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function RJ(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=n,p=N.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",u),l,d=new FJ(p);l=r.runWebGLProgram(d,[a,s],"float32");let h=ue({inputs:{x:l},backend:r,attrs:{shape:p.outShape}});return r.disposeIntermediateTensorInfo(l),h}var DJ={kernelName:oi,backendName:"webgl",kernelFunc:RJ};function MJ(e){let{inputs:t,backend:r,attrs:n}=e,{equation:a}=n,s=t,{allDims:i,summedDims:o,idDims:u}=N.decodeEinsumEquation(a,s.length);N.checkEinsumDimSizes(i.length,u,s);let{path:p,steps:l}=N.getEinsumComputePath(o,u),d=l.length,h=null,c=i.length,f=[];for(let m=0;m<d;++m){for(let g of l[m]){let{permutationIndices:y,expandDims:b}=N.getEinsumPermutation(c,u[g]),x;N.isIdentityPermutation(y)?x=s[g]:(x=mr({inputs:{x:s[g]},backend:r,attrs:{perm:y}}),f.push(x));let v=x.shape.slice();for(let I=0;I<b.length;++I)v.splice(b[I],0,1);w.arraysEqual(x.shape,v)||(x=ue({inputs:{x},backend:r,attrs:{shape:v}}),f.push(x)),h===null?h=x:(h=Cx({inputs:{a:x,b:h},backend:r}),f.push(h))}m<d-1&&(p[m]>=0&&(h=of({inputs:{x:h},backend:r,attrs:{axis:p[m]-(i.length-c),keepDims:!1}}),f.push(h)),c--)}for(let m of f)m!==h&&r.disposeIntermediateTensorInfo(m);return h}var OJ={kernelName:Uh,backendName:"webgl",kernelFunc:MJ},zJ="return (x >= 0.0) ? x : (exp(x) - 1.0);",LJ=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,PJ=qe({opSnippet:zJ,packedOpSnippet:LJ}),BJ={kernelName:ui,backendName:"webgl",kernelFunc:PJ},WJ="return (b >= 0.0) ? a : a * (b + 1.0);",VJ=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,UJ=e=>{let{inputs:t,backend:r}=e,{dy:n,y:a}=t,s=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new dd(VJ,n.shape,a.shape):new Xo(WJ,n.shape,a.shape);return r.runWebGLProgram(s,[n,a],n.dtype)},GJ={kernelName:cl,backendName:"webgl",kernelFunc:UJ},HJ=`
  return vec4(equal(a, b));
`,jJ="return float(a == b);",qJ=ar({opSnippet:jJ,packedOpSnippet:HJ,dtype:"bool",cpuKernelImpl:C8}),KJ={kernelName:ml,backendName:"webgl",kernelFunc:qJ},XJ=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${N.ERF_P};
  float a1 = ${N.ERF_A1};
  float a2 = ${N.ERF_A2};
  float a3 = ${N.ERF_A3};
  float a4 = ${N.ERF_A4};
  float a5 = ${N.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,ZJ=qe({opSnippet:XJ}),JJ={kernelName:fl,backendName:"webgl",kernelFunc:ZJ},YJ=wu+`
  return exp(x);
`,QJ=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,D2=qe({opSnippet:YJ,packedOpSnippet:QJ,cpuKernelImpl:_8,dtype:"float32"}),e9={kernelName:pi,backendName:"webgl",kernelFunc:D2};function Am(e){let{inputs:t,attrs:r,backend:n}=e,{dim:a}=r,{input:s}=t,i=s.shape.length,o=s.shape.slice(),u=a;return a<0&&(w.assert(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+a+1),o.splice(u,0,1),ue({inputs:{x:s},backend:n,attrs:{shape:o}})}var t9={kernelName:gl,backendName:"webgl",kernelFunc:Am},Ev="return exp(x) - 1.0;",r9=qe({opSnippet:Ev,packedOpSnippet:Ev,cpuKernelImpl:E8}),n9={kernelName:di,backendName:"webgl",kernelFunc:r9},$v=class{constructor(e,t,r){this.variableNames=["real","imag"];let n=t[1];this.outputShape=t;let a=r?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=r?`${n}.0`:"1.0",i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${a};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${n});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${n}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${s};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function M2(e,t,r){let n=r.texData.get(e.dataId),a=w.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=a/s,o=ue({inputs:{x:e},backend:r,attrs:{shape:[i,s]}}),u=o.shape,p=new $v("real",u,t),l=new $v("imag",u,t),d=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:u},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:u}],h=r.runWebGLProgram(p,d,"float32"),c=r.runWebGLProgram(l,d,"float32"),f=Qa({inputs:{real:h,imag:c},backend:r});r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(c);let m=ue({inputs:{x:f},backend:r,attrs:{shape:e.shape}});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(f),m}function a9(e){let{inputs:t,backend:r}=e,{input:n}=t;return M2(n,!1,r)}var s9={kernelName:Gh,backendName:"webgl",kernelFunc:a9},i9=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function cd(e){let{backend:t,attrs:r}=e,{shape:n,value:a}=r,{dtype:s}=r;if(s=s||w.inferDtype(a),s==="string"){let i=w.getArrayFromDType(s,w.sizeFromShape(n));return i.fill(a),t.makeTensorInfo(n,s,i)}else{let i=new i9(n,a),o=[[a]];return t.runWebGLProgram(i,[],s,o)}}var o9={kernelName:xp,backendName:"webgl",kernelFunc:cd},l9=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},u9={kernelName:yl,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:r}=e,n=t,a=new l9(r.shape);return n.runWebGLProgram(a,[r],r.dtype)}},Av="return floor(x);",p9=qe({opSnippet:Av,packedOpSnippet:Av,cpuKernelImpl:$8}),d9={kernelName:hi,backendName:"webgl",kernelFunc:p9},h9=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,c9=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,f9=ar({opSnippet:h9,packedOpSnippet:c9,dtype:"int32"}),m9={kernelName:ci,backendName:"webgl",kernelFunc:f9},g9=class{constructor(e){this.variableNames=["A"];let t=xr(),[r,n]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}.0, ${r}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},y9=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=xr(),[r,n]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${n}.0, ${r}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},b9={kernelName:sh,backendName:"webgl",kernelFunc:x9},wo,Df=H().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function x9(e){let{inputs:t,backend:r,attrs:n}=e,{pixels:a}=t,{numChannels:s}=n,i=typeof HTMLVideoElement<"u"&&a instanceof HTMLVideoElement,o=typeof HTMLImageElement<"u"&&a instanceof HTMLImageElement,[u,p]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],l=[p,u],d=[p,u,s];if(o||i){let m=H().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(wo==null||m!==Df)&&(Df=m,wo=document.createElement("canvas").getContext("2d",{willReadFrequently:Df})),wo.canvas.width=u,wo.canvas.height=p,wo.drawImage(a,0,0,u,p),a=wo.canvas}let h=r.makeTensorInfo(l,"int32");r.texData.get(h.dataId).usage=Zr.PIXELS,r.gpgpu.uploadPixelDataToTexture(r.getTexture(h.dataId),a);let c=H().getBool("WEBGL_PACK")?new y9(d):new g9(d),f=r.runWebGLProgram(c,[h],"int32");return r.disposeData(h.dataId),f}function w9(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:p,dataFormat:l,dilations:d,dimRoundingMode:h,activation:c,leakyreluAlpha:f}=n,m=N.convertConv2DDataFormat(l),g=N.computeConv2DInfo(a.shape,s.shape,u,d,p,h,!1,m),y,b=[],x=i!=null,v=o!=null,I=c==="leakyrelu",T=()=>{let E=[a,s],A=(R,F)=>{if(F==="NCHW"&&R.shape.length===1&&R.shape[0]!==1){let S=ue({inputs:{x:R},backend:r,attrs:{shape:[R.shape[0],1,1]}});return b.push(S),S}return R};if(x&&E.push(A(i,l)),v&&E.push(A(o,l)),I){let R=r.makeTensorInfo([],"float32",w.createScalarValue(f,"float32"));E.push(R),b.push(R)}return E};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=E2({x:a,filter:s,convInfo:g,backend:r,bias:i,activation:c,preluActivationWeights:o,leakyreluAlpha:f});else if(g.strideWidth<=2&&m==="channelsLast"&&H().getBool("WEBGL_EXP_CONV")){let E=c?op(c,!0):null,A=new _2(g,x,E,v,I),R=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],F=T();y=r.runWebGLProgram(A,F,"float32",R)}else if(H().getBool("WEBGL_CONV_IM2COL"))y=$2({x:a,filter:s,convInfo:g,backend:r,bias:i,activation:c,preluActivationWeights:o,leakyreluAlpha:f});else{let E=c?op(c,!1):null,A=new C2(g,x,E,v,I),R=T();y=r.runWebGLProgram(A,R,"float32")}let _=ue({inputs:{x:y},backend:r,attrs:{shape:g.outShape}});return b.push(y),b.forEach(E=>r.disposeIntermediateTensorInfo(E)),_}var v9={kernelName:Ss,backendName:"webgl",kernelFunc:w9};function k9(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:p,dilations:l,dimRoundingMode:d,activation:h,leakyreluAlpha:c}=n,f=[],m=l;m==null&&(m=[1,1]),w.assert(N.eitherStridesOrDilationsAreOne(u,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`);let g=N.computeConv2DInfo(a.shape,s.shape,u,m,p,d,!0),y=H().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=h?op(h,y):null,x=[a,s],v=i!=null,I=o!=null,T=h==="leakyrelu";if(v&&x.push(i),I&&x.push(o),T){let R=r.makeTensorInfo([],"float32",w.createScalarValue(c,"float32"));x.push(R),f.push(R)}let _;y?_=new R2(g,v,b,I,T):_=new F2(g,v,b,I,T);let E=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],A=r.runWebGLProgram(_,x,"float32",E);return f.forEach(R=>r.disposeIntermediateTensorInfo(R)),A}var I9={kernelName:Ns,backendName:"webgl",kernelFunc:k9},S9=class{constructor(e,t,r,n){this.sliceDim=e,this.strides=t,this.paramsShape=n,this.variableNames=["x","indices"],this.outputShape=r;let a=it(r.length),s=`
    int index;`;for(let i=0;i<this.sliceDim;i++)s+=`
          index = round(getIndices(coords[0], ${i}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};
          flattenIndex += index * ${this.strides[i]};`;this.userCode=`
         void main() {
          ${a} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${s}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};function N9(e){let{inputs:t,backend:r}=e,{params:n,indices:a}=t,s=a.shape,i=s[s.length-1],o=w.sizeFromShape(n.shape),[u,p,l,d]=N.prepareAndValidate(n,a),h=ue({inputs:{x:a},backend:r,attrs:{shape:[p,i]}}),c=ue({inputs:{x:n},backend:r,attrs:{shape:[w.sizeFromShape(n.shape)/l,l]}});if(r.shouldExecuteOnCPU([n,a])||n.dtype==="string"){let y=r.readSync(a.dataId),b=r.bufferSync(n),x=A8(y,b,n.dtype,p,i,l,d,n.shape,o);return r.makeTensorInfo(u,n.dtype,x.values)}let f=new S9(i,d,[p,l],n.shape),m=r.runWebGLProgram(f,[c,h],c.dtype),g=ue({inputs:{x:m},backend:r,attrs:{shape:u}});return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(m),g}var T9={kernelName:xl,backendName:"webgl",kernelFunc:N9},C9=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let r=it(this.rank),n=_9(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${n}));
      }
    `}};function _9(e,t){let r=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let a=0;a<e.length;a++)a===2?n.push("index"):n.push(`${r[a]}`);return n.join()}function O2(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=n,u=w.parseAxisParam(i,a.shape)[0];if(H().get("DEBUG")){let b=r.readSync(s.dataId),x=a.shape[u];for(let v=0;v<b.length;++v){let I=b[v];w.assert(I<=x-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${x-1}]`)}}let p=N.segment_util.collectGatherOpShapeInfo(a,s,u,o),l=w.sizeFromShape(s.shape),d=[],h=ue({inputs:{x:a},backend:r,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),c=ue({inputs:{x:s},backend:r,attrs:{shape:[p.batchSize,l/p.batchSize]}});d.push(h),d.push(c);let f=[p.batchSize,p.outerSize,l/p.batchSize,p.sliceSize];if(r.shouldExecuteOnCPU([a,s])||a.dtype==="string"){let b=r.bufferSync(c),x=r.bufferSync(h),v=F8(x,b,f);return d.forEach(I=>r.disposeIntermediateTensorInfo(I)),r.makeTensorInfo(p.outputShape,v.dtype,v.values)}let m=new C9(h.shape,f),g=r.runWebGLProgram(m,[h,c],h.dtype);d.push(g);let y=ue({inputs:{x:g},backend:r,attrs:{shape:p.outputShape}});return d.forEach(b=>r.disposeIntermediateTensorInfo(b)),y}var E9={kernelName:bl,backendName:"webgl",kernelFunc:O2},$9="return float(a > b);",A9=`
  return vec4(greaterThan(a, b));
`,F9=ar({opSnippet:$9,packedOpSnippet:A9,cpuKernelImpl:R8,dtype:"bool"}),R9={kernelName:wl,backendName:"webgl",kernelFunc:F9},D9="return float(a >= b);",M9=`
  return vec4(greaterThanEqual(a, b));
`,O9=ar({opSnippet:D9,packedOpSnippet:M9,dtype:"bool",cpuKernelImpl:D8}),z9={kernelName:mi,backendName:"webgl",kernelFunc:O9};function L9(e){let{inputs:t,backend:r}=e,{input:n}=t;return M2(n,!0,r)}var P9={kernelName:Hh,backendName:"webgl",kernelFunc:L9},B9="return float(!isnan(x) && !isinf(x));",W9=qe({opSnippet:B9,dtype:"bool"}),V9={kernelName:yi,backendName:"webgl",kernelFunc:W9},U9="return float(isinf(x));",G9=qe({opSnippet:U9,dtype:"bool"}),H9={kernelName:bi,backendName:"webgl",kernelFunc:G9},j9="return float(isnan(x));",q9=qe({opSnippet:j9,dtype:"bool"}),K9={kernelName:xi,backendName:"webgl",kernelFunc:q9},X9="return float(a < b);",Z9=`
  return vec4(lessThan(a, b));
`,J9=ar({opSnippet:X9,packedOpSnippet:Z9,cpuKernelImpl:M8,dtype:"bool"}),Y9={kernelName:vl,backendName:"webgl",kernelFunc:J9},Q9="return float(a <= b);",eY=`
  return vec4(lessThanEqual(a, b));
`,tY=ar({opSnippet:Q9,packedOpSnippet:eY,cpuKernelImpl:O8,dtype:"bool"}),rY={kernelName:kl,backendName:"webgl",kernelFunc:tY};function nY(e){let{backend:t,attrs:r}=e,{start:n,stop:a,num:s}=r,i=z8(n,a,s);return t.makeTensorInfo([i.length],"float32",i)}var aY={kernelName:Il,backendName:"webgl",kernelFunc:nY},sY=wu+`
  return x < 0.0 ? 0./0. : log(x);
`,iY=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,oY=qe({opSnippet:sY,packedOpSnippet:iY,cpuKernelImpl:L8}),lY={kernelName:vi,backendName:"webgl",kernelFunc:oY},uY=wu+`
  return log(1.0 + x);
`,pY=qe({opSnippet:uY}),dY={kernelName:ki,backendName:"webgl",kernelFunc:pY},hY="return float(a >= 1.0 && b >= 1.0);",cY=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,fY=ar({opSnippet:hY,packedOpSnippet:cY,dtype:"bool"}),mY={kernelName:Sl,backendName:"webgl",kernelFunc:fY},gY="return float(!(x >= 1.0));",yY=qe({opSnippet:gY}),bY={kernelName:Nl,backendName:"webgl",kernelFunc:yY},xY="return float(a >= 1.0 || b >= 1.0);",wY=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,vY=ar({opSnippet:xY,packedOpSnippet:wY,dtype:"bool"}),kY={kernelName:Tl,backendName:"webgl",kernelFunc:vY},IY=class{constructor(e,t,r,n,a){this.variableNames=["x"],this.outputShape=[];let s=t,i=e[3]-1;this.outputShape=e;let o,u=`float(${r}) + float(${n}) * sum`;a===.5?o=`inversesqrt(${u})`:a===1?o=`1.0/(${u})`:o=`exp(log(${u}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${s}; j <= ${s}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${o};
        setOutput(val);
      }
    `}},SY=class{constructor(e,t,r,n,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=t,i=e[3]-1;this.outputShape=e;let o,u=`float(${r}) + float(${n}) * sum`;a===.5?o=`inversesqrt(${u})`:a===1?o=`1.0/(${u})`:o=`exp(log(${u}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${s};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${s}; j <= ${s}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${o};
        setOutput(result);
      }
    `}},NY=e=>{let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=n,p=H().getBool("WEBGL_PACK_NORMALIZATION")?new SY(a.shape,s,i,o,u):new IY(a.shape,s,i,o,u);return r.runWebGLProgram(p,[a],a.dtype)},TY={kernelName:Ii,backendName:"webgl",kernelFunc:NY},CY=class{constructor(e,t,r,n,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=r,this.alpha=n,this.beta=a,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${n}) * norm + float(${r});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${n})
                * float(${a})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${a});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}},_Y=e=>{let{inputs:t,backend:r,attrs:n}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:p,beta:l}=n,d=new CY(a.shape,o,u,p,l);return r.runWebGLProgram(d,[a,s,i],a.dtype)},EY={kernelName:Cl,backendName:"webgl",kernelFunc:_Y};function $Y(e,t,r,n){let a=w.sizeFromShape(t),s=w.sizeFromShape(e.shape)/a,i=ue({inputs:{x:e},attrs:{shape:[s,a]},backend:n}),o=fo(i,e.dtype,"max",n),u=ue({inputs:{x:o},attrs:{shape:r},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}function z2(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=n,o=a.shape.length,u=w.parseAxisParam(s,a.shape),p=u,l=N.getAxesPermutation(p,o),d=l!=null,h=r.shouldExecuteOnCPU([a]),c=a;if(d){if(h){let b=r.texData.get(c.dataId).values,x=new Array(o);for(let T=0;T<x.length;T++)x[T]=a.shape[l[T]];let v=Nx(b,a.shape,a.dtype,l,x);c=r.makeTensorInfo(x,a.dtype);let I=r.texData.get(c.dataId);I.values=v}else c=sf(a,l,r);p=N.getInnerMostAxes(p.length,o)}N.assertAxesAreInnerMostDims("max",p,o);let[f,m]=N.computeOutAndReduceShapes(c.shape,p),g=f;i&&(g=N.expandShapeToKeepDim(f,u));let y;if(h){let b=r.texData.get(c.dataId).values,x=P8(b,w.sizeFromShape(m),g,a.dtype);y=r.makeTensorInfo(g,a.dtype);let v=r.texData.get(y.dataId);v.values=x}else y=$Y(c,m,g,r);return d&&r.disposeIntermediateTensorInfo(c),y}var AY={kernelName:Si,backendName:"webgl",kernelFunc:z2},FY=Tx+`
  return max(a, b);
`,RY=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+co+`
  return result;
`,DY=ar({opSnippet:FY,packedOpSnippet:RY,cpuKernelImpl:B8}),MY={kernelName:Ni,backendName:"webgl",kernelFunc:DY};function OY(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t;mu(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n,p=1;w.assert(N.eitherStridesOrDilationsAreOne(i,p),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let l=N.computePool2DInfo(a.shape,s,i,p,o,u);if(l.filterWidth===1&&l.filterHeight===1&&w.arraysEqual(l.inShape,l.outShape))return Gr({inputs:{x:a},backend:r});let d=new lp(l,"max",!1);return r.runWebGLProgram(d,[a],a.dtype)}var zY={kernelName:Ti,backendName:"webgl",kernelFunc:OY};function LY(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:u,dimRoundingMode:p}=n,l=[1,1,1],d=N.computePool3DInfo(a.shape,s,i,l,o,p,u),h=new _x(d,"max",!1);return r.runWebGLProgram(h,[a],a.dtype)}var PY={kernelName:_l,backendName:"webgl",kernelFunc:LY},BY=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,r=e.strideWidth,n=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,u=a*s-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${a};
          wR += ${n}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${s} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},WY=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,r=e.strideHeight,n=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,p=e.effectiveFilterWidth,l=o-1-e.padInfo.front,d=u-1-e.padInfo.top,h=p-1-e.padInfo.left,c=o*u*p-1;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${d}, ${h});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${o};
           wD += ${a}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${s}) {
            float dyR = float(dyRCorner + wR) / ${r}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${n}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${c} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${p} +
                  wR * ${p} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function VY(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:u,pad:p,dimRoundingMode:l}=n,d=[1,1,1],h=N.computePool3DInfo(i.shape,o,u,d,p,l),c=new _x(h,"max",!0),f=r.runWebGLProgram(c,[i],i.dtype),m=new WY(h),g=r.runWebGLProgram(m,[a,f],i.dtype);return r.disposeIntermediateTensorInfo(f),g}var UY={kernelName:wp,backendName:"webgl",kernelFunc:VY};function GY(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:s,output:i}=t,o=s;mu([s,i],"maxPoolGrad");let{filterSize:u,strides:p,pad:l,dimRoundingMode:d}=n,h=N.computePool2DInfo(o.shape,u,p,1,l,d),c=!0,f=new lp(h,"max",c),m=r.runWebGLProgram(f,[o],o.dtype),g=new BY(h),y=r.runWebGLProgram(g,[a,m],o.dtype);return r.disposeIntermediateTensorInfo(m),y}var HY={kernelName:qh,backendName:"webgl",kernelFunc:GY};function jY(e,t,r,n){let a=new lp(r,"max",!1),s=n.runWebGLProgram(a,[e],"float32");a=new lp(r,"max",!0,!0,t);let i=n.runWebGLProgram(a,[e],"float32");return[s,i]}var qY={kernelName:Kh,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{x:n}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,u=r;w.assert(n.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);let p=[1,1];w.assert(N.eitherStridesOrDilationsAreOne(s,p),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${p}'`);let l=N.computePool2DInfo(n.shape,a,s,p,i),[d,h]=jY(n,o,l,u);return[d,h]}};function KY(e,t,r,n){let a=w.sizeFromShape(t),s=w.sizeFromShape(e.shape)/a,i=ue({inputs:{x:e},attrs:{shape:[s,a]},backend:n}),o=fo(i,"float32","mean",n),u=ue({inputs:{x:o},attrs:{shape:r},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}var XY={kernelName:Ci,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{x:n}=e,{keepDims:a,axis:s}=t,i=r,o=n.shape.length,u=w.parseAxisParam(s,n.shape),p=u,l=N.getAxesPermutation(p,o),d=l!=null,h=i.shouldExecuteOnCPU([n]),c=[],f=n;if(d){if(h){let x=i.texData.get(f.dataId).values,v=new Array(o);for(let _=0;_<v.length;_++)v[_]=n.shape[l[_]];let I=Nx(x,n.shape,n.dtype,l,v);f=i.makeTensorInfo(v,n.dtype);let T=i.texData.get(f.dataId);T.values=I}else f=sf(n,l,i);c.push(f),p=N.getInnerMostAxes(p.length,o)}N.assertAxesAreInnerMostDims("sum",p,o);let[m,g]=N.computeOutAndReduceShapes(f.shape,p),y=m;a&&(y=N.expandShapeToKeepDim(m,u));let b=KY(f,g,y,i);for(let x of c)i.disposeIntermediateTensorInfo(x);return b}};function ZY(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n,o=a.shape.length,u=w.parseAxisParam(s,a.shape),p=u,l=N.getAxesPermutation(p,o),d=a;l!=null&&(d=mr({inputs:{x:a},backend:r,attrs:{perm:l}}),p=N.getInnerMostAxes(p.length,a.shape.length)),N.assertAxesAreInnerMostDims("min",p,o);let[h,c]=N.computeOutAndReduceShapes(d.shape,p),f=w.sizeFromShape(c),m=ue({inputs:{x:d},backend:r,attrs:{shape:[-1,f]}}),g=fo(m,m.dtype,"min",r),y;if(i){let b=N.expandShapeToKeepDim(h,u);y=ue({inputs:{x:g},backend:r,attrs:{shape:b}})}else y=ue({inputs:{x:g},backend:r,attrs:{shape:h}});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),l!=null&&r.disposeIntermediateTensorInfo(d),y}var JY={kernelName:_i,backendName:"webgl",kernelFunc:ZY},YY=Tx+`
  return min(a, b);
`,QY=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+co+`
  return result;
`,eQ=ar({opSnippet:YY,packedOpSnippet:QY,cpuKernelImpl:W8}),tQ={kernelName:Ei,backendName:"webgl",kernelFunc:eQ},rQ=class{constructor(e,t,r){this.variableNames=["x"],this.outputShape=t.map((p,l)=>p[0]+e[l]+p[1]);let n=e.length,a=it(n),s=t.map(p=>p[0]).join(","),i=t.map((p,l)=>p[0]+e[l]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n),u=r==="reflect"?0:1;if(n===1){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${a} start = ${a}(${s});
      ${a} end = ${a}(${i});

      void main() {
        ${a} outC = getOutputCoords();
        for (int i = 0; i < ${n}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${a} coords = outC - start;
        setOutput(getX(${o}));
      }
    `}},nQ=class{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((c,f)=>c[0]+e[f]+c[1]);let n=e.length,a=it(n),s=t.map(c=>c[0]).join(","),i=t.map((c,f)=>c[0]+e[f]).join(","),o=dr("rc",n),u=dr("source",n),p=`${o[n-1]} < ${this.outputShape[n-1]}`,l=n===1?"source":`vec2(${u.slice(-2).join()})`,d=r==="reflect"?0:1,h="";if(n===1){let c=`
        ${a} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;h=`
        ${a} rc = outputLoc;
        ${c}
        result[0] = getChannel(getX(${u.join()}), ${l});
        ${o[n-1]} += 1;
        if(${p}) {
          ${c}
          result[1] = getChannel(getX(${u.join()}), ${l});
        }
      `}else{let c=`
        ${a} source = rc;
        ${a} lt = ${a}(lessThan(source, start));
        ${a} gte = ${a}(greaterThanEqual(source, end));
        ${a} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;h=`
        ${a} rc = outputLoc;
        ${c}
        result[0] = getChannel(getX(${u.join()}), ${l});
        ${o[n-1]} += 1;
        if(${p}) {
          ${c}
          result[1] = getChannel(getX(${u.join()}), ${l});
        }
        rc = outputLoc;
        ${o[n-2]} += 1;
        if(${o[n-2]} < ${this.outputShape[n-2]}) {
          ${c}
          result[2] = getChannel(getX(${u.join()}), ${l});
          ${o[n-1]} += 1;
          if(${p}) {
            ${c}
            result[3] = getChannel(getX(${u.join()}), ${l});
          }
        }
      `}this.userCode=`
      const ${a} start = ${a}(${s});
      const ${a} end = ${a}(${i});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}},aQ=({inputs:e,backend:t,attrs:r})=>{let{x:n}=e,{paddings:a,mode:s}=r,i=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new nQ(n.shape,a,s):new rQ(n.shape,a,s);return t.runWebGLProgram(i,[n],n.dtype)},sQ={kernelName:$i,backendName:"webgl",kernelFunc:aQ},iQ=`if (b == 0.0) return NAN;
  return mod(a, b);`,oQ=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+co+`
  return result;
`,lQ=ar({opSnippet:iQ,packedOpSnippet:oQ}),uQ={kernelName:El,backendName:"webgl",kernelFunc:lQ},pQ=class{constructor(e,t,r){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,r],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}},dQ=`
if (a == b) {
  return 1.0;
};
return a / b;`,hQ=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,L2=ar({opSnippet:dQ,packedOpSnippet:hQ,checkOutOfBounds:!0}),cQ={kernelName:li,backendName:"webgl",kernelFunc:L2},Fv="return a - b;",P2=ar({opSnippet:Fv,packedOpSnippet:Fv,supportsComplex:!0,cpuKernelImpl:lX}),fQ={kernelName:eo,backendName:"webgl",kernelFunc:P2};function B2(e){let{inputs:t,backend:r,attrs:n}=e,{logits:a}=t,{dim:s}=n,i=w.parseAxisParam([s],a.shape),o=z2({inputs:{x:a},backend:r,attrs:{reductionIndices:i,keepDims:!1}}),u=N.expandShapeToKeepDim(o.shape,i),p=ue({inputs:{x:o},backend:r,attrs:{shape:u}}),l=P2({inputs:{a,b:p},backend:r}),d=D2({inputs:{x:l},backend:r}),h=of({inputs:{x:d},backend:r,attrs:{axis:i,keepDims:!1}}),c=ue({inputs:{x:h},backend:r,attrs:{shape:u}}),f=L2({inputs:{a:d,b:c},backend:r});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(c),f}var mQ={kernelName:Yi,backendName:"webgl",kernelFunc:B2};function gQ(e){let{inputs:t,backend:r,attrs:n}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=n,u=o?a:B2({inputs:{logits:a},backend:r,attrs:{dim:a.shape.length-1}}),p=u.shape[0],l=u.shape[1],d=new pQ(p,l,s),h=[[i]],c=r.runWebGLProgram(d,[u],"int32",h);return o||r.disposeIntermediateTensorInfo(u),c}var yQ={kernelName:$l,backendName:"webgl",kernelFunc:gQ},bQ=gn+`
  return -x;
`,xQ=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function wQ(e){let{inputs:t,backend:r}=e,{x:n}=t;if(r.shouldExecuteOnCPU([n])){let s=r.texData.get(n.dataId),[i,o]=U8(s.values,n.shape,n.dtype);return r.makeTensorInfo(o,n.dtype,i)}let a;return H().getBool("WEBGL_PACK_UNARY_OPERATIONS")?a=new Ca(n.shape,xQ):a=new zn(n.shape,bQ),r.runWebGLProgram(a,[n],n.dtype)}var vQ={kernelName:Al,backendName:"webgl",kernelFunc:wQ},kQ=jn.nonMaxSuppressionV3Impl;function IQ(e){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:r,attrs:n}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=n,p=r.readSync(a.dataId),l=r.readSync(s.dataId),{selectedIndices:d}=kQ(p,l,i,o,u);return r.makeTensorInfo([d.length],"int32",new Int32Array(d))}var SQ={kernelName:Rl,backendName:"webgl",kernelFunc:IQ},NQ=jn.nonMaxSuppressionV4Impl;function TQ(e){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:r,attrs:n}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:p}=n,l=r.readSync(a.dataId),d=r.readSync(s.dataId),{selectedIndices:h,validOutputs:c}=NQ(l,d,i,o,u,p);return[r.makeTensorInfo([h.length],"int32",new Int32Array(h)),r.makeTensorInfo([],"int32",new Int32Array([c]))]}var CQ={kernelName:Dl,backendName:"webgl",kernelFunc:TQ},_Q=jn.nonMaxSuppressionV5Impl;function EQ(e){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:r,attrs:n}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:p}=n,l=r.readSync(a.dataId),d=r.readSync(s.dataId),h=i,c=o,f=u,m=p,{selectedIndices:g,selectedScores:y}=_Q(l,d,h,c,f,m);return[r.makeTensorInfo([g.length],"int32",new Int32Array(g)),r.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var $Q={kernelName:Ml,backendName:"webgl",kernelFunc:EQ},AQ=class{constructor(e,t,r,n){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${n}), float(${r}),
                      float(index == coords.y)));
      }
    `}},FQ=e=>{let{inputs:t,backend:r,attrs:n}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:u}=n,p=w.sizeFromShape(a.shape),l=new AQ(p,i,o,u),d=ue({inputs:{x:a},backend:r,attrs:{shape:[p]}}),h=r.runWebGLProgram(l,[d],s);r.disposeIntermediateTensorInfo(d);let c=[...a.shape,i],f=ue({inputs:{x:h},backend:r,attrs:{shape:c}});return r.disposeIntermediateTensorInfo(h),f},RQ={kernelName:Fi,backendName:"webgl",kernelFunc:FQ};function Eh(e){let{inputs:t,backend:r}=e,{x:n}=t;if(n.dtype==="complex64"){let a=hd({inputs:{input:n},backend:r}),s=Eh({inputs:{x:a},backend:r}),i=lf({inputs:{input:n},backend:r}),o=Eh({inputs:{x:i},backend:r}),u=Qa({inputs:{real:s,imag:o},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),u}else return cd({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:r})}var DQ={kernelName:tu,backendName:"webgl",kernelFunc:Eh};function W2(e){let{inputs:t,backend:r}=e,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let a=hd({inputs:{input:n},backend:r}),s=W2({inputs:{x:a},backend:r}),i=lf({inputs:{input:n},backend:r}),o=Eh({inputs:{x:i},backend:r}),u=Qa({inputs:{real:s,imag:o},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),u}else return cd({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:r})}var MQ={kernelName:Ol,backendName:"webgl",kernelFunc:W2};function OQ(e){let{inputs:t,backend:r,attrs:n}=e,{axis:a}=n;if(t.length===1)return Am({inputs:{input:t[0]},backend:r,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(l=>{w.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],u=t.map(l=>{let d=Am({inputs:{input:l},backend:r,attrs:{dim:a}});return o.push(d),d}),p=T2({inputs:u,backend:r,attrs:{axis:a}});return o.forEach(l=>r.disposeIntermediateTensorInfo(l)),p}var zQ={kernelName:zl,backendName:"webgl",kernelFunc:OQ},LQ=class{constructor(e,t,r){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((u,p)=>u[0]+e[p]+u[1]);let n=e.length,a=it(n),s=t.map(u=>u[0]).join(","),i=t.map((u,p)=>u[0]+e[p]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n);if(n===1){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${a} start = ${a}(${s});
      ${a} end = ${a}(${i});

      void main() {
        ${a} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${a} coords = outC - start;
          setOutput(getX(${o}));
        }
      }
    `}},PQ=class{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);let n=e.length,a=it(n),s=t.map(f=>f[0]).join(","),i=t.map((f,m)=>f[0]+e[m]).join(","),o=dr("rc",n),u=dr("source",n),p=`${o[n-1]} < ${this.outputShape[n-1]}`,l=n===1?"source":`vec2(${u.slice(-2).join()})`,d=[`${a} rc = outputLoc;`,`${o[n-1]} += 1;
       if(${p}) {
      `,n===1?"":`}
       rc = outputLoc;
       ${o[n-2]} += 1;
       if(${o[n-2]} < ${this.outputShape[n-2]}) {`,n===1?"":`  ${o[n-1]} += 1;
         if(${p}) {`],h=n===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",c="";for(let f=0,m=n===1?2:4;f<m;f++)c+=`
        ${d[f]}
        if (${h}) {
          result[${f}] = float(value);
        } else {
          ${a} source = rc - start;
          result[${f}] = getChannel(getX(${u.join()}), ${l});
        }
      `;c+=n===1?"} ":"}}",this.userCode=`
      const ${a} start = ${a}(${s});
      const ${a} end = ${a}(${i});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${c}
        setOutput(result);
      }
    `}},V2=e=>{let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{paddings:s,constantValue:i}=n;if(w.sizeFromShape(a.shape)===0){let p=s.map((l,d)=>l[0]+a.shape[d]+l[1]);return cd({backend:r,attrs:{shape:p,value:i,dtype:a.dtype}})}let o=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new PQ(a.shape,s,i):new LQ(a.shape,s,i),u=[[i]];return r.runWebGLProgram(o,[a],a.dtype,u)},BQ={kernelName:Ri,backendName:"webgl",kernelFunc:V2},WQ=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,VQ=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+co+`
  return result;
`,UQ=ar({opSnippet:WQ,packedOpSnippet:VQ}),GQ={kernelName:Di,backendName:"webgl",kernelFunc:UQ};function HQ(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n,o=a.shape.length,u=[],p=w.parseAxisParam(s,a.shape),l=p,d=N.getAxesPermutation(l,o),h=a;d!=null&&(h=mr({inputs:{x:a},backend:r,attrs:{perm:d}}),l=N.getInnerMostAxes(l.length,o),u.push(h)),N.assertAxesAreInnerMostDims("prod",l,o);let c;if(r.shouldExecuteOnCPU([h])){let f=r.texData.get(h.dataId).values,{outVals:m,outShape:g,outDtype:y}=H8(h.shape,h.dtype,f,l);c=r.makeTensorInfo(g,y,m)}else{let[f,m]=N.computeOutAndReduceShapes(h.shape,l),g=w.sizeFromShape(m),y=ue({inputs:{x:h},backend:r,attrs:{shape:[-1,g]}}),b=ec(a.dtype),x=fo(y,b,"prod",r);c=ue({inputs:{x},backend:r,attrs:{shape:f}}),u.push(y),u.push(x)}if(i){u.push(c);let f=N.expandShapeToKeepDim(c.shape,p);c=ue({inputs:{x:c},backend:r,attrs:{shape:f}})}return u.forEach(f=>r.disposeIntermediateTensorInfo(f)),c}var jQ={kernelName:Oi,backendName:"webgl",kernelFunc:HQ};function qQ(e){let{inputs:t,backend:r,attrs:n}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=n,u=a.map(y=>r.readSync(y.dataId)),p=a.map(y=>y.shape),l=r.readSync(s.dataId),d=r.readSync(i.dataId),[h,c,f]=j8(u,p,l,s.shape,s.dtype,d,i.shape,o),m=h.map(y=>r.makeTensorInfo([y.length],"int32",y)),g=r.makeTensorInfo(f,s.dtype,c);return m.concat([g])}var KQ={kernelName:Xh,backendName:"webgl",kernelFunc:qQ};function XQ(e){let{inputs:t,backend:r}=e,{starts:n,limits:a,deltas:s}=t,i=r.readSync(n.dataId),o=r.readSync(a.dataId),u=r.readSync(s.dataId),[p,l]=q8(i,n.shape,n.dtype,o,a.shape,u,s.shape),d=r.makeTensorInfo([p.length],"int32",p),h=r.makeTensorInfo([l.length],n.dtype,l);return[d,h]}var ZQ={kernelName:Zh,backendName:"webgl",kernelFunc:XQ};function JQ(e){let{inputs:t,backend:r,attrs:n}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=n,p=r.readSync(a.dataId),l=r.readSync(s.dataId),d=r.readSync(i.dataId),h=o.map(g=>r.readSync(g.dataId)),c=o.map(g=>g.shape),[f,m]=K8(p,a.shape,l,s.shape,s.dtype,d,i.shape,h,c,u);return r.makeTensorInfo(f,s.dtype,m)}var YQ={kernelName:Jh,backendName:"webgl",kernelFunc:JQ},U2=e=>{let{backend:t,attrs:r}=e,{start:n,stop:a,step:s,dtype:i}=r,o=X8(n,a,s,i);return t.makeTensorInfo([o.length],i,o)},QQ={kernelName:vp,backendName:"webgl",kernelFunc:U2},eee="return 1.0 / x;",tee=qe({opSnippet:eee}),ree={kernelName:zi,backendName:"webgl",kernelFunc:tee},nee=gn+`
  return (x < 0.0) ? 0.0 : x;
`,aee=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,see=qe({opSnippet:nee,packedOpSnippet:aee}),iee={kernelName:Li,backendName:"webgl",kernelFunc:see},oee=gn+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,lee=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,uee=qe({opSnippet:oee,packedOpSnippet:lee}),pee={kernelName:Wi,backendName:"webgl",kernelFunc:uee},dee=class{constructor(e,t,r,n,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,u]=e;this.outputShape=[s,t,r,u];let p=[n&&t>1?i-1:i,n&&r>1?o-1:o],l=[n&&t>1?t-1:t,n&&r>1?r-1:r],d;a?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${p[0]/l[0]},
          ${p[1]/l[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},hee=class{constructor(e,t,r,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,u]=e;this.outputShape=[s,t,r,u];let p=[n&&t>1?i-1:i,n&&r>1?o-1:o],l=[n&&t>1?t-1:t,n&&r>1?r-1:r],d;a?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${p[0]/l[0]},
          ${p[1]/l[1]},
          ${p[1]/l[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${r-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function cee(e){let{inputs:t,backend:r,attrs:n}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=n,[u,p]=o,l=H().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new hee(a.shape,u,p,s,i):new dee(a.shape,u,p,s,i);return r.runWebGLProgram(l,[a],"float32")}var fee={kernelName:Bi,backendName:"webgl",kernelFunc:cee},mee=class{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,n,a]=t,[,s,i]=e,o=[r&&s>1?n-1:n,r&&i>1?a-1:a],u=[r&&s>1?s-1:s,r&&i>1?i-1:i],p=o[0]/u[0],l=o[1]/u[1],d=1/p,h=1/l,c=Math.ceil(d)*2+2,f=Math.ceil(h)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${p});
        const float widthScale = float(${l});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${h});

        const int winHeight = int(${c});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${n-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function gee(e){let{inputs:t,backend:r,attrs:n}=e,{images:a,dy:s}=t,{alignCorners:i}=n,o=new mee(s.shape,a.shape,i);return r.runWebGLProgram(o,[s],s.dtype)}var yee={kernelName:Bl,backendName:"webgl",kernelFunc:gee},bee=class{constructor(e,t,r,n,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,u]=e;this.outputShape=[s,t,r,u];let p=[n&&t>1?i-1:i,n&&r>1?o-1:o],l=[n&&t>1?t-1:t,n&&r>1?r-1:r],d=n?"0.5":"0.0",h;a?h="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":h="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${p[0]/l[0]},
          ${p[1]/l[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${h};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}},xee=class{constructor(e,t,r,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,u]=e;this.outputShape=[s,t,r,u];let p=[n&&t>1?i-1:i,n&&r>1?o-1:o],l=[n&&t>1?t-1:t,n&&r>1?r-1:r],d=n?"0.5":"0.0",h;a?h="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":h="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${p[0]/l[0]},
          ${p[1]/l[1]},
          ${p[1]/l[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${h};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${r-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function wee(e){let{inputs:t,backend:r,attrs:n}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=n,[u,p]=o,l=H().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new xee(a.shape,u,p,s,i):new bee(a.shape,u,p,s,i);return r.runWebGLProgram(l,[a],a.dtype)}var vee={kernelName:Pi,backendName:"webgl",kernelFunc:wee},kee=class{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,n,a]=t,[,s,i]=e,o=[r&&s>1?n-1:n,r&&i>1?a-1:a],u=[r&&s>1?s-1:s,r&&i>1?i-1:i],p=o[0]/u[0],l=o[1]/u[1],d=1/p,h=1/l,c=Math.ceil(d)*2+2,f=Math.ceil(h)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${p});
        const float widthScale = float(${l});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${h});

        const int winHeight = int(${c});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${o[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${o[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${n}) - 1),
                ${r} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${a}) - 1),
                ${r} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Iee(e){let{inputs:t,backend:r,attrs:n}=e,{images:a,dy:s}=t,{alignCorners:i}=n,o=new kee(s.shape,a.shape,i);return r.runWebGLProgram(o,[s],s.dtype)}var See={kernelName:Pl,backendName:"webgl",kernelFunc:Iee},Nee=class{constructor(e,t){this.variableNames=["x"];let r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);if(this.outputShape=e,r===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let n=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,a=e.map((i,o)=>n(o)).join(","),s=it(r);this.userCode=`
      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}},Tee=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);this.outputShape=e;let n=dr("rc",r),a=`${n[r-1]} + 1 < ${this.outputShape[r-1]}`,s=`${n[r-2]} + 1 < ${this.outputShape[r-2]}`,i=it(r);r===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${a}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${o(n.slice())};
          if(${a}){
            result.g = ${u(n.slice())};
          }
          if(${s}) {
            result.b = ${p(n.slice())};
            if(${a}) {
              result.a = ${l(n.slice())};
            }
          }
          setOutput(result);
        }
    `;function o(c){return d(c)}function u(c){return c[r-1]="("+c[r-1]+" + 1)",d(c)}function p(c){return c[r-2]="("+c[r-2]+" + 1)",d(c)}function l(c){return c[r-1]="("+c[r-1]+" + 1)",c[r-2]="("+c[r-2]+" + 1)",d(c)}function d(c){let f=e.map((y,b)=>h(b,c)),m=f.join(","),g=f.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${g}))`}function h(c,f){return t.indexOf(c)!==-1&&e[c]!==1?`${e[c]} - ${f[c]} - 1`:`${f[c]}`}}};function Cee(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{dims:s}=n,i=a.shape.length,o=w.parseAxisParam(s,a.shape);if(i===0)return Gr({inputs:{x:a},backend:r});let u=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Tee(a.shape,o):new Nee(a.shape,o);return r.runWebGLProgram(u,[a],a.dtype)}var _ee={kernelName:Vi,backendName:"webgl",kernelFunc:Cee},Eee=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let r=e[1],n=e[2];this.outputShape=e;let a="";typeof t=="number"?a=`float outputValue = ${t.toFixed(2)};`:a=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${a}
          if(coordX >= 0 && coordX < ${n} && coordY >= 0 && coordY < ${r}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}},$ee={kernelName:ru,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{image:n}=e,{radians:a,fillValue:s,center:i}=t,o=r,u=new Eee(n.shape,s),[p,l]=N.getImageCenter(i,n.shape[1],n.shape[2]),d=[[p,l,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(u,[n],n.dtype,d)}},Aee=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Fee=qe({opSnippet:Aee}),Ree={kernelName:Ui,backendName:"webgl",kernelFunc:Fee},Dee="return inversesqrt(x);",Mee=qe({opSnippet:Dee,cpuKernelImpl:Z8}),Oee={kernelName:Gi,backendName:"webgl",kernelFunc:Mee},Ex=class{constructor(e,t,r,n,a,s,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let u=it(a.length),p=it(s.length),l="";r===1?l="i":r===2&&(l="i, j");let d=`getIndices(${l})`,h="";n===1?h="i":n===2&&(h="i, coords[1]");let c=`getUpdates(${h})`,f="";o&&(f="coords[0], coords[1]");let m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${a});

        void main() {
          ${p} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${g};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${c};
              found = true;
            }
          }
          setOutput(mix(${m}, sum, float(found)));
        }
      `}},zee=class{constructor(e,t,r,n,a,s,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;let u=it(a.length),p=it(s.length),l="";r===1?l="i":r===2&&(l="i, j");let d=`getIndices(${l})`,h="";n===1?h="i":n===2&&(h="i, coords[1]");let c=`getUpdates(${h})`,f="";o&&(f="coords[0], coords[1]");let m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides",y=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${u} strides = ${u}(${a});

        void main() {
          ${p} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${d});
              flattenedIndex += index.xz * ${g};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${y};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${c};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${m}, sum, found));
        }
      `}};function Lee(e){let{inputs:t,backend:r,attrs:n}=e,{indices:a,updates:s}=t,{shape:i}=n,{sliceRank:o,numUpdates:u,sliceSize:p,strides:l,outputSize:d}=N.calculateShapes(s,a,i),h=[d/p,p];if(d===0)return r.makeTensorInfo(i,a.dtype);let c=ue({inputs:{x:a},backend:r,attrs:{shape:[u,o]}}),f=ue({inputs:{x:s},backend:r,attrs:{shape:[u,p]}}),m=r.makeTensorInfo([],"float32",new Float32Array([0])),g;H().getBool("WEBGL_PACK")?g=new zee(u,o,c.shape.length,f.shape.length,l,h):g=new Ex(u,o,c.shape.length,f.shape.length,l,h);let y=r.runWebGLProgram(g,[f,c,m],f.dtype),b=ue({inputs:{x:y},backend:r,attrs:{shape:i}});return r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(m),b}var Pee={kernelName:Wl,backendName:"webgl",kernelFunc:Lee},Bee=class{constructor(e,t,r,n){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,r];let a="while (left < right) {",s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=H().getNumber("WEBGL_VERSION")===2?a:s,o=n==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${o} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function Wee(e){let{inputs:t,backend:r,attrs:n}=e,{sortedSequence:a,values:s}=t,{side:i}=n,o=new Bee(a.shape[0],a.shape[1],s.shape[1],i),u=[[a.shape[1]]];return r.runWebGLProgram(o,[a,s],"int32",u)}var Vee={kernelName:Ul,backendName:"webgl",kernelFunc:Wee},Uee=class{constructor(e,t,r){this.variableNames=["c","a","b"],this.outputShape=t;let n,a;if(r>4)throw Error(`Where for rank ${r} is not yet supported`);if(r===1)a="resRC",n="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],u=[];for(let p=0;p<t.length;p++)u.push(`${i[p]}`),p<e&&o.push(`${i[p]}`);n=o.join(),a=u.join()}let s=it(r);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        float cVal = getC(${n});
        if (cVal >= 1.0) {
          setOutput(getA(${a}));
        } else {
          setOutput(getB(${a}));
        }
      }
    `}};function Gee(e){let{inputs:t,backend:r}=e,{condition:n,t:a,e:s}=t,i=new Uee(n.shape.length,a.shape,a.shape.length);return r.runWebGLProgram(i,[n,a,s],en(a.dtype,s.dtype))}var Hee={kernelName:Gl,backendName:"webgl",kernelFunc:Gee},jee=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${N.SELU_SCALEALPHA};
  float scale = ${N.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,qee=qe({opSnippet:jee}),Kee={kernelName:Hi,backendName:"webgl",kernelFunc:qee},Xee=wu+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Zee=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Jee=qe({opSnippet:Xee,packedOpSnippet:Zee,cpuKernelImpl:Y8}),Yee={kernelName:Ki,backendName:"webgl",kernelFunc:Jee},Qee=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,ete=qe({opSnippet:Qee}),tte={kernelName:qi,backendName:"webgl",kernelFunc:ete},rte=wu+`
  return sin(x);
`,nte=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${co}
  return result;
`,ate=qe({opSnippet:rte,packedOpSnippet:nte}),ste={kernelName:ji,backendName:"webgl",kernelFunc:ate},ite=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,ote=qe({opSnippet:ite}),lte={kernelName:jl,backendName:"webgl",kernelFunc:ote},ute=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,pte=qe({opSnippet:ute}),dte={kernelName:Xi,backendName:"webgl",kernelFunc:pte},hte=e=>{let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockShape:s,paddings:i}=n;w.assert(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((y,b)=>y*b),u=[[0,0]];u.push(...i);for(let y=1+s.length;y<a.shape.length;++y)u.push([0,0]);let p=[],l=V2({inputs:{x:a},backend:r,attrs:{paddings:u,constantValue:0}}),d=N.getReshaped(l.shape,s,o,!1),h=N.getPermuted(d.length,s.length,!1),c=N.getReshapedPermuted(l.shape,s,o,!1),f=ue({inputs:{x:l},backend:r,attrs:{shape:d}}),m=mr({inputs:{x:f},backend:r,attrs:{perm:h}}),g=ue({inputs:{x:m},backend:r,attrs:{shape:c}});return p.push(l),p.push(f),p.push(m),p.forEach(y=>r.disposeIntermediateTensorInfo(y)),g},cte={kernelName:ql,backendName:"webgl",kernelFunc:hte};function fte(e){let{inputs:t,backend:r}=e,{indices:n,values:a,denseShape:s,defaultValue:i}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${n.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${a.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=r.readSync(n.dataId),u=r.readSync(a.dataId),p=r.readSync(s.dataId),l=r.readSync(i.dataId)[0],[d,h,c,f,m]=eX(o,n.shape,n.dtype,u,a.dtype,p,l);return[r.makeTensorInfo(h,n.dtype,d),r.makeTensorInfo([h[0]],a.dtype,c),r.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),r.makeTensorInfo([m.length],n.dtype,new Int32Array(m))]}var mte={kernelName:kp,backendName:"webgl",kernelFunc:fte};function gte(e){let{inputs:t,backend:r}=e,{inputIndices:n,inputShape:a,newShape:s}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${n.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(r.readSync(a.dataId)),o=r.readSync(n.dataId),u=Array.from(r.readSync(s.dataId)),[p,l,d]=tX(o,n.shape,n.dtype,i,u);return[r.makeTensorInfo(l,n.dtype,p),r.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}var yte={kernelName:Xl,backendName:"webgl",kernelFunc:gte};function bte(e){let{inputs:t,backend:r}=e,{data:n,indices:a,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${a.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let i=r.readSync(n.dataId),o=r.readSync(a.dataId),u=r.readSync(s.dataId),[p,l]=h2(i,n.shape,n.dtype,o,u,!0);return r.makeTensorInfo(l,n.dtype,p)}var xte={kernelName:Ip,backendName:"webgl",kernelFunc:bte};function wte(e){let{inputs:t,backend:r}=e,{data:n,indices:a,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${a.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let i=r.readSync(n.dataId),o=r.readSync(a.dataId),u=r.readSync(s.dataId),[p,l]=h2(i,n.shape,n.dtype,o,u);return r.makeTensorInfo(l,n.dtype,p)}var vte={kernelName:Sp,backendName:"webgl",kernelFunc:wte};function kte(e){let{inputs:t,backend:r,attrs:n}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=n,{sliceRank:u,numUpdates:p,sliceSize:l,strides:d,outputSize:h}=N.calculateShapes(s,a,o),c=!1;if(s.dtype==="string"){let y=r.bufferSync(a),b=r.bufferSync(s),x=w.decodeString(r.readSync(i.dataId)[0]),v=J8(y,b,o,h,l,p,u,d,x,c);return r.makeTensorInfo(o,v.dtype,v.values)}let f=new Ex(p,u,a.shape.length,s.shape.length,d,[h,1],c),m=r.runWebGLProgram(f,[s,a,i],s.dtype),g=ue({inputs:{x:m},backend:r,attrs:{shape:o}});return r.disposeIntermediateTensorInfo(m),g}var Ite={kernelName:Zl,backendName:"webgl",kernelFunc:kte};function Ste(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=w.parseAxisParam(i,a.shape)[0],u=N.prepareSplitSize(a,s,o),p=a.shape.length,l=new Array(p).fill(0),d=a.shape.slice();return u.map(h=>{let c=[...d];c[o]=h;let f=vu({inputs:{x:a},backend:r,attrs:{begin:l,size:c}});return l[o]+=h,f})}var Nte={kernelName:Kl,backendName:"webgl",kernelFunc:Ste},Rv="return sqrt(x);",Tte=qe({opSnippet:Rv,packedOpSnippet:Rv,cpuKernelImpl:rX}),Cte={kernelName:Zi,backendName:"webgl",kernelFunc:Tte},_te="return x * x;",Ete=qe({opSnippet:_te}),$te={kernelName:Np,backendName:"webgl",kernelFunc:Ete},Dv="return (a - b) * (a - b);",Ate=ar({opSnippet:Dv,packedOpSnippet:Dv}),Fte={kernelName:Qi,backendName:"webgl",kernelFunc:Ate};function Rte(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");let s=r.readSync(a.dataId),i=N.fromUint8ToStringArray(s),o=nX(i,"string",n);return r.makeTensorInfo(a.shape,"string",o)}var Dte={kernelName:Tp,backendName:"webgl",kernelFunc:Rte};function Mte({inputs:e,attrs:t,backend:r}){let{x:n}=e,a=gn+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,s=new zn(n.shape,a);return r.runWebGLProgram(s,[n],n.dtype)}var Ote={kernelName:qa,backendName:"webgl",kernelFunc:Mte},zte=class{constructor(e,t,r){this.variableNames=["x"],this.outputShape=r;let n=r.length,a=it(r.length),s=it(r.length),i="";if(n===1)i="coords * strides + begin";else{let o=0;i=r.map((u,p)=>(o++,r.length===1?`coords * strides[${p}] + begin[${p}]`:`coords[${o-1}] * strides[${p}] + begin[${p}]`)).join(",")}this.userCode=`
      ${a} begin = ${a}(${e});
      ${a} strides = ${a}(${t});

      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function Lte(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:p,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h}=n,{finalShapeSparse:c,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=zt.sliceInfo(a.shape,s,i,o,u,p,l,d,h),I;if(m)I=ue({inputs:{x:a},backend:r,attrs:{shape:f}});else if(g||y){w.assert(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);let _=zt.computeOutShape(b,x,v),E=vu({inputs:{x:a},backend:r,attrs:{begin:b,size:_}});I=ue({inputs:{x:E},backend:r,attrs:{shape:f}}),r.disposeIntermediateTensorInfo(E)}else if(r.shouldExecuteOnCPU([a])){let _=r.readSync(a.dataId),E=ze(a.shape,a.dtype,_),A=aX(c,E,v,b);I=r.makeTensorInfo(f,a.dtype,A.values)}else{let _=new zte(b,v,c);I=r.runWebGLProgram(_,[a],a.dtype)}let T=ue({inputs:{x:I},backend:r,attrs:{shape:f}});return r.disposeIntermediateTensorInfo(I),T}var Pte={kernelName:Jl,backendName:"webgl",kernelFunc:Lte};function Bte(e){let{inputs:t,backend:r,attrs:n}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:p}=n,{data:l,dataSplits:d}=t,h=r.readSync(l.dataId),c=r.readSync(d.dataId),[f,m]=sX(h,c,a,s,i,o,u,p);return[r.makeTensorInfo([f.length],"string",f),r.makeTensorInfo(d.shape,"int32",m)]}var Wte={kernelName:Cp,backendName:"webgl",kernelFunc:Bte};function Vte(e){let{inputs:t,backend:r,attrs:n}=e,{skipEmpty:a}=n,{input:s,delimiter:i}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=r.readSync(s.dataId),u=r.readSync(i.dataId)[0],[p,l,d]=iX(o,u,a),h=l.length;return[r.makeTensorInfo([h,2],"int32",p),r.makeTensorInfo([h],"string",l),r.makeTensorInfo([2],"int32",new Int32Array(d))]}var Ute={kernelName:_p,backendName:"webgl",kernelFunc:Vte};function Gte(e){let{inputs:t,backend:r,attrs:n}=e,{numBuckets:a}=n,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=r.readSync(s.dataId),o=oX(i,a);return r.makeTensorInfo(s.shape,"int32",o)}var Hte={kernelName:Ep,backendName:"webgl",kernelFunc:Gte},jte="return tan(x);",qte=qe({opSnippet:jte}),Kte={kernelName:to,backendName:"webgl",kernelFunc:qte},Xte=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Zte=qe({opSnippet:Xte}),Jte={kernelName:ro,backendName:"webgl",kernelFunc:Zte};function Yte(e){let{inputs:t,backend:r,attrs:n}=e,{tensor:a,indices:s,updates:i}=t,{sliceRank:o,numUpdates:u,sliceSize:p,strides:l,outputSize:d}=N.calculateShapes(i,s,a.shape),h=[d/p,p];if(d===0)return r.makeTensorInfo(a.shape,s.dtype);let c=ue({inputs:{x:s},backend:r,attrs:{shape:[u,o]}}),f=ue({inputs:{x:i},backend:r,attrs:{shape:[u,p]}}),m=ue({inputs:{x:a},backend:r,attrs:{shape:h}}),g=new Ex(u,o,c.shape.length,f.shape.length,l,h,!1,!0),y=r.runWebGLProgram(g,[f,c,m],m.dtype),b=ue({inputs:{x:y},backend:r,attrs:{shape:a.shape}});return r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(y),b}var Qte={kernelName:Vl,backendName:"webgl",kernelFunc:Yte},ere=class{constructor(e,t){this.variableNames=["A"];let r=new Array(e.length);for(let s=0;s<r.length;s++)r[s]=e[s]*t[s];this.outputShape=r,this.rank=r.length;let n=it(this.rank),a=tre(e);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        setOutput(getA(${a}));
      }
    `}};function tre(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;let r=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let a=0;a<e.length;a++)n.push(`imod(${r[a]}, ${e[a]})`);return n.join()}function G2(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{reps:s}=n;if(a.dtype==="string"||a.shape.length>5){let o=r.readSync(a.dataId),u=a.dtype==="string"?o.map(d=>w.decodeString(d)):o,p=ze(a.shape,a.dtype,u),l=uX(p,s);return r.makeTensorInfo(l.shape,l.dtype,l.values)}let i=new ere(a.shape,s);return r.runWebGLProgram(i,[a],a.dtype)}var rre={kernelName:ja,backendName:"webgl",kernelFunc:G2},nre=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},are=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function ls(e,t){t!==null&&e.disposeIntermediateTensorInfo(t)}function Mv(e){let t=1;for(;t<e;)t*=2;return t}function sre(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{k:s,sorted:i}=n,o=H().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=H().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),p=a.shape,l=p[p.length-1];if(r.shouldExecuteOnCPU([a])||l<o||s>u){let A=r.readSync(a.dataId),[R,F]=pX(A,p,a.dtype,s,i);return[r.makeTensorInfo(R.shape,R.dtype,R.values),r.makeTensorInfo(F.shape,F.dtype,F.values)]}if(s===0)return p[p.length-1]=0,[r.makeTensorInfo(p,a.dtype,[]),r.makeTensorInfo(p,"int32",[])];if(l===1)return[a,cd({attrs:{shape:p,dtype:"int32",value:0},backend:r})];let d=r.texData.get(a.dataId),h=d!==null&&d.isPacked,c=h?r.unpackTensor(a):a,f=w.sizeFromShape(p)/l,m=ue({inputs:{x:c},attrs:{shape:[f,l]},backend:r});h&&ls(r,c);let g=Mv(s),y=Mv(l),b=null,x=()=>b===null?[m,m]:[m,b],v=(A,R,F)=>{let S=x(),M=new nre(F),B=[[l],[b===null?1:0],[Number.NEGATIVE_INFINITY],[A],[R]],U=b;b=r.runWebGLProgram(M,S,"int32",B),ls(r,U)};for(let A=1;A<g;A*=2){let R=A*2;for(let F=A;F>=1;F/=2)v(R,F,[f,y])}for(let A=y;A>g;A/=2){let R=x(),F=new are([f,A/2]),S=[[l],[b===null?1:0],[g]],M=b;b=r.runWebGLProgram(F,R,"int32",S),ls(r,M);let B=g/2,U=B*2;for(let G=B;G>=1;G/=2)v(U,G,b.shape)}let I=b;b=vu({inputs:{x:b},backend:r,attrs:{begin:0,size:[f,s]}}),ls(r,I);let T=O2({inputs:{x:m,indices:b},backend:r,attrs:{axis:1,batchDims:1}});ls(r,m);let _=p.slice(0,-1);_.push(s),I=b,b=ue({inputs:{x:b},attrs:{shape:_},backend:r}),ls(r,I);let E=T;return T=ue({inputs:{x:T},attrs:{shape:_},backend:r}),ls(r,E),[T,b]}var ire={kernelName:Yl,backendName:"webgl",kernelFunc:sre},ore=class{constructor(e,t,r,n,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let i=r==="nearest"?1:2,o;switch(n){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${o} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${a});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${a});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function lre(e){let{inputs:t,backend:r,attrs:n}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:p}=n,[l,d,h,c]=a.shape,[f,m]=p!=null?p:[d,h],g=[l,f,m,c],y=new ore(d,h,i,o,u,g);return r.runWebGLProgram(y,[a,s],"float32")}var ure={kernelName:Ql,backendName:"webgl",kernelFunc:lre};function pre(e){let{inputs:t,attrs:r,backend:n}=e,{axis:a}=r,{x:s}=t;mu(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=n.readSync(s.dataId),{outputValues:o,outputShape:u,indices:p}=dX(i,a,s.shape,s.dtype);return[n.makeTensorInfo(u,s.dtype,o),n.makeTensorInfo([p.length],"int32",p)]}var dre={kernelName:$p,backendName:"webgl",kernelFunc:pre};function hre(e){let{inputs:t,backend:r,attrs:n}=e,{value:a}=t,{axis:s}=n;s<0&&(s+=a.shape.length);let i=a,o=i.shape.length,u=a.shape[s],p=new Array(o-1),l=0;for(let m=0;m<o;m++)m!==s&&(p[l++]=i.shape[m]);let d=[],h=new Array(o).fill(0),c=i.shape.slice();c[s]=1;let f=new Array(u);for(let m=0;m<f.length;m++){h[s]=m;let g=vu({inputs:{x:i},backend:r,attrs:{begin:h,size:c}}),y=ue({inputs:{x:g},backend:r,attrs:{shape:p}});f[m]=y,d.push(g)}return d.forEach(m=>r.disposeIntermediateTensorInfo(m)),f}var cre={kernelName:eu,backendName:"webgl",kernelFunc:hre},fre=class{constructor(e,t){this.variableNames=["x","segmentIds"];let r=e.windowSize,n=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/r);this.outputShape=[n,i];let o="0.0",u="sumValue",p=Math.floor(r/4)*4,l=r%4,d=`
        sumValue += dot(values, segFilter);
    `,h="";a%r>0&&(h=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `);let c="";a%r>0&&(c=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${o};

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${c}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${s})) * float(${r}));
        int currentSeg = int(mod(float(outIdx), float(${s})));

        float sumValue = 0.0;

        for (int i = 0; i < ${p}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${p};
        if (${l===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${u});
      }
    `}};function mre(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,segmentIds:s}=t,{numSegments:i}=n,o=a.shape.length,u=[],p=0,l=N.getAxesPermutation([p],o),d=a;l!=null&&(d=mr({inputs:{x:a},backend:r,attrs:{perm:l}}),u.push(d),p=N.getInnerMostAxes(1,o)[0]);let h=N.segment_util.computeOutShape(d.shape,p,i),c=w.sizeFromShape([d.shape[p]]),f=ue({inputs:{x:d},backend:r,attrs:{shape:[-1,c]}});u.push(f);let m=ec(a.dtype),g=(v,I,T,_,E)=>{let A=v.shape[0],R=v.shape[1],F=N.segment_util.segOpComputeOptimalWindowSize(R,E),S={windowSize:F,inSize:R,batchSize:A,numSegments:E},M=new fre(S,I),B=r.compileAndRun(M,[v,T],_);if(u.push(B),B.shape[1]===E)return B;let U=U2({backend:r,attrs:{start:0,stop:E,step:1,dtype:"float32"}}),G=G2({inputs:{x:U},backend:r,attrs:{reps:[R/F]}});return u.push(U),u.push(G),g(B,I,G,_,E)},y=g(f,"unsortedSegmentSum",s,m,i),b=ue({inputs:{x:y},backend:r,attrs:{shape:h}}),x=b;if(l!=null){u.push(b);let v=N.getUndoAxesPermutation(l);x=mr({inputs:{x},backend:r,attrs:{perm:v}})}return u.forEach(v=>r.disposeIntermediateTensorInfo(v)),x}var gre={kernelName:Ap,backendName:"webgl",kernelFunc:mre},yre=[a7,i7,u7,h7,f7,y7,x7,v7,N7,C7,$7,R7,O7,B7,U7,H7,q7,J7,Q7,tZ,sZ,hZ,fZ,gZ,kZ,SZ,_Z,WX,AZ,OZ,BZ,jZ,XZ,JZ,QZ,tJ,sJ,lJ,dJ,cJ,mJ,yJ,wJ,kJ,TJ,_J,AJ,DJ,OJ,BJ,GJ,KJ,JJ,e9,t9,n9,s9,o9,u9,d9,m9,b9,v9,I9,T9,E9,R9,z9,BX,P9,DZ,V9,H9,K9,UX,Y9,rY,aY,lY,dY,mY,bY,kY,TY,EY,AY,MY,zY,PY,UY,HY,qY,XY,JY,tQ,sQ,uQ,yQ,jX,vQ,SQ,CQ,$Q,bZ,RQ,MQ,zQ,BQ,GQ,HX,jQ,KQ,ZQ,YQ,QQ,xZ,cQ,ree,iee,pee,KX,fee,yee,vee,See,_ee,$ee,Ree,Oee,Pee,Vee,Hee,Kee,Yee,tte,ste,lte,pZ,mQ,dte,cte,mte,yte,xte,vte,Ite,Nte,Cte,$te,Fte,Dte,Ote,Pte,Wte,Ute,Hte,fQ,t7,Kte,Jte,Qte,rre,ire,ure,r7,dre,cre,gre,DQ];for(let e of yre)Fp(e);var Je;(function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"})(Je||(Je={}));var pp;(function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"})(pp||(pp={}));var H2;function bre(e){H2=e.wasm.cwrap(Is,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function xre(e){let{inputs:t,backend:r,attrs:n}=e,{a,b:s,bias:i,preluActivationWeights:o}=t;if(a.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:u,transposeB:p,activation:l,leakyreluAlpha:d}=n,h=r.dataIdMap.get(a.dataId).id,c=r.dataIdMap.get(s.dataId).id,f=0;if(i!=null){let E=r.dataIdMap.get(i.dataId);if(E.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${E.shape.length}.`);f=E.id}let m=o==null?0:r.dataIdMap.get(o.dataId).id,g=pp[l];if(g==null)throw new Error(`${l} activation not yet supported for FusedConv2D in the wasm backend.`);let y=u?a.shape[2]:a.shape[1],b=p?s.shape[1]:s.shape[2],x=nu.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)),v=r.makeOutput([...x,y,b],a.dtype),I=r.dataIdMap.get(v.dataId).id,T=new Uint8Array(new Int32Array(a.shape).buffer),_=new Uint8Array(new Int32Array(s.shape).buffer);return H2(h,T,a.shape.length,c,_,s.shape.length,u,p,g,f,m,d||0,I),v}var wre={kernelName:Is,backendName:"wasm",setupFunc:bre,kernelFunc:xre};function Xe(e,t){let r;function n(s){r=s.wasm.cwrap(e,null,["number","number","number"])}function a(s){let{backend:i,inputs:{x:o}}=s,u=i.dataIdMap.get(o.dataId).id,p=i.makeOutput(o.shape,t||o.dtype),l=i.dataIdMap.get(p.dataId).id;return w.sizeFromShape(p.shape)===0||r(u,Je[o.dtype],l),p}return{kernelName:e,backendName:"wasm",setupFunc:n,kernelFunc:a}}var vre=Xe(Qo),kre=Xe(Vs),Ire=Xe(Us);function Kt(e,t,r){let n;function a(i){n=i.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function s(i){let{backend:o,inputs:u}=i,{a:p,b:l}=u,d=o.dataIdMap.get(p.dataId).id,h=o.dataIdMap.get(l.dataId).id,c=r!=null?r:p.dtype,f=N.assertAndGetBroadcastShape(p.shape,l.shape),m=o.makeOutput(f,c);if(w.sizeFromShape(f)===0)return m;let g=new Uint8Array(new Int32Array(p.shape).buffer),y=new Uint8Array(new Int32Array(l.shape).buffer),b=o.dataIdMap.get(m.dataId).id;return n(d,g,p.shape.length,h,y,l.shape.length,Je[p.dtype],b),m}return{kernelName:e,backendName:"wasm",setupFunc:a,kernelFunc:s}}var Sre=Kt(Ga),j2;function Nre(e){j2=e.wasm.cwrap(Gs,null,["array","number","number","number"])}function Tre(e){let{inputs:t,backend:r}=e,n=r.makeOutput(t[0].shape,t[0].dtype);if(w.sizeFromShape(n.shape)===0)return n;let a=t.map(o=>r.dataIdMap.get(o.dataId).id),s=new Uint8Array(new Int32Array(a).buffer),i=r.dataIdMap.get(n.dataId).id;return j2(s,a.length,Je[n.dtype],i),n}var Cre={kernelName:Gs,backendName:"wasm",setupFunc:Nre,kernelFunc:Tre};function uf(e){let{inputs:{x:t},backend:r}=e;if(t.dtype==="string")return hr(r.readSync(t.dataId),t.shape,t.dtype);let n=r.makeOutput(t.shape,t.dtype),a=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(n).set(a),n}var _re={kernelName:gi,backendName:"wasm",kernelFunc:uf},q2;function Ere(e){q2=e.wasm.cwrap(aa,null,["number","array","number","number","number","array","number"])}function Wa(e){let{inputs:t,backend:r,attrs:n}=e,[a,s]=Are(t.x.shape,n.perm),i=!0;for(let f=0;f<s.length;f++)s[f]!==f&&(i=!1);let o=$re(t.x.shape,n.perm),u={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){let f=uf({inputs:t,backend:r});return f.shape=o,f}let p=r.makeOutput(o,u.dtype),l=r.dataIdMap.get(u.dataId).id,d=r.dataIdMap.get(p.dataId).id,h=new Uint8Array(new Int32Array(s).buffer),c=new Uint8Array(new Int32Array(u.shape).buffer);return q2(l,c,u.shape.length,Je[u.dtype],d,h,s.length),p}function $re(e,t){let r=new Array(e.length);for(let n=0;n<r.length;n++)r[n]=e[t[n]];return r}function Are(e,t){let r=[],n=[];for(let a=0;a<e.length;++a)e[a]!==1&&r.push(e[a]),e[t[a]]!==1&&n.push(t[a]);for(let a=0;a<n.length;++a){let s=-1;for(let i=0;i<n.length;++i)n[i]>=a&&(s===-1||n[s]>n[i])&&(s=i);n[s]=a}return[r,n]}var Fre={kernelName:aa,backendName:"wasm",kernelFunc:Wa,setupFunc:Ere};function es(e,t,r){let n=e.shape,a=e.shape.length,s=w.parseAxisParam(t,n),i=s,o=N.getAxesPermutation(i,a),u=null,p=!1;if(o!=null){let l=new Array(a);for(let h=0;h<l.length;h++)l[h]=n[o[h]];i=N.getInnerMostAxes(i.length,a),u=Wa({inputs:{x:e},attrs:{perm:o},backend:r});let d=r.dataIdMap.get(e.dataId).id;r.dataIdMap.get(u.dataId).id!==d&&(p=!0)}return{transposed:u,originalAxes:s,axes:i,inputWasTransposed:p}}var K2;function Rre(e){K2=e.wasm.cwrap(el,null,["number, number, number"])}function Dre(e){let{backend:t,inputs:r,attrs:n}=e,{axis:a,keepDims:s}=n,{x:i}=r,o=t.dataIdMap.get(i.dataId).id,u=i,{transposed:p,axes:l,originalAxes:d,inputWasTransposed:h}=es(i,a,t);if(h){let b=t.dataIdMap.get(p.dataId).id;u=p,o=b}let c=u.shape.length;N.assertAxesAreInnerMostDims("all",l,c);let[f,m]=N.computeOutAndReduceShapes(u.shape,l),g=w.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(w.sizeFromShape(u.shape)!==0){let b=t.dataIdMap.get(y.dataId).id;K2(o,g,b)}if(h&&t.disposeData(p.dataId),s){let b=N.expandShapeToKeepDim(y.shape,d);y.shape=b}return y}var Mre={kernelName:el,backendName:"wasm",setupFunc:Rre,kernelFunc:Dre},X2;function Ore(e){X2=e.wasm.cwrap(tl,null,["number, number, number"])}function zre(e){let{backend:t,inputs:r,attrs:n}=e,{axis:a,keepDims:s}=n,{x:i}=r,o=t.dataIdMap.get(i.dataId).id,u=i,{transposed:p,axes:l,originalAxes:d,inputWasTransposed:h}=es(i,a,t);if(h){let b=t.dataIdMap.get(p.dataId).id;u=p,o=b}let c=u.shape.length;N.assertAxesAreInnerMostDims("any",l,c);let[f,m]=N.computeOutAndReduceShapes(u.shape,l),g=w.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(w.sizeFromShape(u.shape)!==0){let b=t.dataIdMap.get(y.dataId).id;X2(o,g,b)}if(h&&t.disposeData(p.dataId),s){let b=N.expandShapeToKeepDim(y.shape,d);y.shape=b}return y}var Lre={kernelName:tl,backendName:"wasm",setupFunc:Ore,kernelFunc:zre};function Z2(e){let t;function r(a){t=a.wasm.cwrap(e,null,["number","number","number","number","number"])}function n(a){let{backend:s,inputs:i,attrs:o}=a,{axis:u}=o,{x:p}=i,l=s.dataIdMap.get(p.dataId).id,d=l,h=p,{transposed:c,axes:f,inputWasTransposed:m}=es(p,u,s);if(m){let I=s.dataIdMap.get(c.dataId).id;I!==l&&(h=c,d=I)}let g=h.shape.slice(0,-1),y=s.makeOutput(g,"int32"),b=s.dataIdMap.get(y.dataId).id,x=w.sizeFromShape(y.shape),v=h.shape[f[0]];return t(d,Je[h.dtype],x,v,b),m&&s.disposeData(c.dataId),y}return{kernelName:e,backendName:"wasm",setupFunc:r,kernelFunc:n}}var Pre=Z2(rl),Bre=Z2(nl),Wre=Xe(Hs),Vre=Xe(js),Ure=Xe(qs),Gre=Kt(Xs),Hre=Xe(Ks),J2;function jre(e){J2=e.wasm.cwrap(Zs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function qre(e){let{inputs:t,attrs:r,backend:n}=e,a=t.x,s=n.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:u,dimRoundingMode:p}=r,l=N.computePool2DInfo(a.shape,i,o,1,u,p),d=l.filterHeight,h=l.filterWidth,c=l.padInfo.top,f=l.padInfo.right,m=l.padInfo.bottom,g=l.padInfo.left,y=l.strideHeight,b=l.strideWidth,x=l.inChannels;if(l.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${l.dataFormat}'. Please use 'channelsLast'.`);if(l.dilationWidth!==1||l.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${l.dilationHeight}, ${l.dilationWidth}].`);let v=n.makeOutput(l.outShape,"float32"),I=n.dataIdMap.get(v.dataId).id;return J2(s,a.shape[0],a.shape[1],a.shape[2],d,h,c,f,m,g,y,b,x,I),v}var Kre={kernelName:Zs,backendName:"wasm",setupFunc:jre,kernelFunc:qre},Y2;function Xre(e){Y2=e.wasm.cwrap("AvgPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Zre(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:p}=n,l=N.computePool3DInfo(a.shape,s,i,1,o,u,p),d=r.makeOutput(l.outShape,a.dtype);return Y2(r.dataIdMap.get(a.dataId).id,r.dataIdMap.get(d.dataId).id,l.batchSize,l.inChannels,l.inDepth,l.inHeight,l.inWidth,l.outDepth,l.outHeight,l.outWidth,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.effectiveFilterDepth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left),d}var Jre={kernelName:al,backendName:"wasm",setupFunc:Xre,kernelFunc:Zre},Q2;function Yre(e){Q2=e.wasm.cwrap("AvgPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Qre(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:p}=n,l=N.computePool3DInfo(s.shape,i,o,1,u,p),d=r.makeOutput(s.shape,s.dtype);return Q2(r.dataIdMap.get(a.dataId).id,r.dataIdMap.get(d.dataId).id,l.batchSize,l.inChannels,l.inDepth,l.inHeight,l.inWidth,l.outDepth,l.outHeight,l.outWidth,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.effectiveFilterDepth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left,l.filterDepth,l.filterHeight,l.filterWidth),d}var ene={kernelName:fp,backendName:"wasm",setupFunc:Yre,kernelFunc:Qre};function Tr(e){let{inputs:t,attrs:r}=e,{x:n}=t,{shape:a}=r,s=w.sizeFromShape(n.shape),i=w.inferFromImplicitShape(a,s);return w.assert(s===w.sizeFromShape(i),()=>`new shape: ${i}, old shape: ${n.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(n.dataId),{dataId:n.dataId,shape:i,dtype:n.dtype}}var tne={kernelName:Ll,backendName:"wasm",kernelFunc:Tr},eT;function rne(e){eT=e.wasm.cwrap(Js,null,["number","array","number","number","array","number","number","number","number"])}function nne(e){let{inputs:t,backend:r,attrs:n}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=n;if(a.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let u=a.shape.length,p=s.shape.length,l=i?a.shape[u-2]:a.shape[u-1],d=o?s.shape[p-1]:s.shape[p-2],h=i?a.shape[u-1]:a.shape[u-2],c=o?s.shape[p-2]:s.shape[p-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=w.sizeFromShape(f),y=w.sizeFromShape(m),b=nu.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([h,c]);w.assert(l===d,()=>`Error in matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,l,h]:[g,h,l],v=o?[y,c,d]:[y,d,c],I=Tr({inputs:{x:a},backend:r,attrs:{shape:x}}),T=Tr({inputs:{x:s},backend:r,attrs:{shape:v}}),_=r.dataIdMap.get(I.dataId).id,E=r.dataIdMap.get(T.dataId).id,A=i?I.shape[2]:I.shape[1],R=o?T.shape[1]:T.shape[2],F=Math.max(g,y),S=r.makeOutput([F,A,R],I.dtype),M=r.dataIdMap.get(S.dataId).id,B=new Uint8Array(new Int32Array(I.shape).buffer),U=new Uint8Array(new Int32Array(T.shape).buffer);return eT(_,B,I.shape.length,E,U,T.shape.length,i,o,M),r.disposeData(I.dataId),r.disposeData(T.dataId),S.shape=b,S}var ane={kernelName:Js,backendName:"wasm",setupFunc:rne,kernelFunc:nne};function Bs(e){let{inputs:{x:t},attrs:{begin:r,size:n},backend:a}=e,[s,i]=zt.parseSliceParams(t,r,n),o=zt.isSliceContinous(t.shape,s,i),u=a.readSync(t.dataId),p=a.makeOutput(i,t.dtype),l=w.computeStrides(t.shape),d=a.dataIdMap.get(p.dataId);if(o){let f=zt.computeFlatOffset(s,l);return t.dtype==="string"?d.stringBytes=u.slice(f,f+w.sizeFromShape(i)):a.typedArrayFromHeap(p).set(u.subarray(f,f+w.sizeFromShape(i))),p}if(t.dtype==="string"){let f=Ih(u,s,i,t.shape,t.dtype);return d.stringBytes=f,p}let h=a.typedArrayFromHeap(p),c=t.shape.length;if(c===2)sne(u,l[0],h,s,i);else if(c===3)ine(u,l[0],l[1],h,s,i);else if(c===4)one(u,l[0],l[1],l[2],h,s,i);else{let f=Ih(u,s,i,t.shape,t.dtype);h.set(f)}return p}function sne(e,t,r,n,a){let s=0,i=n[0],o=n[1],u=i+a[0];for(let p=i;p<u;p++){let l=p*t+o;r.set(e.subarray(l,l+a[1]),s),s+=a[1]}}function ine(e,t,r,n,a,s){let i=0,o=a[0],u=a[1],p=a[2],l=o+s[0],d=u+s[1];for(let h=o;h<l;h++)for(let c=u;c<d;c++){let f=h*t+c*r+p;n.set(e.subarray(f,f+s[2]),i),i+=s[2]}}function one(e,t,r,n,a,s,i){let o=0,u=s[0],p=s[1],l=s[2],d=u+i[0],h=p+i[1],c=l+i[2],f=s[3];for(let m=u;m<d;m++)for(let g=p;g<h;g++)for(let y=l;y<c;y++){let b=m*t+g*r+y*n+f;a.set(e.subarray(b,b+i[3]),o),o+=i[3]}}var lne={kernelName:Hl,backendName:"wasm",kernelFunc:Bs};function une(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockShape:s,crops:i}=n,o=s.reduce((y,b)=>y*b),u=N.getReshaped(a.shape,s,o),p=N.getPermuted(u.length,s.length),l=N.getReshapedPermuted(a.shape,s,o),d=N.getSliceBeginCoords(i,s.length),h=N.getSliceSize(l,i,s.length),c=Tr({inputs:{x:a},backend:r,attrs:{shape:u}}),f=Wa({inputs:{x:c},backend:r,attrs:{perm:p}}),m=Tr({inputs:{x:f},backend:r,attrs:{shape:l}}),g=Bs({inputs:{x:m},backend:r,attrs:{begin:d,size:h}});return r.disposeData(c.dataId),r.disposeData(f.dataId),r.disposeData(c.dataId),g}var pne={kernelName:sl,backendName:"wasm",kernelFunc:une},tT;function dne(e){tT=e.wasm.cwrap(il,null,["number","number","boolean","number","number","number"])}function hne(e){let{backend:t,inputs:r,attrs:n}=e,{x:a,weights:s}=r,{size:i}=n,o=s.shape.reduce((d,h)=>d*h,1)!==0,u=a.shape.length===1?[i]:[a.shape[0],i],p=t.makeOutput(u,s.dtype);function l(d){return t.dataIdMap.get(d.dataId).id}return tT(l(a),i,o,l(s),Je[s.dtype],l(p)),p}var cne={kernelName:il,backendName:"wasm",setupFunc:dne,kernelFunc:hne};function fne(e){let{inputs:t,backend:r}=e,{s0:n,s1:a}=t,s=r.typedArrayFromHeap(n),i=r.typedArrayFromHeap(a),o=N.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return r.makeOutput([o.length],"int32",void 0,new Int32Array(o))}var mne={kernelName:mp,backendName:"wasm",kernelFunc:fne};function ts(e){let{inputs:{x:t},attrs:{dtype:r},backend:n}=e,a=n.makeOutput(t.shape,r),s=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(a).set(s),a}var gne={kernelName:Ys,backendName:"wasm",kernelFunc:ts},yne=Xe(Qs),rT;function bne(e){rT=e.wasm.cwrap(Ha,null,["number","number","number","number"])}function xne(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=n,o=r.dataIdMap.get(a.dataId).id,u=r.makeOutput(a.shape,a.dtype),p=r.dataIdMap.get(u.dataId).id;return rT(o,s,i,p),u}var wne={kernelName:Ha,backendName:"wasm",setupFunc:bne,kernelFunc:xne};function nT(e){let{inputs:t,backend:r}=e,n=w.parseAxisParam(e.attrs.axis,t[0].shape)[0],a=t.map(c=>c.shape);N.assertParamsConsistent(a,n);let s=N.computeOutShape(t.map(c=>c.shape),n),i=t.filter(c=>w.sizeFromShape(c.shape)>0);if(i.length===1)return uf({inputs:{x:i[0]},backend:r});let o=r.makeOutput(s,t[0].dtype);if(w.sizeFromShape(s)===0)return o;if(i[0].dtype==="string"){let c=i.map(x=>{let v=[-1,w.sizeFromShape(x.shape.slice(n))];return Tr({inputs:{x},backend:r,attrs:{shape:v}})}),f=c.map(x=>({vals:r.readSync(x.dataId),shape:x.shape}));s=N.computeOutShape(c.map(x=>x.shape),1);let m=c[0].shape[0]===1,g=rx(f,s,t[0].dtype,m),y=N.computeOutShape(i.map(x=>x.shape),n);o.shape=y;let b=r.dataIdMap.get(o.dataId);return b.stringBytes=N.fromStringArrayToUint8(g),c.forEach(x=>r.disposeData(x.dataId)),o}let u=w.sizeFromShape(i[0].shape.slice(0,n)),p=0,l=i.map(c=>{let f=w.sizeFromShape(c.shape.slice(n));return p+=f,f}),d=i.map(c=>r.typedArrayFromHeap(c)),h=r.typedArrayFromHeap(o);for(let c=0;c<u;c++){let f=c*p;for(let m=0;m<d.length;m++){let g=l[m],y=c*g,b=d[m].subarray(y,y+g);h.set(b,f),f+=g}}return o}var vne={kernelName:ol,backendName:"wasm",kernelFunc:nT},aT;function kne(e){aT=e.wasm.cwrap(ei,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ine(e){let{inputs:t,attrs:r,backend:n}=e,{x:a,filter:s}=t,i=n.dataIdMap.get(a.dataId).id,o=n.dataIdMap.get(s.dataId).id,{strides:u,dilations:p,pad:l,dimRoundingMode:d,dataFormat:h}=r,c=N.convertConv2DDataFormat(h),f=N.computeConv2DInfo(a.shape,s.shape,u,p,l,d,!1,c),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,b=f.padInfo.right,x=f.padInfo.bottom,v=f.padInfo.left,I=f.dilationHeight,T=f.dilationWidth,_=f.strideHeight,E=f.strideWidth,A=f.inChannels,R=f.outChannels,F=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let S=n.makeOutput(f.outShape,"float32"),M=n.dataIdMap.get(S.dataId).id;return aT(i,a.shape[0],a.shape[1],a.shape[2],o,m,g,y,b,x,v,F,I,T,_,E,A,R,M),S}var Sne={kernelName:ei,backendName:"wasm",setupFunc:kne,kernelFunc:Ine},sT;function Nne(e){sT=e.wasm.cwrap(ti,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Tne(e){let{backend:t,inputs:r,attrs:n}=e,{dy:a,filter:s}=r,{strides:i,pad:o,dataFormat:u,dimRoundingMode:p,inputShape:l}=n,d=1,h=N.convertConv2DDataFormat(u),c=N.computeConv2DInfo(l,s.shape,i,d,o,p,!1,h),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:y,inHeight:b,inWidth:x,outChannels:v,outHeight:I,outWidth:T,strideHeight:_,strideWidth:E}=c,A=m-1-c.padInfo.top,R=g-1-c.padInfo.left,F=c.dataFormat==="channelsLast",S=w.computeStrides(c.inShape),M=w.computeStrides(a.shape),[B,U,G]=w.computeStrides(s.shape),K=S[0],j=F?S[1]:S[2],X=F?S[2]:1,ee=F?1:S[1],Z=M[0],ne=F?M[1]:M[2],te=F?M[2]:1,ae=F?1:M[1],ie=t.makeOutput(c.inShape,"float32"),we=t.dataIdMap.get(ie.dataId).id,be=t.dataIdMap.get(a.dataId).id,de=t.dataIdMap.get(s.dataId).id;return sT(be,de,f,m,g,b,x,y,I,T,v,_,E,A,R,B,U,G,K,j,X,ee,Z,ne,te,ae,we),ie}var Cne={kernelName:ti,backendName:"wasm",setupFunc:Nne,kernelFunc:Tne},iT;function _ne(e){iT=e.wasm.cwrap(ri,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ene(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=n;if(a.dtype!=="float32")throw new Error(`Tensor x must have dtype float32, got ${a.dtype}`);if(s.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let p=N.computeConv3DInfo(a.shape,s.shape,i,u,o),l=r.makeOutput(p.outShape,a.dtype);return iT(r.dataIdMap.get(a.dataId).id,r.dataIdMap.get(s.dataId).id,r.dataIdMap.get(l.dataId).id,p.batchSize,p.inDepth,p.inHeight,p.inWidth,p.inChannels,p.outDepth,p.outHeight,p.outWidth,p.outChannels,p.strideDepth,p.strideHeight,p.strideWidth,p.dilationDepth,p.dilationHeight,p.dilationWidth,p.filterDepth,p.filterHeight,p.filterWidth,p.padInfo.front,p.padInfo.top,p.padInfo.left),l}var $ne={kernelName:ri,backendName:"wasm",setupFunc:_ne,kernelFunc:Ene},oT;function Ane(e){oT=e.wasm.cwrap(ll,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Fne(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=n;if(a.dtype!=="float32")throw new Error(`Tensor dy must have dtype float32, got ${a.dtype}`);if(s.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let p=N.computeConv3DInfo(a.shape,u,i,1,o),l=r.makeOutput(p.filterShape,s.dtype);return oT(r.dataIdMap.get(a.dataId).id,r.dataIdMap.get(s.dataId).id,r.dataIdMap.get(l.dataId).id,p.batchSize,p.inDepth,p.inHeight,p.inWidth,p.inChannels,p.outDepth,p.outHeight,p.outWidth,p.outChannels,p.strideDepth,p.strideHeight,p.strideWidth,p.dilationDepth,p.dilationHeight,p.dilationWidth,p.filterDepth,p.filterHeight,p.filterWidth,p.padInfo.front,p.padInfo.top,p.padInfo.left),l}var Rne={kernelName:ll,backendName:"wasm",setupFunc:Ane,kernelFunc:Fne},lT;function Dne(e){lT=e.wasm.cwrap(ul,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Mne(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=n;if(a.dtype!=="float32")throw new Error(`Tensor dy must have dtype float32, got ${a.dtype}`);if(s.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let p=N.computeConv3DInfo(u,s.shape,o,1,i),l=r.makeOutput(p.inShape,a.dtype);return lT(r.dataIdMap.get(s.dataId).id,r.dataIdMap.get(a.dataId).id,r.dataIdMap.get(l.dataId).id,p.batchSize,p.inDepth,p.inHeight,p.inWidth,p.inChannels,p.outDepth,p.outHeight,p.outWidth,p.outChannels,p.strideDepth,p.strideHeight,p.strideWidth,p.dilationDepth,p.dilationHeight,p.dilationWidth,p.filterDepth,p.filterHeight,p.filterWidth,p.padInfo.front,p.padInfo.top,p.padInfo.left),l}var One={kernelName:ul,backendName:"wasm",setupFunc:Dne,kernelFunc:Mne},zne=Xe(ni),Lne=Xe(ai),Fm;(function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"})(Fm||(Fm={}));var uT;function Pne(e){uT=e.wasm.cwrap(dl,null,["number","number","number","number","array","number","number","number","number","number"])}function Bne(e){let{backend:t,inputs:r,attrs:n}=e,{method:a,extrapolationValue:s,cropSize:i}=n,{image:o,boxes:u,boxInd:p}=r,l=u.shape[0],[d,h]=i,c=[l,d,h,o.shape[3]],f=t.dataIdMap.get(o.dataId),m;o.dtype!=="float32"&&(m=ts({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(m.dataId));let g=f.id,y=t.dataIdMap.get(u.dataId).id,b=t.dataIdMap.get(p.dataId).id,x=t.makeOutput(c,"float32"),v=t.dataIdMap.get(x.dataId).id,I=new Uint8Array(new Int32Array(o.shape).buffer);return uT(g,y,b,l,I,d,h,Fm[a],s,v),m!=null&&t.disposeData(m.dataId),x}var Wne={kernelName:dl,backendName:"wasm",setupFunc:Pne,kernelFunc:Bne},pT;function Vne(e){pT=e.wasm.cwrap(pl,null,["number","number","number","number","number","number"])}function Une(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=n,u=a.shape.length;w.assert(a.dtype==="float32"||a.dtype==="int32",()=>`cumprod does not support ${a.dtype} tensors in the WASM backend`);let p=N.getAxesPermutation([s],u),l=a;p!==null&&(l=Wa({inputs:{x:a},attrs:{perm:p},backend:r}));let d=N.getInnerMostAxes(1,u)[0];N.assertAxesAreInnerMostDims("cumprod",[d],u);let h=r.makeOutput(l.shape,l.dtype),c=l.shape[d],f=r.dataIdMap.get(l.dataId).id,m=r.dataIdMap.get(h.dataId).id;pT(f,i?1:0,o?1:0,c,m,Je[a.dtype]);let g=h;if(p!==null){let y=N.getUndoAxesPermutation(p);g=Wa({inputs:{x:h},attrs:{perm:y},backend:r}),r.disposeData(l.dataId),r.disposeData(h.dataId)}return g}var Gne={kernelName:pl,backendName:"wasm",setupFunc:Vne,kernelFunc:Une},dT;function Hne(e){dT=e.wasm.cwrap(si,null,["number","number","number","number","number","number"])}function jne(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=n,u=a.shape.length;w.assert(a.dtype==="float32"||a.dtype==="int32",()=>`cumsum does not support ${a.dtype} tensors in the WASM backend`);let p=N.getAxesPermutation([s],u),l=a;p!==null&&(l=Wa({inputs:{x:a},attrs:{perm:p},backend:r}));let d=N.getInnerMostAxes(1,u)[0];N.assertAxesAreInnerMostDims("cumsum",[d],u);let h=r.makeOutput(l.shape,l.dtype),c=l.shape[d],f=r.dataIdMap.get(l.dataId).id,m=r.dataIdMap.get(h.dataId).id;dT(f,i?1:0,o?1:0,c,m,Je[a.dtype]);let g=h;if(p!==null){let y=N.getUndoAxesPermutation(p);g=Wa({inputs:{x:h},attrs:{perm:y},backend:r}),r.disposeData(l.dataId),r.disposeData(h.dataId)}return g}var qne={kernelName:si,backendName:"wasm",setupFunc:Hne,kernelFunc:jne},hT;function Kne(e){hT=e.wasm.cwrap("DenseBincount",null,["number","array","number","number","boolean","number","number","boolean","number"])}function Xne(e){let{backend:t,inputs:r,attrs:n}=e,{x:a,weights:s}=r,{size:i,binaryOutput:o}=n,u=s.shape.reduce((h,c)=>h*c,1)!==0,p=a.shape.length===1?[i]:[a.shape[0],i],l=t.makeOutput(p,s.dtype);function d(h){return t.dataIdMap.get(h.dataId).id}return hT(d(a),new Uint8Array(new Int32Array(a.shape).buffer),a.shape.length,i,u,d(s),Je[s.dtype],o,d(l)),l}var Zne={kernelName:yp,backendName:"wasm",setupFunc:Kne,kernelFunc:Xne},cT;function Jne(e){cT=e.wasm.cwrap(hl,null,["number","number","number","array","number","array","array","number","number"])}function Yne(e){let{backend:t,inputs:r,attrs:n}=e,{x:a}=r,{blockSize:s,dataFormat:i}=n,o=a.shape[0],u=i==="NHWC"?a.shape[1]:a.shape[2],p=i==="NHWC"?a.shape[2]:a.shape[3],l=i==="NHWC"?a.shape[3]:a.shape[1],d=u*s,h=p*s,c=l/(s*s),f=i==="NHWC"?[o,d,h,c]:[o,c,d,h],m=t.makeOutput(f,"float32"),g=t.dataIdMap.get(a.dataId).id,y=new Uint8Array(new Int32Array(w.computeStrides(a.shape)).buffer),b=new Uint8Array(new Int32Array(f).buffer),x=new Uint8Array(new Int32Array(w.computeStrides(f)).buffer),v=t.dataIdMap.get(m.dataId).id;return cT(g,s,i==="NHWC"?1:0,y,a.shape.length-1,b,x,f.length,v),m}var Qne={kernelName:hl,backendName:"wasm",setupFunc:Jne,kernelFunc:Yne},fT;function eae(e){fT=e.wasm.cwrap(ii,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function tae(e){let{inputs:t,attrs:r,backend:n}=e,{x:a,filter:s}=t,i=n.dataIdMap.get(a.dataId).id,o=n.dataIdMap.get(s.dataId).id,{strides:u,dilations:p,pad:l,dimRoundingMode:d}=r,h=p==null?[1,1]:p,c=N.computeConv2DInfo(a.shape,s.shape,u,h,l,d,!0),f=c.filterHeight,m=c.filterWidth,g=c.padInfo.top,y=c.padInfo.right,b=c.padInfo.bottom,x=c.padInfo.left,v=c.dilationHeight,I=c.dilationWidth,T=c.strideHeight,_=c.strideWidth,E=c.inChannels,A=c.outChannels,R=c.padInfo.type==="SAME"?1:0;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let F=n.makeOutput(c.outShape,"float32"),S=n.dataIdMap.get(F.dataId).id;return fT(i,a.shape[0],a.shape[1],a.shape[2],o,f,m,g,y,b,x,R,v,I,T,_,E,A,S),F}var rae={kernelName:ii,backendName:"wasm",setupFunc:eae,kernelFunc:tae},mT;function nae(e){mT=e.wasm.cwrap("Diag",null,["number","number","number","number"])}function aae(e){let{inputs:t,backend:r}=e,{x:n}=t,a=w.sizeFromShape(n.shape),s=r.makeOutput([...n.shape,...n.shape],n.dtype);return mT(r.dataIdMap.get(n.dataId).id,Je[n.dtype],a,r.dataIdMap.get(s.dataId).id),s}var sae={kernelName:bp,backendName:"wasm",setupFunc:nae,kernelFunc:aae},gT;function iae(e){gT=e.wasm.cwrap(oi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function oae(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=n;if(a.dtype!==s.dtype)throw new Error(`Dilation2D error: x must have the same dtype as filter. Got ${a.dtype} and ${s.dtype}`);let p=N.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",u),l=r.makeOutput(p.outShape,a.dtype);return gT(r.dataIdMap.get(a.dataId).id,r.dataIdMap.get(s.dataId).id,r.dataIdMap.get(l.dataId).id,Je[a.dtype],p.batchSize,p.inChannels,p.inHeight,p.inWidth,p.outHeight,p.outWidth,p.strideHeight,p.strideWidth,p.dilationHeight,p.dilationWidth,p.filterHeight,p.filterWidth,p.padInfo.top,p.padInfo.left),l}var lae={kernelName:oi,backendName:"wasm",setupFunc:iae,kernelFunc:oae},yT;function uae(e){yT=e.wasm.cwrap(Ao,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function pae(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s,dy:i}=t,{strides:o,pad:u,dilations:p}=n;if(a.dtype!==s.dtype||a.dtype!==i.dtype)throw new Error(`Dilation2DBackpropFilter error: x must have the same dtype as filter and dy. Got ${a.dtype}, ${s.dtype}, and ${i.dtype}`);let l=N.computeDilation2DInfo(a.shape,s.shape,o,u,"NHWC",p),d=r.makeOutput(s.shape,s.dtype);return yT(r.dataIdMap.get(a.dataId).id,r.dataIdMap.get(s.dataId).id,r.dataIdMap.get(i.dataId).id,r.dataIdMap.get(d.dataId).id,Je[a.dtype],l.batchSize,l.inChannels,l.inHeight,l.inWidth,l.outHeight,l.outWidth,l.strideHeight,l.strideWidth,l.dilationHeight,l.dilationWidth,l.filterHeight,l.filterWidth,l.padInfo.top,l.padInfo.left),d}var dae={kernelName:Ao,backendName:"wasm",setupFunc:uae,kernelFunc:pae},bT;function hae(e){bT=e.wasm.cwrap($o,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function cae(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s,dy:i}=t,{strides:o,pad:u,dilations:p}=n;if(a.dtype!==s.dtype||a.dtype!==i.dtype)throw new Error(`Dilation2DBackpropInput error: x must have the same dtype as filter and dy. Got ${a.dtype}, ${s.dtype}, and ${i.dtype}`);let l=N.computeDilation2DInfo(a.shape,s.shape,o,u,"NHWC",p),d=r.makeOutput(a.shape,a.dtype);return bT(r.dataIdMap.get(a.dataId).id,r.dataIdMap.get(s.dataId).id,r.dataIdMap.get(i.dataId).id,r.dataIdMap.get(d.dataId).id,Je[a.dtype],l.batchSize,l.inChannels,l.inHeight,l.inWidth,l.outHeight,l.outWidth,l.strideHeight,l.strideWidth,l.dilationHeight,l.dilationWidth,l.filterHeight,l.filterWidth,l.padInfo.top,l.padInfo.left),d}var fae={kernelName:$o,backendName:"wasm",setupFunc:hae,kernelFunc:cae},mae=Xe(ui),xT;function gae(e){xT=e.wasm.cwrap(cl,null,["number","number","number"])}function yae(e){let{inputs:t,backend:r}=e,{dy:n,y:a}=t,s=r.makeOutput(a.shape,"float32"),i=o=>r.dataIdMap.get(o.dataId).id;return xT(i(a),i(n),i(s)),s}var bae={kernelName:cl,backendName:"wasm",setupFunc:gae,kernelFunc:yae},xae=!1,wae=Kt(ml,xae,"bool"),vae=Xe(pi,"float32");function Rm(e){let{inputs:t,attrs:r,backend:n}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice(),u=s;return s<0&&(w.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+s+1),o.splice(u,0,1),Tr({inputs:{x:a},backend:n,attrs:{shape:o}})}var kae={kernelName:gl,backendName:"wasm",kernelFunc:Rm},Iae=Xe(di,"float32");function wT(e){let{attrs:{shape:t,value:r,dtype:n},backend:a}=e,s=a.makeOutput(t,n);return a.typedArrayFromHeap(s).fill(r),s}var Sae={kernelName:xp,backendName:"wasm",kernelFunc:wT},vT;function Nae(e){vT=e.wasm.cwrap(yl,null,["number","number","number","number","number","number"])}function Tae(e){let{inputs:t,backend:r}=e,{image:n}=t,a=r.makeOutput(n.shape,n.dtype),s=r.dataIdMap.get(n.dataId).id,i=r.dataIdMap.get(a.dataId).id,[o,u,p,l]=n.shape;return vT(s,o,u,p,l,i),a}var Cae={kernelName:yl,backendName:"wasm",kernelFunc:Tae,setupFunc:Nae},_ae=Xe(hi),Eae=Kt(ci),kT;function $ae(e){kT=e.wasm.cwrap(fi,null,["number","number","number","number","number","number","number"])}function Aae(e){let{backend:t,inputs:r,attrs:n}=e,{varianceEpsilon:a}=n,{x:s,mean:i,variance:o,offset:u,scale:p}=r,l=t.dataIdMap.get(s.dataId).id,d=t.dataIdMap.get(i.dataId).id,h=t.dataIdMap.get(o.dataId).id,c=u!=null?t.dataIdMap.get(u.dataId).id:0,f=p!=null?t.dataIdMap.get(p.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(w.sizeFromShape(s.shape)===0)return m;let g=t.dataIdMap.get(m.dataId).id;return kT(l,d,h,c,f,a,g),m}var Fae={kernelName:fi,backendName:"wasm",setupFunc:$ae,kernelFunc:Aae},IT;function Rae(e){IT=e.wasm.cwrap(Ss,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Dae(e){let{inputs:t,attrs:r,backend:n}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:p,dilations:l,dataFormat:d,dimRoundingMode:h,activation:c,leakyreluAlpha:f}=r,m=N.computeConv2DInfo(a.shape,s.shape,u,l,p,h),g=pp[c];if(g==null)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let y=n.dataIdMap.get(a.dataId).id,b=n.dataIdMap.get(s.dataId).id,x=m.outChannels,v=0;if(i!=null){let te=n.dataIdMap.get(i.dataId);if(te.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${te.shape.length}.`);if(te.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${te.shape}) does not match the number of output channels (${x})`);v=te.id}let I=m.filterHeight,T=m.filterWidth,_=m.padInfo.top,E=m.padInfo.right,A=m.padInfo.bottom,R=m.padInfo.left,F=m.dilationHeight,S=m.dilationWidth,M=m.strideHeight,B=m.strideWidth,U=m.inChannels,G=m.padInfo.type==="SAME"?1:0,K=m.batchSize,j=m.inHeight,X=m.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);let ee=n.makeOutput(m.outShape,"float32"),Z=n.dataIdMap.get(ee.dataId).id,ne=o==null?0:n.dataIdMap.get(o.dataId).id;return IT(y,K,j,X,b,I,T,v,_,E,A,R,G,F,S,M,B,U,x,g,ne,f||0,Z),ee}var Mae={kernelName:Ss,backendName:"wasm",setupFunc:Rae,kernelFunc:Dae},ST;function Oae(e){ST=e.wasm.cwrap(Ns,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function zae(e){let{inputs:t,attrs:r,backend:n}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:p,dilations:l,dataFormat:d,dimRoundingMode:h,activation:c,leakyreluAlpha:f}=r,m=N.computeConv2DInfo(a.shape,s.shape,u,l,p,h,!0),g=pp[c];if(g==null)throw new Error(`${c} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=n.dataIdMap.get(a.dataId).id,b=n.dataIdMap.get(s.dataId).id,x=m.outChannels,v=0;if(i!=null){let te=n.dataIdMap.get(i.dataId);if(te.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${te.shape.length}.`);if(te.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${te.shape}) does not match the number of output channels (${x})`);v=te.id}let I=m.filterHeight,T=m.filterWidth,_=m.padInfo.top,E=m.padInfo.right,A=m.padInfo.bottom,R=m.padInfo.left,F=m.dilationHeight,S=m.dilationWidth,M=m.strideHeight,B=m.strideWidth,U=m.inChannels,G=m.padInfo.type==="SAME"?1:0,K=m.batchSize,j=m.inHeight,X=m.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);let ee=n.makeOutput(m.outShape,"float32"),Z=n.dataIdMap.get(ee.dataId).id,ne=o==null?0:n.dataIdMap.get(o.dataId).id;return ST(y,K,j,X,b,I,T,v,_,E,A,R,G,F,S,M,B,U,x,g,ne,f||0,Z),ee}var Lae={kernelName:Ns,backendName:"wasm",setupFunc:Oae,kernelFunc:zae},NT;function Pae(e){NT=e.wasm.cwrap(xl,null,["number","number","number","number","number","number","array","number"])}function Bae(e){let{backend:t,inputs:r}=e,{params:n,indices:a}=r,[s,i,o,u]=gy.prepareAndValidate(n,a),p=t.makeOutput(s,n.dtype);if(i===0)return p;let l=a.shape,d=l[l.length-1],h=t.dataIdMap.get(n.dataId).id,c=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(u).buffer),m=t.dataIdMap.get(p.dataId).id;return NT(h,Je[n.dtype],c,i,d,o,f,m),p}var Wae={kernelName:xl,backendName:"wasm",setupFunc:Pae,kernelFunc:Bae},TT;function Vae(e){TT=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function Uae(e){let{backend:t,inputs:r,attrs:n}=e,{x:a,indices:s}=r,{axis:i,batchDims:o}=n,u=w.parseAxisParam(i,a.shape)[0],p=t.readSync(s.dataId),l=a.shape[u];for(let _=0;_<p.length;++_){let E=p[_];w.assert(E<=l-1&&E>=0,()=>`GatherV2: the index value ${E} is not in [0, ${l-1}]`)}let d=N.segment_util.collectGatherOpShapeInfo(a,s,u,o),h=Tr({inputs:{x:a},attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]},backend:t}),c=w.sizeFromShape(s.shape),f=Tr({inputs:{x:s},attrs:{shape:[d.batchSize,c/d.batchSize]},backend:t}),m=[d.batchSize,d.outerSize,c/d.batchSize,d.sliceSize],g=t.makeOutput(m,a.dtype);if(w.sizeFromShape(a.shape)===0)return g;let y=h.shape.length-1,b=t.dataIdMap.get(h.dataId).id,x=t.dataIdMap.get(f.dataId).id,v=t.dataIdMap.get(g.dataId).id,I=new Uint8Array(new Int32Array(w.computeStrides(h.shape)).buffer),T=new Uint8Array(new Int32Array(w.computeStrides(m)).buffer);return TT(b,Je[a.dtype],I,y,x,d.batchSize,T,v),t.disposeData(h.dataId),t.disposeData(f.dataId),g.shape=d.outputShape,g}var Gae={kernelName:bl,backendName:"wasm",setupFunc:Vae,kernelFunc:Uae},Hae=!1,jae=Kt(wl,Hae,"bool"),qae=!1,Kae=Kt(mi,qae,"bool"),Xae=Xe(yi,"bool"),Zae=Xe(bi,"bool"),Jae=Xe(xi,"bool"),CT;function Yae(e){CT=e.wasm.cwrap(wi,null,["number","number","number","number"])}function Qae(e){let{inputs:{x:t},attrs:{alpha:r},backend:n}=e,a=n.dataIdMap.get(t.dataId).id,s=n.makeOutput(t.shape,"float32");if(w.sizeFromShape(t.shape)!==0){let i=n.dataIdMap.get(s.dataId).id;CT(a,Je[t.dtype],r,i)}return s}var ese={kernelName:wi,backendName:"wasm",setupFunc:Yae,kernelFunc:Qae},tse=!1,rse=Kt(vl,tse,"bool"),nse=!1,ase=Kt(kl,nse,"bool"),_T;function sse(e){_T=e.wasm.cwrap(Il,null,["number","number","number","number"])}function ise(e){let{attrs:t,backend:r}=e,{start:n,stop:a,num:s}=t,i=Math.floor(s),o=r.makeOutput([i],"float32");return _T(r.dataIdMap.get(o.dataId).id,n,a,i),o}var ose={kernelName:Il,backendName:"wasm",setupFunc:sse,kernelFunc:ise},lse=Xe(vi),use=Xe(ki),pse=!1,dse=Kt(Sl,pse,"bool"),hse=Xe(Nl),cse=!1,fse=Kt(Tl,cse,"bool"),mse=!1,gse=Kt(n0,mse,"bool"),ET;function yse(e){ET=e.wasm.cwrap(Ii,null,["number","number","number","number","number","number","number"])}function bse(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=n;if(a.dtype!=="float32")throw new Error("LRN error: x must have dtype float32");let p=r.makeOutput(a.shape,a.dtype);return ET(r.dataIdMap.get(a.dataId).id,r.dataIdMap.get(p.dataId).id,a.shape[3],s,i,o,u),p}var xse={kernelName:Ii,backendName:"wasm",setupFunc:yse,kernelFunc:bse},$T;function wse(e){$T=e.wasm.cwrap(Cl,null,["number","number","number","number","number","number","number","number","number"])}function vse(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:p,beta:l}=n;if(a.dtype!=="float32"||s.dtype!=="float32"||i.dtype!=="float32")throw new Error("LRNGrad error: x, y, and dy must have dtype float32");let d=r.makeOutput(a.shape,a.dtype);return $T(r.dataIdMap.get(a.dataId).id,r.dataIdMap.get(s.dataId).id,r.dataIdMap.get(i.dataId).id,r.dataIdMap.get(d.dataId).id,i.shape[3],o,u,p,l),d}var kse={kernelName:Cl,backendName:"wasm",setupFunc:wse,kernelFunc:vse},AT;function Ise(e){AT=e.wasm.cwrap(Si,null,["number","number","number","number"])}function Sse(e){let{backend:t,inputs:r,attrs:n}=e,{reductionIndices:a,keepDims:s}=n,{x:i}=r,o=t.dataIdMap.get(i.dataId).id,u=i,{transposed:p,axes:l,originalAxes:d,inputWasTransposed:h}=es(i,a,t);if(h){let b=t.dataIdMap.get(p.dataId).id;u=p,o=b}let c=u.shape.length;N.assertAxesAreInnerMostDims("max",l,c);let[f,m]=N.computeOutAndReduceShapes(u.shape,l),g=w.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(w.sizeFromShape(u.shape)!==0){let b=t.dataIdMap.get(y.dataId).id;AT(o,Je[i.dtype],g,b)}if(h&&t.disposeData(p.dataId),s){let b=N.expandShapeToKeepDim(y.shape,d);y.shape=b}return y}var Nse={kernelName:Si,backendName:"wasm",setupFunc:Ise,kernelFunc:Sse},Tse=Kt(Ni),FT;function Cse(e){FT=e.wasm.cwrap(Ti,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function _se(e){let{inputs:t,attrs:r,backend:n}=e,a=t.x,s=n.dataIdMap.get(a.dataId).id;w.assert(a.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${a.dtype}.`);let{filterSize:i,strides:o,pad:u,dimRoundingMode:p}=r,l=N.computePool2DInfo(a.shape,i,o,1,u,p),d=l.filterHeight,h=l.filterWidth,c=l.padInfo.top,f=l.padInfo.right,m=l.padInfo.bottom,g=l.padInfo.left,y=l.dilationHeight,b=l.dilationWidth,x=l.strideHeight,v=l.strideWidth,I=l.inChannels,T=l.outChannels;if(l.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${l.dataFormat}'. Please use 'channelsLast'.`);let _=n.makeOutput(l.outShape,"float32"),E=n.dataIdMap.get(_.dataId).id;return FT(s,a.shape[0],a.shape[1],a.shape[2],d,h,c,f,m,g,y,b,x,v,I,T,E),_}var Ese={kernelName:Ti,backendName:"wasm",setupFunc:Cse,kernelFunc:_se},RT;function $se(e){RT=e.wasm.cwrap("MaxPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ase(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:p}=n,l=N.computePool3DInfo(a.shape,s,i,1,o,u,p),d=r.makeOutput(l.outShape,a.dtype);return RT(r.dataIdMap.get(a.dataId).id,r.dataIdMap.get(d.dataId).id,l.batchSize,l.inChannels,l.inDepth,l.inHeight,l.inWidth,l.outDepth,l.outHeight,l.outWidth,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.effectiveFilterDepth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left),d}var Fse={kernelName:_l,backendName:"wasm",setupFunc:$se,kernelFunc:Ase},DT;function Rse(e){DT=e.wasm.cwrap("MaxPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Dse(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:p}=n,l=N.computePool3DInfo(s.shape,i,o,1,u,p),d=r.makeOutput(s.shape,s.dtype);return DT(r.dataIdMap.get(s.dataId).id,r.dataIdMap.get(a.dataId).id,r.dataIdMap.get(d.dataId).id,l.batchSize,l.inChannels,l.inDepth,l.inHeight,l.inWidth,l.outDepth,l.outHeight,l.outWidth,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.effectiveFilterDepth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left),d}var Mse={kernelName:wp,backendName:"wasm",setupFunc:Rse,kernelFunc:Dse},MT;function Ose(e){MT=e.wasm.cwrap(Ci,null,["number, number, number"])}function zse(e){let{backend:t,inputs:r,attrs:n}=e,{axis:a,keepDims:s}=n,{x:i}=r,o=t.dataIdMap.get(i.dataId).id,u=o,p=i,{transposed:l,axes:d,originalAxes:h,inputWasTransposed:c}=es(i,a,t),f=d;if(c){let v=t.dataIdMap.get(l.dataId).id;v!==o&&(p=l,u=v,f=N.getInnerMostAxes(f.length,p.shape.length))}N.assertAxesAreInnerMostDims("mean",f,p.shape.length);let[m,g]=N.computeOutAndReduceShapes(p.shape,f),y=w.sizeFromShape(g),b=p;p.dtype!=="float32"&&(b=ts({backend:t,inputs:{x:p},attrs:{dtype:"float32"}}),u=t.dataIdMap.get(b.dataId).id);let x=t.makeOutput(m,"float32");if(w.sizeFromShape(p.shape)!==0){let v=t.dataIdMap.get(x.dataId).id;MT(u,y,v)}if(c&&t.disposeData(l.dataId),s){let v=N.expandShapeToKeepDim(x.shape,h);x.shape=v}return p.dtype!=="float32"&&t.disposeData(b.dataId),x}var Lse={kernelName:Ci,backendName:"wasm",setupFunc:Ose,kernelFunc:zse},OT;function Pse(e){OT=e.wasm.cwrap(_i,null,["number","number","number","number"])}function Bse(e){let{backend:t,inputs:r,attrs:n}=e,{axis:a,keepDims:s}=n,{x:i}=r,o=t.dataIdMap.get(i.dataId).id,u=o,p=i,{transposed:l,axes:d,originalAxes:h,inputWasTransposed:c}=es(i,a,t);if(c){let x=t.dataIdMap.get(l.dataId).id;x!==o&&(p=l,u=x)}let f=p.shape.length;N.assertAxesAreInnerMostDims("min",d,f);let[m,g]=N.computeOutAndReduceShapes(p.shape,d),y=w.sizeFromShape(g),b=t.makeOutput(m,p.dtype);if(w.sizeFromShape(p.shape)!==0){let x=t.dataIdMap.get(b.dataId).id;OT(u,Je[i.dtype],y,x)}if(c&&t.disposeData(l.dataId),s){let x=N.expandShapeToKeepDim(b.shape,h);b.shape=x}return b}var Wse={kernelName:_i,backendName:"wasm",setupFunc:Pse,kernelFunc:Bse},Vse=Kt(Ei),Dm;(function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"})(Dm||(Dm={}));var zT;function Use(e){zT=e.wasm.cwrap($i,null,["number","array","number","number","array","array","number","number"])}function Gse(e){let{inputs:{x:t},backend:r,attrs:{paddings:n,mode:a}}=e,s=n.map((f,m)=>f[0]+t.shape[m]+f[1]),i=r.dataIdMap.get(t.dataId).id,o=r.makeOutput(s,t.dtype),u=r.dataIdMap.get(o.dataId).id,p=new Uint8Array(new Int32Array(t.shape).buffer),l=n.map(f=>f[0]),d=n.map(f=>f[1]),h=new Uint8Array(new Int32Array(l).buffer),c=new Uint8Array(new Int32Array(d).buffer);return zT(i,p,t.shape.length,Je[t.dtype],h,c,Dm[a],u),o}var Hse={kernelName:$i,backendName:"wasm",kernelFunc:Gse,setupFunc:Use},LT;function jse(e){LT=e.wasm.cwrap(Yi,null,["number","number","number","number"])}function PT(e){let{backend:t,inputs:{logits:r},attrs:{dim:n}}=e,a=t.dataIdMap.get(r.dataId).id,s=t.makeOutput(r.shape,r.dtype),i=t.dataIdMap.get(s.dataId).id,o=r.shape[n],u=w.sizeFromShape(r.shape)/o;return w.sizeFromShape(s.shape)===0||LT(a,i,o,u),s}var qse={kernelName:Yi,backendName:"wasm",setupFunc:jse,kernelFunc:PT},BT;function Kse(e){BT=e.wasm.cwrap($l,null,["number","number","number","number","number","number"])}function Xse(e){let{inputs:t,backend:r,attrs:n}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=n;if(a.dtype!=="float32")throw new Error(`Tensor logits must have dtype float32, got ${a.dtype}`);let u=o?a:PT({inputs:{logits:a},backend:r,attrs:{dim:a.shape.length-1}}),[p,l]=u.shape,d=r.makeOutput([p,s],"int32");return BT(r.dataIdMap.get(u.dataId).id,p,l,s,i,r.dataIdMap.get(d.dataId).id),o||r.disposeData(u.dataId),d}var Zse={kernelName:$l,backendName:"wasm",setupFunc:Kse,kernelFunc:Xse},Jse=Kt(Ai),Yse=Xe(Al);function $x(e,t){let r=new Int32Array(e.wasm.HEAPU8.buffer,t,4),n=r[0],a=r[1],s=r[2],i=r[3];return e.wasm._free(t),{pSelectedIndices:n,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}var WT;function Qse(e){WT=e.wasm.cwrap(Rl,"number",["number","number","number","number","number"])}function eie(e){let{backend:t,inputs:r,attrs:n}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=n,{boxes:o,scores:u}=r,p=t.dataIdMap.get(o.dataId).id,l=t.dataIdMap.get(u.dataId).id,d=WT(p,l,s,a,i),{pSelectedIndices:h,selectedSize:c,pSelectedScores:f,pValidOutputs:m}=$x(t,d);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([c],"int32",h)}var tie={kernelName:Rl,backendName:"wasm",setupFunc:Qse,kernelFunc:eie},VT;function rie(e){VT=e.wasm.cwrap(Dl,"number",["number","number","number","number","number","bool"])}function nie(e){let{backend:t,inputs:r,attrs:n}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=n,{boxes:u,scores:p}=r,l=t.dataIdMap.get(u.dataId).id,d=t.dataIdMap.get(p.dataId).id,h=VT(l,d,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=$x(t,h);t.wasm._free(m);let y=t.makeOutput([f],"int32",c),b=t.makeOutput([],"int32",g);return[y,b]}var aie={kernelName:Dl,backendName:"wasm",setupFunc:rie,kernelFunc:nie},UT;function sie(e){UT=e.wasm.cwrap(Ml,"number",["number","number","number","number","number","number"])}function iie(e){let{backend:t,inputs:r,attrs:n}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=n,{boxes:u,scores:p}=r,l=t.dataIdMap.get(u.dataId).id,d=t.dataIdMap.get(p.dataId).id,h=UT(l,d,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=$x(t,h);t.wasm._free(g);let y=t.makeOutput([f],"int32",c),b=t.makeOutput([f],"float32",m);return[y,b]}var oie={kernelName:Ml,backendName:"wasm",setupFunc:sie,kernelFunc:iie},lie=!1,uie=Kt(Fl,lie,"bool"),GT;function pie(e){GT=e.wasm.cwrap(Fi,null,["number","number","number","number","number"])}function die(e){let{inputs:t,backend:r,attrs:n}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:u}=n,p=r.makeOutput([...a.shape,i],s),l=r.dataIdMap.get(p.dataId).id,d=r.dataIdMap.get(a.dataId).id;return GT(d,i,o,u,l),p}var hie={kernelName:Fi,backendName:"wasm",setupFunc:pie,kernelFunc:die};function cie(e){let{inputs:{x:t},backend:r}=e,n=r.makeOutput(t.shape,t.dtype);return r.typedArrayFromHeap(n).fill(1),n}var fie={kernelName:Ol,backendName:"wasm",kernelFunc:cie};function mie(e){let{inputs:t,backend:r,attrs:n}=e,{axis:a}=n;if(t.length===1)return Rm({inputs:{input:t[0]},backend:r,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(l=>{w.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],u=t.map(l=>{let d=Rm({inputs:{input:l},backend:r,attrs:{dim:a}});return o.push(d),d}),p=nT({inputs:u,backend:r,attrs:{axis:a}});return o.forEach(l=>r.disposeData(l.dataId)),p}var gie={kernelName:zl,backendName:"wasm",kernelFunc:mie},HT;function yie(e){HT=e.wasm.cwrap(Ri,null,["number","array","number","number","array","array","number","number"])}function bie(e){let{inputs:{x:t},backend:r,attrs:{paddings:n,constantValue:a}}=e,s=n.map((f,m)=>f[0]+t.shape[m]+f[1]);if(w.sizeFromShape(t.shape)===0)return wT({backend:r,attrs:{shape:s,value:a,dtype:t.dtype}});let i=r.dataIdMap.get(t.dataId).id,o=r.makeOutput(s,t.dtype),u=r.dataIdMap.get(o.dataId).id,p=new Uint8Array(new Int32Array(t.shape).buffer),l=n.map(f=>f[0]),d=n.map(f=>f[1]),h=new Uint8Array(new Int32Array(l).buffer),c=new Uint8Array(new Int32Array(d).buffer);return HT(i,p,t.shape.length,Je[t.dtype],h,c,a,u),o}var jT={kernelName:Ri,backendName:"wasm",kernelFunc:bie,setupFunc:yie},xie=Kt(Di),qT;function wie(e){qT=e.wasm.cwrap(Mi,null,["number","number","number"])}function vie(e){let{inputs:t,backend:r}=e,{x:n,alpha:a}=t,s=r.dataIdMap.get(n.dataId).id,i=r.dataIdMap.get(a.dataId).id,o=s,u=n,p=u;u.dtype!=="float32"&&(p=ts({backend:r,inputs:{x:n},attrs:{dtype:"float32"}}),o=r.dataIdMap.get(p.dataId).id);let l=r.makeOutput(n.shape,"float32"),d=r.dataIdMap.get(l.dataId).id;return qT(o,i,d),u.dtype!=="float32"&&r.disposeData(p.dataId),l}var kie={kernelName:Mi,backendName:"wasm",setupFunc:wie,kernelFunc:vie},KT;function Iie(e){KT=e.wasm.cwrap(Oi,null,["number","number","number","number"])}function Sie(e){let{backend:t,inputs:r,attrs:n}=e,{axis:a,keepDims:s}=n,{x:i}=r,o=t.dataIdMap.get(i.dataId).id,u=o,p=i,{transposed:l,axes:d,originalAxes:h,inputWasTransposed:c}=es(i,a,t),f=d;if(c){let x=t.dataIdMap.get(l.dataId).id;x!==o&&(p=l,u=x,f=N.getInnerMostAxes(f.length,p.shape.length))}N.assertAxesAreInnerMostDims("prod",f,p.shape.length);let[m,g]=N.computeOutAndReduceShapes(p.shape,f),y=w.sizeFromShape(g),b=t.makeOutput(m,p.dtype);if(w.sizeFromShape(p.shape)!==0){let x=t.dataIdMap.get(b.dataId).id;KT(u,y,Je[b.dtype],x)}if(c&&t.disposeData(l.dataId),s){let x=N.expandShapeToKeepDim(b.shape,h);b.shape=x}return b}var Nie={kernelName:Oi,backendName:"wasm",setupFunc:Iie,kernelFunc:Sie},Tie=e=>{let{backend:t,attrs:r}=e,{start:n,stop:a,step:s,dtype:i}=r,o=sx(n,a,s,i),u=t.makeOutput([o.length],i);return t.typedArrayFromHeap(u).set(o),u},Cie={kernelName:vp,backendName:"wasm",kernelFunc:Tie},_ie=Kt(li),Eie=Xe(zi),$ie=Xe(Li),Aie=Xe(Wi),XT;function Fie(e){XT=e.wasm.cwrap(Bi,null,["number","number","number","number","number","number","number","number","number","number"])}function Rie(e){let{backend:t,inputs:r,attrs:n}=e,{images:a}=r,{alignCorners:s,halfPixelCenters:i,size:o}=n,[u,p]=o,[l,d,h,c]=a.shape,f=[l,u,p,c],m=t.dataIdMap.get(a.dataId),g;m.dtype!=="float32"&&(g=ts({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(g.dataId));let y=m.id,b=t.makeOutput(f,"float32");if(w.sizeFromShape(a.shape)===0)return b;let x=t.dataIdMap.get(b.dataId).id;return XT(y,l,d,h,c,u,p,s?1:0,i?1:0,x),g!=null&&t.disposeData(g.dataId),b}var Die={kernelName:Bi,backendName:"wasm",setupFunc:Fie,kernelFunc:Rie},ZT;function Mie(e){ZT=e.wasm.cwrap(Bl,null,["number","number","number","array","array","boolean"])}function Oie(e){let{inputs:t,backend:r,attrs:n}=e,{images:a,dy:s}=t,{alignCorners:i}=n,o=r.makeOutput(a.shape,"float32"),u=r.dataIdMap.get(a.dataId),p;return u.dtype!=="float32"&&(p=ts({backend:r,inputs:{x:a},attrs:{dtype:"float32"}}),u=r.dataIdMap.get(p.dataId)),ZT(r.dataIdMap.get(a.dataId).id,r.dataIdMap.get(s.dataId).id,r.dataIdMap.get(o.dataId).id,new Uint8Array(new Int32Array(a.shape).buffer),new Uint8Array(new Int32Array(s.shape).buffer),i),p!=null&&r.disposeData(p.dataId),o}var zie={kernelName:Bl,backendName:"wasm",setupFunc:Mie,kernelFunc:Oie},JT;function Lie(e){JT=e.wasm.cwrap(Pi,null,["number","number","number","number","number","number","number","number","number","number"])}function Pie(e){let{backend:t,inputs:r,attrs:n}=e,{images:a}=r,{alignCorners:s,halfPixelCenters:i,size:o}=n,[u,p]=o,[l,d,h,c]=a.shape,f=[l,u,p,c],m=t.makeOutput(f,"float32");if(w.sizeFromShape(a.shape)===0)return m;let g=t.dataIdMap.get(a.dataId),y;g.dtype!=="float32"&&(y=ts({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(y.dataId));let b=g.id,x=t.dataIdMap.get(m.dataId).id;return JT(b,l,d,h,c,u,p,s?1:0,i?1:0,x),y!=null&&t.disposeData(y.dataId),m}var Bie={kernelName:Pi,backendName:"wasm",setupFunc:Lie,kernelFunc:Pie},YT;function Wie(e){YT=e.wasm.cwrap(Pl,null,["number","number","number","array","array","boolean"])}function Vie(e){let{inputs:t,backend:r,attrs:n}=e,{images:a,dy:s}=t,{alignCorners:i}=n,o=r.makeOutput(a.shape,"float32"),u=r.dataIdMap.get(a.dataId),p;return u.dtype!=="float32"&&(p=ts({backend:r,inputs:{x:a},attrs:{dtype:"float32"}}),u=r.dataIdMap.get(p.dataId)),YT(r.dataIdMap.get(a.dataId).id,r.dataIdMap.get(s.dataId).id,r.dataIdMap.get(o.dataId).id,new Uint8Array(new Int32Array(a.shape).buffer),new Uint8Array(new Int32Array(s.shape).buffer),i),p!=null&&r.disposeData(p.dataId),o}var Uie={kernelName:Pl,backendName:"wasm",setupFunc:Wie,kernelFunc:Vie},QT;function Gie(e){QT=e.wasm.cwrap(Vi,null,["number","array","number","array","number","number"])}function Hie(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{dims:s}=n,i=w.parseAxisParam(s,a.shape);if(a.shape.length===0)return uf({inputs:{x:a},backend:r});let o=r.makeOutput(a.shape,a.dtype),u=r.dataIdMap.get(a.dataId).id,p=r.dataIdMap.get(o.dataId).id,l=new Uint8Array(new Int32Array(i).buffer),d=new Uint8Array(new Int32Array(a.shape).buffer);QT(u,l,i.length,d,a.shape.length,p);let h=Tr({inputs:{x:o},attrs:{shape:a.shape},backend:r});return r.disposeData(o.dataId),h}var jie={kernelName:Vi,backendName:"wasm",kernelFunc:Hie,setupFunc:Gie},eC;function qie(e){eC=e.wasm.cwrap(ru,null,["number","number","number","number","number","number","number","number","array","number","number"])}function Kie(e){let{inputs:t,backend:r,attrs:n}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=n,u=r.makeOutput(a.shape,a.dtype),p=r.dataIdMap.get(a.dataId).id,l=r.dataIdMap.get(u.dataId).id,[d,h,c,f]=a.shape,[m,g]=N.getImageCenter(o,h,c),y=i===0,b=255,x=typeof i=="number"?[i,i,i,y?0:b]:[...i,b],v=new Uint8Array(new Int32Array(x).buffer);return eC(p,d,h,c,f,s,m,g,v,x.length,l),u}var Xie={kernelName:ru,backendName:"wasm",kernelFunc:Kie,setupFunc:qie},Zie=Xe(Ui),Jie=Xe(Gi),tC;function Yie(e){tC=e.wasm.cwrap(Wl,null,["number","number","number","number","number","number","array","number","number"])}function Qie(e){let{backend:t,inputs:r,attrs:n}=e,{indices:a,updates:s}=r,{shape:i}=n,o=t.makeOutput(i,s.dtype);if(w.sizeFromShape(i)===0)return o;let{sliceRank:u,numUpdates:p,sliceSize:l,strides:d,outputSize:h}=Nc.calculateShapes(s,a,i),c=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(d).buffer),g=t.dataIdMap.get(o.dataId).id;return tC(c,f,Je[s.dtype],u,p,l,m,h,g),o}var eoe={kernelName:Wl,backendName:"wasm",setupFunc:Yie,kernelFunc:Qie},rC;function toe(e){rC=e.wasm.cwrap(Ul,null,["number","number","number","number","number","number","bool","number"])}function roe(e){let{inputs:t,backend:r,attrs:n}=e,{sortedSequence:a,values:s}=t,{side:i}=n;if(a.dtype!==s.dtype)throw new Error(`SearchSorted error: sorted_sequence must have the same dtype as values. Got ${a.dtype} and ${s.dtype}`);let o=r.makeOutput(s.shape,"int32");function u(p){return r.dataIdMap.get(p.dataId).id}return rC(u(a),u(s),a.shape[0],a.shape[1],s.shape[1],Je[a.dtype],i==="left",u(o)),o}var noe={kernelName:Ul,backendName:"wasm",setupFunc:toe,kernelFunc:roe},nC;function aoe(e){nC=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function soe(e){let{inputs:t,backend:r}=e,{condition:n,t:a,e:s}=t,i=r.dataIdMap.get(n.dataId).id,o=r.dataIdMap.get(a.dataId).id,u=r.dataIdMap.get(s.dataId).id,p=r.makeOutput(a.shape,a.dtype),l=r.dataIdMap.get(p.dataId).id,d=n.shape.length,h=a.shape.length,c=d===0||d>1||h===1?1:w.sizeFromShape(a.shape.slice(1));return nC(i,o,u,c,l),p}var ioe={kernelName:Gl,backendName:"wasm",kernelFunc:soe,setupFunc:aoe},ooe=Xe(Hi),aC;function loe(e){aC=e.wasm.cwrap(Ki,null,["number","number"])}function uoe(e){let{backend:t,inputs:{x:r}}=e,n=t.dataIdMap.get(r.dataId).id,a=t.makeOutput(r.shape,r.dtype),s=t.dataIdMap.get(a.dataId).id;return w.sizeFromShape(a.shape)===0||aC(n,s),a}var poe={kernelName:"Sigmoid",backendName:"wasm",setupFunc:loe,kernelFunc:uoe},doe=Xe(qi),hoe=Xe(ji),coe=Xe(Xi);function foe(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockShape:s,paddings:i}=n,o=w.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let g=1+s.length;g<a.shape.length;++g)u.push([0,0]);let p=jT.kernelFunc({inputs:{x:a},backend:r,attrs:{paddings:u,constantValue:0}}),l=N.getReshaped(p.shape,s,o,!1),d=N.getPermuted(l.length,s.length,!1),h=N.getReshapedPermuted(p.shape,s,o,!1),c=Tr({inputs:{x:p},backend:r,attrs:{shape:l}}),f=Wa({inputs:{x:c},backend:r,attrs:{perm:d}}),m=Tr({inputs:{x:f},backend:r,attrs:{shape:h}});return r.disposeData(p.dataId),r.disposeData(c.dataId),r.disposeData(f.dataId),m}var moe={kernelName:ql,backendName:"wasm",kernelFunc:foe},sC;function goe(e){sC=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function yoe(e){let{backend:t,inputs:r}=e,{indices:n,values:a,denseShape:s,defaultValue:i}=r,o=n.shape[0],u=n.shape[1],p=t.readSync(s.dataId)[0],l=[o+p,u],d=t.dataIdMap.get(n.dataId).id,h=t.dataIdMap.get(a.dataId).id,c=t.dataIdMap.get(i.dataId).id,f=t.makeOutput(l,n.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(l.slice(0,1),a.dtype),y=t.dataIdMap.get(g.dataId).id,b=t.makeOutput([p],"bool"),x=t.dataIdMap.get(b.dataId).id,v=t.makeOutput([o],n.dtype),I=t.dataIdMap.get(v.dataId).id,T=t.makeOutput([4],"int32"),_=t.dataIdMap.get(T.dataId).id,E=sC(d,h,Je[a.dtype],o,p,u,c,m,y,x,I,_),A=t.readSync(T.dataId),R;switch(A[0]){case 1:{R=N.getSparseFillEmptyRowsIndicesDenseShapeMismatch(A[1]);break}case 2:{R=N.getSparseFillEmptyRowsNegativeIndexErrorMessage(A[1],A[2]);break}case 3:R=N.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(A[1],A[2],A[3]);break;default:R=""}if(t.disposeData(T.dataId),R)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(b.dataId),t.disposeData(v.dataId),new Error(R);let F=f,S=g;return E!==l[0]&&(F=Bs({inputs:{x:f},attrs:{begin:0,size:[E,u]},backend:t}),S=Bs({inputs:{x:g},attrs:{begin:0,size:E},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[F,S,b,v]}var boe={kernelName:kp,backendName:"wasm",setupFunc:goe,kernelFunc:yoe},iC;function xoe(e){iC=e.wasm.cwrap(Xl,null,["number","number","number","number","number","number","number"])}function woe(e){let{backend:t,inputs:r}=e,{inputIndices:n,inputShape:a,newShape:s}=r;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${a.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=t.dataIdMap.get(n.dataId).id,o=t.dataIdMap.get(a.dataId).id,u=t.dataIdMap.get(s.dataId).id,p=n.shape[0],l=w.sizeFromShape(s.shape),d=t.makeOutput([p,l],n.dtype),h=t.dataIdMap.get(d.dataId).id,c=t.makeOutput([l],s.dtype),f=t.dataIdMap.get(c.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;iC(i,o,u,p,h,f,g);let y=t.readSync(m.dataId),b;switch(y[0]){case 0:{b=N.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(y[1],y[2]);break}case 1:{b=N.getSparseReshapeNegativeOutputDimErrorMessage(y[1],y[2]);break}case 2:b=N.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let x=Array.from(t.readSync(a.dataId)),v=Array.from(t.readSync(c.dataId));b=N.getSparseReshapeInputOutputMultipleErrorMessage(x,v);break}case 4:{let x=Array.from(t.readSync(a.dataId)),v=Array.from(t.readSync(c.dataId));b=N.getSparseReshapeInputOutputMismatchErrorMessage(x,v);break}default:b=""}if(t.disposeData(m.dataId),b)throw t.disposeData(d.dataId),t.disposeData(c.dataId),new Error(b);return[d,c]}var voe={kernelName:Xl,backendName:"wasm",setupFunc:xoe,kernelFunc:woe},oC;function lC(e){oC=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function uC(e,t){let{backend:r,inputs:n}=e,{data:a,indices:s,segmentIds:i}=n,o=s.shape[0],u=r.readSync(i.dataId,o-1,o)[0],p=o>0?u+1:0;if(p<0)throw new Error(N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let l=a.shape.slice();l[0]=p;let d=r.dataIdMap.get(a.dataId).id,h=r.dataIdMap.get(s.dataId).id,c=r.dataIdMap.get(i.dataId).id,f=r.makeOutput(l,a.dtype),m=r.dataIdMap.get(f.dataId).id,g=r.makeOutput([4],"int32"),y=r.dataIdMap.get(g.dataId).id;oC(d,Je[a.dtype],a.shape[0],h,c,m,y,t,0);let b=r.readSync(g.dataId),x;switch(b[0]){case 0:{x=N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{x=N.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:x=N.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b[1],b[2]);break;case 3:x=N.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(b[1],b[2],b[3]);break;default:x=""}if(r.disposeData(g.dataId),x)throw r.disposeData(f.dataId),new Error(x);return f}function koe(e){return uC(e,!0)}var Ioe={kernelName:Ip,backendName:"wasm",setupFunc:lC,kernelFunc:koe};function Soe(e){return uC(e,!1)}var Noe={kernelName:Sp,backendName:"wasm",setupFunc:lC,kernelFunc:Soe},pC;function Toe(e){pC=e.wasm.cwrap(Zl,null,["number","number","number","number","number","number","number","number","array","number","number"])}function Coe(e){let{backend:t,inputs:r,attrs:n}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=r,{outputShape:o}=n,u=t.makeOutput(o,i.dtype);if(w.sizeFromShape(o)===0)return u;let{sliceRank:p,numUpdates:l,sliceSize:d,strides:h,outputSize:c}=N.calculateShapes(s,a,o),f=t.dataIdMap.get(a.dataId).id,m=t.dataIdMap.get(s.dataId).id,g=t.dataIdMap.get(i.dataId).id,y=new Uint8Array(new Int32Array(h).buffer),b=t.dataIdMap.get(u.dataId).id;return pC(f,m,s.shape.length,g,Je[i.dtype],p,l,d,y,c,b),u}var _oe={kernelName:Zl,backendName:"wasm",setupFunc:Toe,kernelFunc:Coe};function Eoe(e){let{inputs:t,attrs:r,backend:n}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=w.parseAxisParam(i,a.shape)[0],u=N.prepareSplitSize(a,s,o),p=new Array(a.shape.length).fill(0),l=a.shape.slice();return u.map(d=>{let h=[...l];h[o]=d;let c=Bs({inputs:{x:a},attrs:{begin:p,size:h},backend:n});return p[o]+=d,c})}var $oe={kernelName:Kl,backendName:"wasm",kernelFunc:Eoe},Aoe=Xe(Zi),Foe=Xe(Np),Roe=Kt(Qi),dC;function Doe(e){dC=e.wasm.cwrap(qa,null,["number","number","number","number"])}function Moe(e){let{backend:t,inputs:r,attrs:n}=e,{alpha:a}=n,{x:s}=r,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),u=t.dataIdMap.get(o.dataId).id;return dC(i,a,Je[s.dtype],u),o}var Ooe={kernelName:qa,backendName:"wasm",setupFunc:Doe,kernelFunc:Moe},hC;function zoe(e){hC=e.wasm.cwrap(Jl,null,["number","array","number","array","array","array","array","array","number","number"])}function Loe(e){let{backend:t,inputs:r,attrs:n}=e,{x:a}=r,{begin:s,end:i,strides:o,beginMask:u,endMask:p,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h}=n,{finalShapeSparse:c,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=zt.sliceInfo(a.shape,s,i,o,u,p,l,d,h),I;if(m)I=Tr({inputs:{x:a},backend:t,attrs:{shape:f}});else if(g||y){w.assert(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);let T=zt.computeOutShape(b,x,v),_=Bs({inputs:{x:a},backend:t,attrs:{begin:b,size:T}});I=Tr({inputs:{x:_},backend:t,attrs:{shape:f}}),t.disposeData(_.dataId)}else{let T=t.makeOutput(c,"float32"),_=t.dataIdMap.get(a.dataId).id,E=new Uint8Array(new Int32Array(w.computeStrides(a.shape)).buffer),A=new Uint8Array(new Int32Array(b).buffer),R=new Uint8Array(new Int32Array(x).buffer),F=new Uint8Array(new Int32Array(v).buffer),S=new Uint8Array(new Int32Array(c).buffer),M=new Uint8Array(new Int32Array(w.computeStrides(c)).buffer),B=t.dataIdMap.get(T.dataId).id;hC(_,E,a.shape.length,A,R,F,S,M,c.length,B),I=Tr({inputs:{x:T},backend:t,attrs:{shape:f}}),t.disposeData(T.dataId)}return I}var Poe={kernelName:Jl,backendName:"wasm",setupFunc:zoe,kernelFunc:Loe};function Boe(e){let{backend:t,inputs:r,attrs:n}=e,{data:a,dataSplits:s}=r,{separator:i,nGramWidths:o,leftPad:u,rightPad:p,padWidth:l,preserveShortSequences:d}=n,h=t.readSync(a.dataId),c=t.readSync(s.dataId),[f,m]=ox(h,c,i,o,u,p,l,d),g=t.makeOutput([f.length],"string"),y=t.dataIdMap.get(g.dataId);y.stringBytes=f;let b=t.makeOutput(s.shape,"int32");return t.typedArrayFromHeap(b).set(m),[g,b]}var Woe={kernelName:Cp,backendName:"wasm",kernelFunc:Boe};function Voe(e){let{backend:t,inputs:r,attrs:n}=e,{input:a,delimiter:s}=r,{skipEmpty:i}=n,o=t.readSync(a.dataId),u=t.readSync(s.dataId),[p,l,d]=lx(o,u[0],i),h=l.length,c=t.makeOutput([h,2],"int32");t.typedArrayFromHeap(c).set(p);let f=t.makeOutput([h],"string"),m=t.dataIdMap.get(f.dataId);m.stringBytes=l;let g=t.makeOutput([2],"int32");return t.typedArrayFromHeap(g).set(d),[c,f,g]}var Uoe={kernelName:_p,backendName:"wasm",kernelFunc:Voe};function Goe(e){let{backend:t,inputs:r,attrs:n}=e,{input:a}=r,{numBuckets:s}=n,i=t.readSync(a.dataId),o=ux(i,s),u=t.makeOutput(a.shape,"int32");return t.typedArrayFromHeap(u).set(o),u}var Hoe={kernelName:Ep,backendName:"wasm",kernelFunc:Goe},joe=Kt(eo),cC;function qoe(e){cC=e.wasm.cwrap(Ji,null,["number","number","number","number"])}function Koe(e){let{backend:t,inputs:r,attrs:n}=e,{axis:a,keepDims:s}=n,{x:i}=r,o=t.dataIdMap.get(i.dataId).id,u=o,p=i,{transposed:l,axes:d,originalAxes:h,inputWasTransposed:c}=es(i,a,t),f=d;if(c){let x=t.dataIdMap.get(l.dataId).id;x!==o&&(p=l,u=x,f=N.getInnerMostAxes(f.length,p.shape.length))}N.assertAxesAreInnerMostDims("sum",f,p.shape.length);let[m,g]=N.computeOutAndReduceShapes(p.shape,f),y=w.sizeFromShape(g),b=t.makeOutput(m,p.dtype);if(w.sizeFromShape(p.shape)!==0){let x=t.dataIdMap.get(b.dataId).id;cC(u,y,Je[b.dtype],x)}if(c&&t.disposeData(l.dataId),s){let x=N.expandShapeToKeepDim(b.shape,h);b.shape=x}return b}var Xoe={kernelName:Ji,backendName:"wasm",setupFunc:qoe,kernelFunc:Koe},Zoe=Xe(to),Joe=Xe(ro),fC;function Yoe(e){fC=e.wasm.cwrap(Vl,null,["number","number","number","number","number","number","array","number","number","number"])}function Qoe(e){let{backend:t,inputs:r,attrs:n}=e,{tensor:a,indices:s,updates:i}=r,o=t.makeOutput(a.shape,a.dtype);if(w.sizeFromShape(a.shape)===0)return o;let{sliceRank:u,numUpdates:p,sliceSize:l,strides:d,outputSize:h}=Nc.calculateShapes(i,s,a.shape),c=t.dataIdMap.get(s.dataId).id,f=t.dataIdMap.get(i.dataId).id,m=t.dataIdMap.get(a.dataId).id,g=new Uint8Array(new Int32Array(d).buffer),y=t.dataIdMap.get(o.dataId).id;return fC(c,f,Je[i.dtype],u,p,l,g,h,y,m),o}var ele={kernelName:Vl,backendName:"wasm",setupFunc:Yoe,kernelFunc:Qoe},mC;function tle(e){mC=e.wasm.cwrap(ja,null,["number","array","number","array","number","number"])}function rle(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,s=r.dataIdMap.get(a.dataId).id,{reps:i}=n,o=new Array(a.shape.length);for(let h=0;h<o.length;h++)o[h]=a.shape[h]*i[h];let u=new Uint8Array(new Int32Array(a.shape).buffer),p=new Uint8Array(new Int32Array(o).buffer),l=r.makeOutput(o,a.dtype),d=r.dataIdMap.get(l.dataId).id;return mC(s,u,a.shape.length,p,o.length,Je[l.dtype],d),l}var nle={kernelName:ja,backendName:"wasm",setupFunc:tle,kernelFunc:rle},gC;function ale(e){gC=e.wasm.cwrap(Yl,null,["number","array","number","number","number","bool","number","number"])}var sle=({inputs:e,backend:t,attrs:r})=>{let{x:n}=e,{k:a,sorted:s}=r,i=t.dataIdMap.get(n.dataId).id,o=new Uint8Array(new Int32Array(n.shape).buffer),u=n.shape.slice();u[u.length-1]=a;let p=t.makeOutput(u,n.dtype),l=t.dataIdMap.get(p.dataId).id,d=t.makeOutput(u,"int32"),h=t.dataIdMap.get(d.dataId).id;return gC(i,o,n.shape.length,Je[n.dtype],a,s,l,h),[p,d]},ile={kernelName:Yl,backendName:"wasm",setupFunc:ale,kernelFunc:sle},yC;function ole(e){yC=e.wasm.cwrap(Ql,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])}function lle(e){let{backend:t,inputs:r,attrs:n}=e,{image:a,transforms:s}=r,{interpolation:i,fillMode:o,fillValue:u,outputShape:p}=n,[l,d,h,c]=a.shape,[f,m]=p!=null?p:[d,h],g=[l,f,m,c],y=new Uint8Array(new Int32Array(w.computeStrides(a.shape)).buffer),b=new Uint8Array(new Int32Array(w.computeStrides(g)).buffer),x=t.makeOutput(g,a.dtype),v=t.dataIdMap.get(x.dataId).id,I=t.dataIdMap.get(a.dataId).id,T=t.dataIdMap.get(s.dataId).id,_=i==="nearest"?1:2,E;switch(o){case"constant":E=1;break;case"reflect":E=2;break;case"wrap":E=3;break;case"nearest":E=4;break;default:E=1;break}return yC(I,T,s.shape[0]>1,l,f,m,c,h,d,y,a.shape.length-1,b,g.length-1,_,E,u,v),x}var ule={kernelName:Ql,backendName:"wasm",setupFunc:ole,kernelFunc:lle};function ple(e){let{inputs:t,attrs:r,backend:n}=e,{axis:a}=r,{x:s}=t,{outputValues:i,outputShape:o,indices:u}=dx(n.readSync(s.dataId),a,s.shape,s.dtype);return[n.makeOutput(o,s.dtype,void 0,i),n.makeOutput([u.length],"int32",void 0,u)]}var dle={kernelName:$p,backendName:"wasm",kernelFunc:ple};function hle(e){let{inputs:t,backend:r,attrs:n}=e,{value:a}=t,{axis:s}=n;s<0&&(s+=a.shape.length);let i=a.shape[s],o=a.shape.length,u=new Array(o-1),p=0;for(let c=0;c<o;c++)c!==s&&(u[p++]=a.shape[c]);let l=new Array(i),d=new Array(o).fill(0),h=a.shape.slice();h[s]=1;for(let c=0;c<l.length;c++)d[s]=c,l[c]=Bs({inputs:{x:a},attrs:{begin:d,size:h},backend:r});return l.map(({dataId:c,dtype:f})=>({dataId:c,dtype:f,shape:u}))}var cle={kernelName:eu,backendName:"wasm",kernelFunc:hle};function fle(e){let{inputs:{x:t},backend:r}=e,n=r.makeOutput(t.shape,t.dtype);return r.typedArrayFromHeap(n).fill(0),n}var mle={kernelName:tu,backendName:"wasm",kernelFunc:fle},gle=[wre,vre,kre,Ire,Sre,Cre,Mre,Lre,Pre,Bre,Wre,Vre,Ure,Gre,Hre,Kre,Jre,ene,ane,pne,cne,mne,gne,yne,wne,vne,Sne,Cne,$ne,Rne,One,zne,Lne,Wne,Gne,qne,Zne,Qne,rae,sae,lae,dae,fae,mae,bae,wae,vae,kae,Iae,Sae,Cae,_ae,Eae,Fae,Mae,Lae,Wae,Gae,jae,Kae,_re,Xae,Zae,Jae,ese,rse,ase,ose,use,lse,dse,hse,fse,gse,xse,kse,Nse,Tse,Ese,Fse,Mse,Lse,Wse,Vse,Hse,Zse,Jse,Yse,tie,aie,oie,uie,hie,fie,gie,jT,xie,kie,Nie,Cie,_ie,Eie,$ie,Aie,tne,Die,zie,Bie,Uie,jie,Xie,Zie,Jie,eoe,noe,ioe,ooe,poe,doe,hoe,lne,qse,coe,moe,boe,voe,Ioe,Noe,_oe,$oe,Aoe,Foe,Roe,Ooe,Poe,Woe,Uoe,Hoe,joe,Xoe,Zoe,Joe,ele,nle,ile,ule,Fre,dle,cle,mle];for(let e of gle)Fp(e);var Mm=H();Mm.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch{return!1}});Mm.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(Mm.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}});var Ov=Va(G_()),yle=Va(H_()),zv=Va(j_()),Lv=Ov.default||Ov,ble=zv.default||zv,bC=class extends hp{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(xC),Om=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new Mh(this,pn())}write(e,t,r){let n={id:this.dataIdNextNumber++};return this.move(n,e,t,r,1),n}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=w.now();return e(),{kernelMs:w.now()-t}}move(e,t,r,n,a){let s=this.dataIdNextNumber++;if(n==="string"){let p=t;this.dataIdMap.set(e,{id:s,stringBytes:p,shape:r,dtype:n,memoryOffset:null,refCount:a});return}let i=w.sizeFromShape(r),o=i*w.bytesPerElement(n),u=this.wasm._malloc(o);this.dataIdMap.set(e,{id:s,memoryOffset:u,shape:r,dtype:n,refCount:a}),this.wasm.tfjs.registerTensor(s,i,u),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),u)}async read(e){return this.readSync(e)}readSync(e,t,r){let{memoryOffset:n,dtype:a,shape:s,stringBytes:i}=this.dataIdMap.get(e);if(a==="string")return(t==null||t===0)&&(r==null||r>=i.length)?i:i.slice(t,r);t=t||0,r=r||w.sizeFromShape(s);let o=w.bytesPerElement(a),u=this.wasm.HEAPU8.slice(n+t*o,n+r*o);return vle(u.buffer,a)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let r=this.dataIdMap.get(e);if(r.refCount--,!t&&r.refCount>0)return!1;this.wasm._free(r.memoryOffset),this.wasm.tfjs.disposeData(r.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,r,n){let a;if(r==null)a=this.write(n!=null?n:null,e,t);else{let s=this.dataIdNextNumber++;a={id:s},this.dataIdMap.set(a,{id:s,memoryOffset:r,shape:e,dtype:t,refCount:1});let i=w.sizeFromShape(e);this.wasm.tfjs.registerTensor(s,i,r)}return{dataId:a,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:r}){let n=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(r),s=w.sizeFromShape(e);switch(t){case"float32":return new Float32Array(n,a,s);case"int32":return new Int32Array(n,a,s);case"bool":return new Uint8Array(n,a,s);default:throw new Error(`Unknown dtype ${t}`)}}};function xle(e){return(t,r)=>(w.fetch(e,{credentials:"same-origin"}).then(n=>{n.ok||t.env.a(`failed to load wasm binary file at '${e}'`),n.arrayBuffer().then(a=>{WebAssembly.instantiate(a,t).then(s=>{r(s.instance,s.module)})})}),{})}function Pv(e,t,r){if($h!=null)return $h;let n="tfjs-backend-wasm.wasm";return e&&t?n="tfjs-backend-wasm-threaded-simd.wasm":e&&(n="tfjs-backend-wasm-simd.wasm"),Gu!=null&&Gu[n]!=null?Gu[n]:r+n}async function wle(){let[e,t]=await Promise.all([H().getAsync("WASM_HAS_SIMD_SUPPORT"),H().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((r,n)=>{let a={};a.locateFile=(o,u)=>{if(o.endsWith(".worker.js")){let p=yle.wasmWorkerContents.replace(/\n/g,"\\n"),l=new Blob([p],{type:"application/javascript"});return URL.createObjectURL(l)}return o.endsWith(".wasm")?Pv(e,t,Wu!=null?Wu:u):u+o},Ax&&(a.instantiateWasm=xle(Pv(e,t,Wu!=null?Wu:"")));let s=!1;a.onAbort=()=>{s||Hu||(Hu=!0,n({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))};let i;t&&e&&$h==null?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+Lv.toString()],{type:"text/javascript"}),i=Lv(a)):i=ble(a),i.then(o=>{s=!0,Hu=!1;let u=null;o.tfjs={init:o.cwrap("init",null,[]),initWithThreadsCount:o.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:o.cwrap("get_threads_count","number",[]),registerTensor:o.cwrap("register_tensor",null,["number","number","number"]),disposeData:o.cwrap("dispose_data",u,["number"]),dispose:o.cwrap("dispose",u,[])},r({wasm:o})}).catch(n)})}function vle(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var kle=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],$h=null,Wu=null,Gu={},Hu=!1,Ax=!1;function Ile(e,t=!1){if(C0("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Hu)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");$h=e,Ax=t}function Sle(e,t=!1){if(Hu)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof e=="string")Wu=e;else{Gu=e;let r=kle.filter(n=>Gu[n]==null);if(r.length>0)throw new Error(`There were no entries found for the following binaries: ${r.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}Ax=t}var xC=-1,Om=-1;function Nle(e){xC=e}function Tle(){if(Om===-1)throw new Error("WASM backend not initialized.");return Om}var Cle="4.3.0",_le=2;tc("wasm",async()=>{let{wasm:e}=await wle();return new bC(e)},_le);var Bv="4.3.0",Ele="4.3.0",$le="4.3.0",Ale="4.3.0",Fle="4.3.0",Rle={tfjs:Bv,"tfjs-core":Bv,"tfjs-converter":Ele,"tfjs-backend-cpu":$le,"tfjs-backend-webgl":Ale,"tfjs-backend-wasm":Fle},Dle={};Vm(Dle,{AnchorPosition:()=>$C,DrawBox:()=>FC,DrawBoxOptions:()=>AC,DrawFaceLandmarks:()=>jC,DrawFaceLandmarksOptions:()=>HC,DrawTextField:()=>df,DrawTextFieldOptions:()=>Lx,drawContour:()=>va,drawDetections:()=>qle,drawFaceExpressions:()=>sue,drawFaceLandmarks:()=>oue});function va(e,t,r=!1){if(e.beginPath(),t.slice(1).forEach(({x:n,y:a},s)=>{let i=t[s];e.moveTo(i.x,i.y),e.lineTo(n,a)}),r){let n=t[t.length-1],a=t[0];if(!n||!a)return;e.moveTo(n.x,n.y),e.lineTo(a.x,a.y)}e.stroke()}var Mle={};Vm(Mle,{computeReshapedDimensions:()=>kC,getCenterPoint:()=>Rx,isDimensions:()=>Lm,isEven:()=>zm,isFloat:()=>vC,isTensor:()=>ku,isTensor1D:()=>Ole,isTensor2D:()=>wC,isTensor3D:()=>pf,isTensor4D:()=>dp,isValidNumber:()=>ks,isValidProbablitiy:()=>zle,range:()=>Zo,round:()=>Fx});var vs=class{constructor(e,t){if(!ks(e)||!ks(t))throw new Error(`Dimensions.constructor - expected width and height to be valid numbers, instead have ${JSON.stringify({width:e,height:t})}`);this._width=e,this._height=t}get width(){return this._width}get height(){return this._height}reverse(){return new vs(1/this.width,1/this.height)}};function ku(e,t){return e instanceof Ue&&e.shape.length===t}function Ole(e){return ku(e,1)}function wC(e){return ku(e,2)}function pf(e){return ku(e,3)}function dp(e){return ku(e,4)}function vC(e){return e%1!==0}function zm(e){return e%2===0}function Fx(e,t=2){let r=10**t;return Math.floor(e*r)/r}function Lm(e){return e&&e.width&&e.height}function kC({width:e,height:t},r){let n=r/Math.max(t,e);return new vs(Math.round(e*n),Math.round(t*n))}function Rx(e){return e.reduce((t,r)=>t.add(r),new Ke(0,0)).div(new Ke(e.length,e.length))}function Zo(e,t,r){return Array(e).fill(0).map((n,a)=>t+a*r)}function ks(e){return!!e&&e!==1/0&&e!==-1/0&&!Number.isNaN(e)||e===0}function zle(e){return ks(e)&&e>=0&&e<=1}var Ke=class{constructor(e,t){this._x=e,this._y=t}get x(){return this._x}get y(){return this._y}add(e){return new Ke(this.x+e.x,this.y+e.y)}sub(e){return new Ke(this.x-e.x,this.y-e.y)}mul(e){return new Ke(this.x*e.x,this.y*e.y)}div(e){return new Ke(this.x/e.x,this.y/e.y)}abs(){return new Ke(Math.abs(this.x),Math.abs(this.y))}magnitude(){return Math.sqrt(this.x**2+this.y**2)}floor(){return new Ke(Math.floor(this.x),Math.floor(this.y))}},sr=class{static isRect(e){return!!e&&[e.x,e.y,e.width,e.height].every(ks)}static assertIsValidBox(e,t,r=!1){if(!sr.isRect(e))throw new Error(`${t} - invalid box: ${JSON.stringify(e)}, expected object with properties x, y, width, height`);if(!r&&(e.width<0||e.height<0))throw new Error(`${t} - width (${e.width}) and height (${e.height}) must be positive numbers`)}constructor(e,t=!0){let r=e||{},n=[r.left,r.top,r.right,r.bottom].every(ks),a=[r.x,r.y,r.width,r.height].every(ks);if(!a&&!n)throw new Error(`Box.constructor - expected box to be IBoundingBox | IRect, instead have ${JSON.stringify(r)}`);let[s,i,o,u]=a?[r.x,r.y,r.width,r.height]:[r.left,r.top,r.right-r.left,r.bottom-r.top];sr.assertIsValidBox({x:s,y:i,width:o,height:u},"Box.constructor",t),this._x=s,this._y=i,this._width=o,this._height=u}get x(){return this._x}get y(){return this._y}get width(){return this._width}get height(){return this._height}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get area(){return this.width*this.height}get topLeft(){return new Ke(this.left,this.top)}get topRight(){return new Ke(this.right,this.top)}get bottomLeft(){return new Ke(this.left,this.bottom)}get bottomRight(){return new Ke(this.right,this.bottom)}round(){let[e,t,r,n]=[this.x,this.y,this.width,this.height].map(a=>Math.round(a));return new sr({x:e,y:t,width:r,height:n})}floor(){let[e,t,r,n]=[this.x,this.y,this.width,this.height].map(a=>Math.floor(a));return new sr({x:e,y:t,width:r,height:n})}toSquare(){let{x:e,y:t,width:r,height:n}=this,a=Math.abs(r-n);return r<n&&(e-=a/2,r+=a),n<r&&(t-=a/2,n+=a),new sr({x:e,y:t,width:r,height:n})}rescale(e){let t=Lm(e)?e.width:e,r=Lm(e)?e.height:e;return new sr({x:this.x*t,y:this.y*r,width:this.width*t,height:this.height*r})}pad(e,t){let[r,n,a,s]=[this.x-e/2,this.y-t/2,this.width+e,this.height+t];return new sr({x:r,y:n,width:a,height:s})}clipAtImageBorders(e,t){let{x:r,y:n,right:a,bottom:s}=this,i=Math.max(r,0),o=Math.max(n,0),u=a-i,p=s-o,l=Math.min(u,e-i),d=Math.min(p,t-o);return new sr({x:i,y:o,width:l,height:d}).floor()}shift(e,t){let{width:r,height:n}=this,a=this.x+e,s=this.y+t;return new sr({x:a,y:s,width:r,height:n})}padAtBorders(e,t){let r=this.width+1,n=this.height+1,a=1,s=1,i=r,o=n,u=this.left,p=this.top,l=this.right,d=this.bottom;return l>t&&(i=-l+t+r,l=t),d>e&&(o=-d+e+n,d=e),u<1&&(o=2-u,u=1),p<1&&(o=2-p,p=1),{dy:s,edy:o,dx:a,edx:i,y:p,ey:d,x:u,ex:l,w:r,h:n}}calibrate(e){return new sr({left:this.left+e.left*this.width,top:this.top+e.top*this.height,right:this.right+e.right*this.width,bottom:this.bottom+e.bottom*this.height}).toSquare().round()}},IC=class extends sr{constructor(e,t,r,n,a=!1){super({left:e,top:t,right:r,bottom:n},a)}},Dx=class{constructor(e,t,r,n,a){this._imageDims=new vs(a.width,a.height),this._score=e,this._classScore=t,this._className=r,this._box=new sr(n).rescale(this._imageDims)}get score(){return this._score}get classScore(){return this._classScore}get className(){return this._className}get box(){return this._box}get imageDims(){return this._imageDims}get imageWidth(){return this.imageDims.width}get imageHeight(){return this.imageDims.height}get relativeBox(){return new sr(this._box).rescale(this.imageDims.reverse())}forSize(e,t){return new Dx(this.score,this.classScore,this.className,this.relativeBox,{width:e,height:t})}},ua=class extends Dx{constructor(e,t,r){super(e,e,"",t,r)}forSize(e,t){let{score:r,relativeBox:n,imageDims:a}=super.forSize(e,t);return new ua(r,n,a)}};function Lle(e,t,r=!0){let n=Math.max(0,Math.min(e.right,t.right)-Math.max(e.left,t.left)),a=Math.max(0,Math.min(e.bottom,t.bottom)-Math.max(e.top,t.top)),s=n*a;return r?s/(e.area+t.area-s):s/Math.min(e.area,t.area)}function Ple(e){let t=e.map(o=>o.x),r=e.map(o=>o.y),n=t.reduce((o,u)=>u<o?u:o,1/0),a=r.reduce((o,u)=>u<o?u:o,1/0),s=t.reduce((o,u)=>o<u?u:o,0),i=r.reduce((o,u)=>o<u?u:o,0);return new IC(n,a,s,i)}function Ble(e,t,r,n=!0){let a=t.map((i,o)=>({score:i,boxIndex:o})).sort((i,o)=>i.score-o.score).map(i=>i.boxIndex),s=[];for(;a.length>0;){let i=a.pop();s.push(i);let o=a,u=[];for(let p=0;p<o.length;p++){let l=o[p],d=e[i],h=e[l];u.push(Lle(d,h,n))}a=a.filter((p,l)=>u[l]<=r)}return s}function fd(e,t){return W(()=>{let[r,n,a]=t,s=Br([...e.shape.slice(0,3),1],r,"float32"),i=Br([...e.shape.slice(0,3),1],n,"float32"),o=Br([...e.shape.slice(0,3),1],a,"float32"),u=at([s,i,o],3);return he(e,u)})}function Wle(e,t=!1){return W(()=>{let[r,n]=e.shape.slice(1);if(r===n)return e;let a=Math.abs(r-n),s=Math.round(a*(t?.5:1)),i=r>n?2:1,o=d=>{let h=e.shape.slice();return h[i]=d,Br(h,0,"float32")},u=o(s),p=a-u.shape[i],l=[t&&p?o(p):null,e,u].filter(d=>!!d).map(d=>se(d,"float32"));return at(l,i)})}function Mf(e){return 1/(1+Math.exp(-e))}var SC=class extends sr{constructor(e,t,r,n,a=!1){super({x:e,y:t,width:r,height:n},a)}},Vle=.5,Ule=.43,Gle=.45,Ah=class{constructor(e,t,r=new Ke(0,0)){let{width:n,height:a}=t;this._imgDims=new vs(n,a),this._shift=r,this._positions=e.map(s=>s.mul(new Ke(n,a)).add(r))}get shift(){return new Ke(this._shift.x,this._shift.y)}get imageWidth(){return this._imgDims.width}get imageHeight(){return this._imgDims.height}get positions(){return this._positions}get relativePositions(){return this._positions.map(e=>e.sub(this._shift).div(new Ke(this.imageWidth,this.imageHeight)))}forSize(e,t){return new this.constructor(this.relativePositions,{width:e,height:t})}shiftBy(e,t){return new this.constructor(this.relativePositions,this._imgDims,new Ke(e,t))}shiftByPoint(e){return this.shiftBy(e.x,e.y)}align(e,t={}){if(e){let a=e instanceof ua?e.box.floor():new sr(e);return this.shiftBy(a.x,a.y).align(null,t)}let{useDlibAlignment:r,minBoxPadding:n}={useDlibAlignment:!1,minBoxPadding:.2,...t};return r?this.alignDlib():this.alignMinBbox(n)}alignDlib(){let e=this.getRefPointsForAlignment(),[t,r,n]=e,a=l=>n.sub(l).magnitude(),s=(a(t)+a(r))/2,i=Math.floor(s/Gle),o=Rx(e),u=Math.floor(Math.max(0,o.x-Vle*i)),p=Math.floor(Math.max(0,o.y-Ule*i));return new SC(u,p,Math.min(i,this.imageWidth+u),Math.min(i,this.imageHeight+p))}alignMinBbox(e){let t=Ple(this.positions);return t.pad(t.width*e,t.height*e)}getRefPointsForAlignment(){throw new Error("getRefPointsForAlignment not implemented by base class")}},NC=class extends Ah{getJawOutline(){return this.positions.slice(0,17)}getLeftEyeBrow(){return this.positions.slice(17,22)}getRightEyeBrow(){return this.positions.slice(22,27)}getNose(){return this.positions.slice(27,36)}getLeftEye(){return this.positions.slice(36,42)}getRightEye(){return this.positions.slice(42,48)}getMouth(){return this.positions.slice(48,68)}getRefPointsForAlignment(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(Rx)}};function Fh(e){return e.detection instanceof ua}function TC(){let e=window.fetch;if(!e)throw new Error("fetch - missing fetch implementation for browser environment");return{Canvas:HTMLCanvasElement,CanvasRenderingContext2D,Image:HTMLImageElement,ImageData,Video:HTMLVideoElement,createCanvasElement:()=>document.createElement("canvas"),createImageElement:()=>document.createElement("img"),createVideoElement:()=>document.createElement("video"),fetch:e,readFile:()=>{throw new Error("readFile - filesystem not available for browser environment")}}}function Mx(){return typeof globalThis=="object"&&typeof process<"u"&&process.versions!=null&&process.versions.node!=null}function CC(e){let t="";if(!e&&Mx())try{e=k_("fs")}catch(r){t=r.toString()}return{readFile:e?r=>new Promise((n,a)=>{e.readFile(r,(s,i)=>s?a(s):n(i))}):()=>{throw new Error(`readFile - failed to require fs in nodejs environment with error: ${t}`)}}}function _C(){let e=globalThis.Canvas||globalThis.HTMLCanvasElement,t=globalThis.Image||globalThis.HTMLImageElement,r=globalThis.Video||globalThis.HTMLVideoElement,n=()=>{if(e)return new e;throw new Error("createCanvasElement - missing Canvas implementation for nodejs environment")},a=()=>{if(t)return new t;throw new Error("createImageElement - missing Image implementation for nodejs environment")},s=()=>{if(r)return new r;throw new Error("createVideoElement - missing Video implementation for nodejs environment")},i=globalThis.fetch,o=CC();return{Canvas:e||class{},CanvasRenderingContext2D:globalThis.CanvasRenderingContext2D||class{},Image:t||class{},ImageData:globalThis.ImageData||class{},Video:globalThis.HTMLVideoElement||class{},createCanvasElement:n,createImageElement:a,createVideoElement:s,fetch:i,...o}}function EC(){return typeof window=="object"&&typeof document<"u"&&typeof HTMLImageElement<"u"&&typeof HTMLCanvasElement<"u"&&typeof HTMLVideoElement<"u"&&typeof ImageData<"u"&&typeof CanvasRenderingContext2D<"u"}var Bt;function Hle(){if(!Bt)throw new Error("getEnv - environment is not defined, check isNodejs() and isBrowser()");return Bt}function Pm(e){Bt=e}function Ox(){return EC()?Pm(TC()):Mx()?Pm(_C()):null}function jle(e){if(Bt||Ox(),!Bt)throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()");let{Canvas:t=Bt.Canvas,Image:r=Bt.Image}=e;Bt.Canvas=t,Bt.Image=r,Bt.createCanvasElement=e.createCanvasElement||(()=>new t),Bt.createImageElement=e.createImageElement||(()=>new r),Bt.ImageData=e.ImageData||Bt.ImageData,Bt.Video=e.Video||Bt.Video,Bt.fetch=e.fetch||Bt.fetch,Bt.readFile=e.readFile||Bt.readFile}var rn={getEnv:Hle,setEnv:Pm,initialize:Ox,createBrowserEnv:TC,createFileSystem:CC,createNodejsEnv:_C,monkeyPatch:jle,isBrowser:EC,isNodejs:Mx};Ox();function zx(e){return!rn.isNodejs()&&typeof e=="string"?document.getElementById(e):e}function Jo(e){let{Canvas:t,CanvasRenderingContext2D:r}=rn.getEnv();if(e instanceof r)return e;let n=zx(e);if(!(n instanceof t))throw new Error("resolveContext2d - expected canvas to be of instance of Canvas");let a=n.getContext("2d");if(!a)throw new Error("resolveContext2d - canvas 2d context is null");return a}var $C=(e=>(e.TOP_LEFT="TOP_LEFT",e.TOP_RIGHT="TOP_RIGHT",e.BOTTOM_LEFT="BOTTOM_LEFT",e.BOTTOM_RIGHT="BOTTOM_RIGHT",e))($C||{}),Lx=class{constructor(e={}){let{anchorPosition:t,backgroundColor:r,fontColor:n,fontSize:a,fontStyle:s,padding:i}=e;this.anchorPosition=t||"TOP_LEFT",this.backgroundColor=r||"rgba(0, 0, 0, 0.5)",this.fontColor=n||"rgba(255, 255, 255, 1)",this.fontSize=a||14,this.fontStyle=s||"Georgia",this.padding=i||4}},df=class{constructor(e,t,r={}){this.text=typeof e=="string"?[e]:e instanceof df?e.text:e,this.anchor=t,this.options=new Lx(r)}measureWidth(e){let{padding:t}=this.options;return this.text.map(r=>e.measureText(r).width).reduce((r,n)=>r<n?n:r,0)+2*t}measureHeight(){let{fontSize:e,padding:t}=this.options;return this.text.length*e+2*t}getUpperLeft(e,t){let{anchorPosition:r}=this.options,n=r==="BOTTOM_RIGHT"||r==="TOP_RIGHT",a=r==="BOTTOM_LEFT"||r==="BOTTOM_RIGHT",s=this.measureWidth(e),i=this.measureHeight(),o=n?this.anchor.x-s:this.anchor.x,u=a?this.anchor.y-i:this.anchor.y;if(t){let{width:p,height:l}=t,d=Math.max(Math.min(o,p-s),0),h=Math.max(Math.min(u,l-i),0);return{x:d,y:h}}return{x:o,y:u}}draw(e){let t=zx(e),r=Jo(t),{backgroundColor:n,fontColor:a,fontSize:s,fontStyle:i,padding:o}=this.options;r.font=`${s}px ${i}`;let u=this.measureWidth(r),p=this.measureHeight();r.fillStyle=n;let l=this.getUpperLeft(r,t);r.fillRect(l.x,l.y,u,p),r.fillStyle=a,this.text.forEach((d,h)=>{let c=o+l.x,f=o+l.y+(h+1)*s;r.fillText(d,c,f)})}},AC=class{constructor(e={}){let{boxColor:t,lineWidth:r,label:n,drawLabelOptions:a}=e;this.boxColor=t||"rgba(0, 0, 255, 1)",this.lineWidth=r||2,this.label=n;let s={anchorPosition:"BOTTOM_LEFT",backgroundColor:this.boxColor};this.drawLabelOptions=new Lx({...s,...a})}},FC=class{constructor(e,t={}){this.box=new sr(e),this.options=new AC(t)}draw(e){let t=Jo(e),{boxColor:r,lineWidth:n}=this.options,{x:a,y:s,width:i,height:o}=this.box;t.strokeStyle=r,t.lineWidth=n,t.strokeRect(a,s,i,o);let{label:u}=this.options;u&&new df([u],{x:a-n/2,y:s},this.options.drawLabelOptions).draw(e)}};function qle(e,t){(Array.isArray(t)?t:[t]).forEach(r=>{let n=r instanceof ua?r.score:Fh(r)?r.detection.score:void 0,a=r instanceof ua?r.box:Fh(r)?r.detection.box:new sr(r),s=n?`${Fx(n)}`:void 0;new FC(a,{label:s}).draw(e)})}function RC(e){let{Image:t,Video:r}=rn.getEnv();return e instanceof t&&e.complete||e instanceof r&&e.readyState>=3}function Kle(e){return new Promise((t,r)=>{(e instanceof rn.getEnv().Canvas||RC(e))&&t(null);function n(s){s.currentTarget&&(s.currentTarget.removeEventListener("load",a),s.currentTarget.removeEventListener("error",n),r(s))}function a(s){s.currentTarget&&(s.currentTarget.removeEventListener("load",a),s.currentTarget.removeEventListener("error",n),t(s))}e.addEventListener("load",a),e.addEventListener("error",n)})}function DC(e){let{Image:t,Video:r}=rn.getEnv();return e instanceof t?new vs(e.naturalWidth,e.naturalHeight):e instanceof r?new vs(e.videoWidth,e.videoHeight):new vs(e.width,e.height)}function Bm({width:e,height:t}){let{createCanvasElement:r}=rn.getEnv(),n=r();return n.width=e,n.height=t,n}function MC(e,t){let{ImageData:r}=rn.getEnv();if(!(e instanceof r)&&!RC(e))throw new Error("createCanvasFromMedia - media has not finished loading yet");let{width:n,height:a}=DC(e),s=Bm({width:n,height:a});return e instanceof r?Jo(s).putImageData(e,0,0):Jo(s).drawImage(e,0,0,n,a),s}function Wv(e){let{Image:t,Canvas:r,Video:n}=rn.getEnv();return e instanceof t||e instanceof r||e instanceof n}function Xle(e,t,r=!1){let{Image:n,Canvas:a}=rn.getEnv();if(!(e instanceof n||e instanceof a))throw new Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement");if(t<=0)return Bm({width:1,height:1});let s=DC(e),i=t/Math.max(s.height,s.width),o=i*s.width,u=i*s.height,p=Bm({width:t,height:t}),l=e instanceof a?e:MC(e),d=Math.abs(o-u)/2,h=r&&o<u?d:0,c=r&&u<o?d:0;return l.width>0&&l.height>0&&Jo(p).drawImage(l,h,c,o,u),p}var Rh=class{constructor(e,t=!1){if(this._imageTensors=[],this._canvases=[],this._treatAsBatchInput=!1,this._inputDimensions=[],this._inputSize=0,!Array.isArray(e))throw new Error(`NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have ${e}`);this._treatAsBatchInput=t,this._batchSize=e.length,e.forEach((r,n)=>{if(pf(r)){this._imageTensors[n]=r,this._inputDimensions[n]=r.shape;return}if(dp(r)){let s=r.shape[0];if(s!==1)throw new Error(`NetInput - tf.Tensor4D with batchSize ${s} passed, but not supported in input array`);this._imageTensors[n]=r,this._inputDimensions[n]=r.shape.slice(1);return}let a=r instanceof rn.getEnv().Canvas?r:MC(r);this._canvases[n]=a,this._inputDimensions[n]=[a.height,a.width,3]})}get imageTensors(){return this._imageTensors}get canvases(){return this._canvases}get isBatchInput(){return this.batchSize>1||this._treatAsBatchInput}get batchSize(){return this._batchSize}get inputDimensions(){return this._inputDimensions}get inputSize(){return this._inputSize}get reshapedInputDimensions(){return Zo(this.batchSize,0,1).map((e,t)=>this.getReshapedInputDimensions(t))}getInput(e){return this.canvases[e]||this.imageTensors[e]}getInputDimensions(e){return this._inputDimensions[e]}getInputHeight(e){return this._inputDimensions[e][0]}getInputWidth(e){return this._inputDimensions[e][1]}getReshapedInputDimensions(e){if(typeof this.inputSize!="number")throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");let t=this.getInputWidth(e),r=this.getInputHeight(e);return kC({width:t,height:r},this.inputSize)}toBatchTensor(e,t=!0){return this._inputSize=e,W(()=>{let r=Zo(this.batchSize,0,1).map(n=>{let a=this.getInput(n);if(a instanceof Ue){let s=dp(a)?a:Qt(a);return s=Wle(s,t),(s.shape[1]!==e||s.shape[2]!==e)&&(s=xn.resizeBilinear(s,[e,e],!1,!1)),s.as3D(e,e,3)}if(a instanceof rn.getEnv().Canvas)return Mc.fromPixels(Xle(a,e,t));throw new Error(`toBatchTensor - at batchIdx ${n}, expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have ${a}`)});return Ot(r.map(n=>se(n,"float32"))).as4D(this.batchSize,e,e,3)})}};async function $r(e){if(e instanceof Rh)return e;let t=Array.isArray(e)?e:[e];if(!t.length)throw new Error("toNetInput - empty array passed as input");let r=a=>Array.isArray(e)?` at input index ${a}:`:"",n=t.map(zx);return n.forEach((a,s)=>{if(!Wv(a)&&!pf(a)&&!dp(a))throw typeof t[s]=="string"?new Error(`toNetInput -${r(s)} string passed, but could not resolve HTMLElement for element id ${t[s]}`):new Error(`toNetInput -${r(s)} expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id`);if(dp(a)){let i=a.shape[0];if(i!==1)throw new Error(`toNetInput -${r(s)} tf.Tensor4D with batchSize ${i} passed, but not supported in input array`)}}),await Promise.all(n.map(a=>Wv(a)&&Kle(a))),new Rh(n,Array.isArray(e))}async function Zle(e,t){let{fetch:r}=rn.getEnv(),n=await r(e,t);if(!(n.status<400))throw new Error(`failed to fetch: (${n.status}) ${n.statusText}, from url: ${n.url}`);return n}async function Jle(e){return(await Zle(e)).json()}function OC(e,t){let r=`${t}-weights_manifest.json`;if(!e)return{modelBaseUri:"",manifestUri:r};if(e==="/")return{modelBaseUri:"/",manifestUri:`/${r}`};let n=e.startsWith("http://")?"http://":e.startsWith("https://")?"https://":"";e=e.replace(n,"");let a=e.split("/").filter(o=>o),s=e.endsWith(".json")?a[a.length-1]:r,i=n+(e.endsWith(".json")?a.slice(0,a.length-1):a).join("/");return i=e.startsWith("/")?`/${i}`:i,{modelBaseUri:i,manifestUri:i==="/"?`/${s}`:`${i}/${s}`}}async function Yle(e,t){let{manifestUri:r,modelBaseUri:n}=OC(e,t),a=await Jle(r);return rr.loadWeights(a,n)}var rs=class{constructor(e){this._params=void 0,this._paramMappings=[],this._name=e}get params(){return this._params}get paramMappings(){return this._paramMappings}get isLoaded(){return!!this.params}getParamFromPath(e){let{obj:t,objProp:r}=this.traversePropertyPath(e);return t[r]}reassignParamFromPath(e,t){let{obj:r,objProp:n}=this.traversePropertyPath(e);r[n].dispose(),r[n]=t}getParamList(){return this._paramMappings.map(({paramPath:e})=>({path:e,tensor:this.getParamFromPath(e)}))}getTrainableParams(){return this.getParamList().filter(e=>e.tensor instanceof Ts)}getFrozenParams(){return this.getParamList().filter(e=>!(e.tensor instanceof Ts))}variable(){this.getFrozenParams().forEach(({path:e,tensor:t})=>{this.reassignParamFromPath(e,t.variable())})}freeze(){this.getTrainableParams().forEach(({path:e,tensor:t})=>{let r=hr(t.dataSync());t.dispose(),this.reassignParamFromPath(e,r)})}dispose(e=!0){this.getParamList().forEach(t=>{if(e&&t.tensor.isDisposed)throw new Error(`param tensor has already been disposed for path ${t.path}`);t.tensor.dispose()}),this._params=void 0}serializeParams(){return new Float32Array(this.getParamList().map(({tensor:e})=>Array.from(e.dataSync())).reduce((e,t)=>e.concat(t)))}async load(e){if(e instanceof Float32Array){this.extractWeights(e);return}await this.loadFromUri(e)}async loadFromUri(e){if(e&&typeof e!="string")throw new Error(`${this._name}.loadFromUri - expected model uri`);let t=await Yle(e,this.getDefaultModelName());this.loadFromWeightMap(t)}async loadFromDisk(e){if(e&&typeof e!="string")throw new Error(`${this._name}.loadFromDisk - expected model file path`);let{readFile:t}=rn.getEnv(),{manifestUri:r,modelBaseUri:n}=OC(e,this.getDefaultModelName()),a=u=>Promise.all(u.map(p=>t(p).then(l=>l.buffer))),s=rr.weightsLoaderFactory(a),i=JSON.parse((await t(r)).toString()),o=await s(i,n);this.loadFromWeightMap(o)}loadFromWeightMap(e){let{paramMappings:t,params:r}=this.extractParamsFromWeightMap(e);this._paramMappings=t,this._params=r}extractWeights(e){let{paramMappings:t,params:r}=this.extractParams(e);this._paramMappings=t,this._params=r}traversePropertyPath(e){if(!this.params)throw new Error("traversePropertyPath - model has no loaded params");let t=e.split("/").reduce((a,s)=>{if(!a.nextObj.hasOwnProperty(s))throw new Error(`traversePropertyPath - object does not have property ${s}, for path ${e}`);return{obj:a.nextObj,objProp:s,nextObj:a.nextObj[s]}},{nextObj:this.params}),{obj:r,objProp:n}=t;if(!r||!n||!(r[n]instanceof Ue))throw new Error(`traversePropertyPath - parameter is not a tensor, for path ${e}`);return{obj:r,objProp:n}}};function Yr(e,t,r){return W(()=>{let n=uu(e,t.depthwise_filter,t.pointwise_filter,r,"same");return n=J(n,t.bias),n})}function Of(e,t,r=!1){return W(()=>{let n=et(r?J(cr(e,t.conv0.filters,[2,2],"same"),t.conv0.bias):Yr(e,t.conv0,[2,2])),a=Yr(n,t.conv1,[1,1]),s=et(J(n,a)),i=Yr(s,t.conv2,[1,1]);return et(J(n,J(a,i)))})}function Gd(e,t,r=!1,n=!0){return W(()=>{let a=et(r?J(cr(e,t.conv0.filters,n?[2,2]:[1,1],"same"),t.conv0.bias):Yr(e,t.conv0,n?[2,2]:[1,1])),s=Yr(a,t.conv1,[1,1]),i=et(J(a,s)),o=Yr(i,t.conv2,[1,1]),u=et(J(a,J(s,o))),p=Yr(u,t.conv3,[1,1]);return et(J(a,J(s,J(o,p))))})}function ju(e,t,r="same",n=!1){return W(()=>{let a=J(cr(e,t.filters,[1,1],r),t.bias);return n?et(a):a})}function ns(e,t){Object.keys(e).forEach(r=>{t.some(n=>n.originalPath===r)||e[r].dispose()})}function Px(e,t){return(r,n,a,s)=>{let i=Ma(e(r*n*a*a),[a,a,r,n]),o=Qe(e(n));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}}function zC(e,t){return(r,n,a)=>{let s=Pn(e(r*n),[r,n]),i=Qe(e(n));return t.push({paramPath:`${a}/weights`},{paramPath:`${a}/bias`}),{weights:s,bias:i}}}var LC=class{constructor(e,t,r){this.depthwise_filter=e,this.pointwise_filter=t,this.bias=r}};function Bx(e,t){return(r,n,a)=>{let s=Ma(e(9*r),[3,3,r,1]),i=Ma(e(r*n),[1,1,r,n]),o=Qe(e(n));return t.push({paramPath:`${a}/depthwise_filter`},{paramPath:`${a}/pointwise_filter`},{paramPath:`${a}/bias`}),new LC(s,i,o)}}function Wx(e){return t=>{let r=e(`${t}/depthwise_filter`,4),n=e(`${t}/pointwise_filter`,4),a=e(`${t}/bias`,1);return new LC(r,n,a)}}function mo(e,t){return(r,n,a)=>{let s=e[r];if(!ku(s,n))throw new Error(`expected weightMap[${r}] to be a Tensor${n}D, instead have ${s}`);return t.push({originalPath:r,paramPath:a||r}),s}}function as(e){let t=e;function r(a){let s=t.slice(0,a);return t=t.slice(a),s}function n(){return t}return{extractWeights:r,getRemainingWeights:n}}function PC(e,t){let r=Px(e,t),n=Bx(e,t);function a(i,o,u,p=!1){let l=p?r(i,o,3,`${u}/conv0`):n(i,o,`${u}/conv0`),d=n(o,o,`${u}/conv1`),h=n(o,o,`${u}/conv2`);return{conv0:l,conv1:d,conv2:h}}function s(i,o,u,p=!1){let{conv0:l,conv1:d,conv2:h}=a(i,o,u,p),c=n(o,o,`${u}/conv3`);return{conv0:l,conv1:d,conv2:h,conv3:c}}return{extractDenseBlock3Params:a,extractDenseBlock4Params:s}}function Qle(e){let t=[],{extractWeights:r,getRemainingWeights:n}=as(e),{extractDenseBlock4Params:a}=PC(r,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2"),u=a(128,256,"dense3");if(n().length!==0)throw new Error(`weights remaing after extract: ${n().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o,dense3:u}}}function BC(e){return t=>{let r=e(`${t}/filters`,4),n=e(`${t}/bias`,1);return{filters:r,bias:n}}}function WC(e,t){let r=mo(e,t),n=BC(r),a=Wx(r);function s(o,u=!1){let p=u?n(`${o}/conv0`):a(`${o}/conv0`),l=a(`${o}/conv1`),d=a(`${o}/conv2`);return{conv0:p,conv1:l,conv2:d}}function i(o,u=!1){let p=u?n(`${o}/conv0`):a(`${o}/conv0`),l=a(`${o}/conv1`),d=a(`${o}/conv2`),h=a(`${o}/conv3`);return{conv0:p,conv1:l,conv2:d,conv3:h}}return{extractDenseBlock3Params:s,extractDenseBlock4Params:i}}function eue(e){let t=[],{extractDenseBlock4Params:r}=WC(e,t),n={dense0:r("dense0",!0),dense1:r("dense1"),dense2:r("dense2"),dense3:r("dense3")};return ns(e,t),{params:n,paramMappings:t}}var VC=class extends rs{constructor(){super("FaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceFeatureExtractor - load model before inference");return W(()=>{let r=se(e.toBatchTensor(112,!0),"float32"),n=fd(r,[122.782,117.001,104.298]).div(255),a=Gd(n,t.dense0,!0);return a=Gd(a,t.dense1),a=Gd(a,t.dense2),a=Gd(a,t.dense3),a=pa(a,[7,7],[2,2],"valid"),a})}async forward(e){return this.forwardInput(await $r(e))}getDefaultModelName(){return"face_feature_extractor_model"}extractParamsFromWeightMap(e){return eue(e)}extractParams(e){return Qle(e)}};function Wm(e,t){return W(()=>J(Me(e,t.weights),t.bias))}function tue(e,t,r){let n=[],{extractWeights:a,getRemainingWeights:s}=as(e),i=zC(a,n)(t,r,"fc");if(s().length!==0)throw new Error(`weights remaing after extract: ${s().length}`);return{paramMappings:n,params:{fc:i}}}function rue(e){let t=[],r=mo(e,t);function n(s){let i=r(`${s}/weights`,2),o=r(`${s}/bias`,1);return{weights:i,bias:o}}let a={fc:n("fc")};return ns(e,t),{params:a,paramMappings:t}}function UC(e){let t={},r={};return Object.keys(e).forEach(n=>{let a=n.startsWith("fc")?r:t;a[n]=e[n]}),{featureExtractorMap:t,classifierMap:r}}var GC=class extends rs{constructor(e,t){super(e),this._faceFeatureExtractor=t}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return W(()=>{let r=e instanceof Rh?this.faceFeatureExtractor.forwardInput(e):e;return Wm(r.as2D(r.shape[0],-1),t.fc)})}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:r}=this.extractClassifierParams(e);this._params=t,this._paramMappings=r}extractClassifierParams(e){return tue(e,this.getClassifierChannelsIn(),this.getClassifierChannelsOut())}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:r}=UC(e);return this.faceFeatureExtractor.loadFromWeightMap(t),rue(r)}extractParams(e){let t=this.getClassifierChannelsIn(),r=this.getClassifierChannelsOut(),n=r*t+r,a=e.slice(0,e.length-n),s=e.slice(e.length-n);return this.faceFeatureExtractor.extractWeights(a),this.extractClassifierParams(s)}},Vv=["neutral","happy","sad","angry","fearful","disgusted","surprised"],Vx=class{constructor(e){if(this.neutral=0,this.happy=0,this.sad=0,this.angry=0,this.fearful=0,this.disgusted=0,this.surprised=0,e.length!==7)throw new Error(`FaceExpressions.constructor - expected probabilities.length to be 7, have: ${e.length}`);Vv.forEach((t,r)=>{this[t]=e[r]})}asSortedArray(){return Vv.map(e=>({expression:e,probability:this[e]})).sort((e,t)=>t.probability-e.probability)}},nue=class extends GC{constructor(e=new VC){super("FaceExpressionNet",e)}forwardInput(e){return W(()=>Za(this.runNet(e)))}async forward(e){return this.forwardInput(await $r(e))}async predictExpressions(e){let t=await $r(e),r=await this.forwardInput(t),n=await Promise.all(Nt(r).map(async s=>{let i=s.dataSync();return s.dispose(),i}));r.dispose();let a=n.map(s=>new Vx(s));return t.isBatchInput?a:a[0]}getDefaultModelName(){return"face_expression_model"}getClassifierChannelsIn(){return 256}getClassifierChannelsOut(){return 7}};function aue(e){return e.expressions instanceof Vx}function sue(e,t,r=.1,n){(Array.isArray(t)?t:[t]).forEach(a=>{let s=a instanceof Vx?a:aue(a)?a.expressions:void 0;if(!s)throw new Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof");let i=s.asSortedArray().filter(u=>u.probability>r),o=Fh(a)?a.detection.box.bottomLeft:n||new Ke(0,0);new df(i.map(u=>`${u.expression} (${Fx(u.probability)})`),o).draw(e)})}function iue(e){return Fh(e)&&e.landmarks instanceof Ah&&e.unshiftedLandmarks instanceof Ah&&e.alignedRect instanceof ua}var HC=class{constructor(e={}){let{drawLines:t=!0,drawPoints:r=!0,lineWidth:n,lineColor:a,pointSize:s,pointColor:i}=e;this.drawLines=t,this.drawPoints=r,this.lineWidth=n||1,this.pointSize=s||2,this.lineColor=a||"rgba(0, 255, 255, 1)",this.pointColor=i||"rgba(255, 0, 255, 1)"}},jC=class{constructor(e,t={}){this.faceLandmarks=e,this.options=new HC(t)}draw(e){let t=Jo(e),{drawLines:r,drawPoints:n,lineWidth:a,lineColor:s,pointSize:i,pointColor:o}=this.options;if(r&&this.faceLandmarks instanceof NC&&(t.strokeStyle=s,t.lineWidth=a,va(t,this.faceLandmarks.getJawOutline()),va(t,this.faceLandmarks.getLeftEyeBrow()),va(t,this.faceLandmarks.getRightEyeBrow()),va(t,this.faceLandmarks.getNose()),va(t,this.faceLandmarks.getLeftEye(),!0),va(t,this.faceLandmarks.getRightEye(),!0),va(t,this.faceLandmarks.getMouth(),!0)),n){t.strokeStyle=o,t.fillStyle=o;let u=p=>{t.beginPath(),t.arc(p.x,p.y,i,0,2*Math.PI),t.fill()};this.faceLandmarks.positions.forEach(u)}}};function oue(e,t){(Array.isArray(t)?t:[t]).forEach(r=>{let n=r instanceof Ah?r:iue(r)?r.landmarks:void 0;if(!n)throw new Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof");new jC(n).draw(e)})}function lue(e,t){let r=Px(e,t),n=Bx(e,t);function a(i,o,u){let p=n(i,o,`${u}/separable_conv0`),l=n(o,o,`${u}/separable_conv1`),d=r(i,o,1,`${u}/expansion_conv`);return{separable_conv0:p,separable_conv1:l,expansion_conv:d}}function s(i,o){let u=n(i,i,`${o}/separable_conv0`),p=n(i,i,`${o}/separable_conv1`),l=n(i,i,`${o}/separable_conv2`);return{separable_conv0:u,separable_conv1:p,separable_conv2:l}}return{extractConvParams:r,extractSeparableConvParams:n,extractReductionBlockParams:a,extractMainBlockParams:s}}function uue(e,t){let r=[],{extractWeights:n,getRemainingWeights:a}=as(e),{extractConvParams:s,extractSeparableConvParams:i,extractReductionBlockParams:o,extractMainBlockParams:u}=lue(n,r),p=s(3,32,3,"entry_flow/conv_in"),l=o(32,64,"entry_flow/reduction_block_0"),d=o(64,128,"entry_flow/reduction_block_1"),h={conv_in:p,reduction_block_0:l,reduction_block_1:d},c={};Zo(t,0,1).forEach(y=>{c[`main_block_${y}`]=u(128,`middle_flow/main_block_${y}`)});let f=o(128,256,"exit_flow/reduction_block"),m=i(256,512,"exit_flow/separable_conv"),g={reduction_block:f,separable_conv:m};if(a().length!==0)throw new Error(`weights remaing after extract: ${a().length}`);return{paramMappings:r,params:{entry_flow:h,middle_flow:c,exit_flow:g}}}function pue(e,t){let r=mo(e,t),n=BC(r),a=Wx(r);function s(o){let u=a(`${o}/separable_conv0`),p=a(`${o}/separable_conv1`),l=n(`${o}/expansion_conv`);return{separable_conv0:u,separable_conv1:p,expansion_conv:l}}function i(o){let u=a(`${o}/separable_conv0`),p=a(`${o}/separable_conv1`),l=a(`${o}/separable_conv2`);return{separable_conv0:u,separable_conv1:p,separable_conv2:l}}return{extractConvParams:n,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}}function due(e,t){let r=[],{extractConvParams:n,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}=pue(e,r),o=n("entry_flow/conv_in"),u=s("entry_flow/reduction_block_0"),p=s("entry_flow/reduction_block_1"),l={conv_in:o,reduction_block_0:u,reduction_block_1:p},d={};Zo(t,0,1).forEach(m=>{d[`main_block_${m}`]=i(`middle_flow/main_block_${m}`)});let h=s("exit_flow/reduction_block"),c=a("exit_flow/separable_conv"),f={reduction_block:h,separable_conv:c};return ns(e,r),{params:{entry_flow:l,middle_flow:d,exit_flow:f},paramMappings:r}}function qC(e,t,r){return J(cr(e,t.filters,r,"same"),t.bias)}function zf(e,t,r=!0){let n=r?et(e):e;return n=Yr(n,t.separable_conv0,[1,1]),n=Yr(et(n),t.separable_conv1,[1,1]),n=Wt(n,[3,3],[2,2],"same"),n=J(n,qC(e,t.expansion_conv,[2,2])),n}function hue(e,t){let r=Yr(et(e),t.separable_conv0,[1,1]);return r=Yr(et(r),t.separable_conv1,[1,1]),r=Yr(et(r),t.separable_conv2,[1,1]),r=J(r,e),r}var cue=class extends rs{constructor(e){super("TinyXception"),this._numMainBlocks=e}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyXception - load model before inference");return W(()=>{let r=se(e.toBatchTensor(112,!0),"float32"),n=fd(r,[122.782,117.001,104.298]).div(255),a=et(qC(n,t.entry_flow.conv_in,[2,2]));return a=zf(a,t.entry_flow.reduction_block_0,!1),a=zf(a,t.entry_flow.reduction_block_1),Zo(this._numMainBlocks,0,1).forEach(s=>{a=hue(a,t.middle_flow[`main_block_${s}`])}),a=zf(a,t.exit_flow.reduction_block),a=et(Yr(a,t.exit_flow.separable_conv,[1,1])),a})}async forward(e){return this.forwardInput(await $r(e))}getDefaultModelName(){return"tiny_xception_model"}extractParamsFromWeightMap(e){return due(e,this._numMainBlocks)}extractParams(e){return uue(e,this._numMainBlocks)}};function fue(e){let t=[],{extractWeights:r,getRemainingWeights:n}=as(e),a=zC(r,t),s=a(512,1,"fc/age"),i=a(512,2,"fc/gender");if(n().length!==0)throw new Error(`weights remaing after extract: ${n().length}`);return{paramMappings:t,params:{fc:{age:s,gender:i}}}}function mue(e){let t=[],r=mo(e,t);function n(s){let i=r(`${s}/weights`,2),o=r(`${s}/bias`,1);return{weights:i,bias:o}}let a={fc:{age:n("fc/age"),gender:n("fc/gender")}};return ns(e,t),{params:a,paramMappings:t}}var gue=(e=>(e.FEMALE="female",e.MALE="male",e))(gue||{}),yue=class extends rs{constructor(e=new cue(2)){super("AgeGenderNet"),this._faceFeatureExtractor=e}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return W(()=>{let r=e instanceof Rh?this.faceFeatureExtractor.forwardInput(e):e,n=pa(r,[7,7],[2,2],"valid").as2D(r.shape[0],-1),a=Wm(n,t.fc.age).as1D(),s=Wm(n,t.fc.gender);return{age:a,gender:s}})}forwardInput(e){return W(()=>{let{age:t,gender:r}=this.runNet(e);return{age:t,gender:Za(r)}})}async forward(e){return this.forwardInput(await $r(e))}async predictAgeAndGender(e){let t=await $r(e),r=await this.forwardInput(t),n=Nt(r.age),a=Nt(r.gender),s=n.map((o,u)=>({ageTensor:o,genderTensor:a[u]})),i=await Promise.all(s.map(async({ageTensor:o,genderTensor:u})=>{let p=o.dataSync()[0],l=u.dataSync()[0],d=l>.5,h=d?"male":"female",c=d?l:1-l;return o.dispose(),u.dispose(),{age:p,gender:h,genderProbability:c}}));return r.age.dispose(),r.gender.dispose(),t.isBatchInput?i:i[0]}getDefaultModelName(){return"age_gender_model"}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:r}=this.extractClassifierParams(e);this._params=t,this._paramMappings=r}extractClassifierParams(e){return fue(e)}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:r}=UC(e);return this.faceFeatureExtractor.loadFromWeightMap(t),mue(r)}extractParams(e){let t=e.slice(0,e.length-1539),r=e.slice(e.length-1539);return this.faceFeatureExtractor.extractWeights(t),this.extractClassifierParams(r)}},KC=class extends GC{postProcess(e,t,r){let n=r.map(({width:s,height:i})=>{let o=t/Math.max(i,s);return{width:s*o,height:i*o}}),a=n.length;return W(()=>{let s=(p,l)=>Ot([Br([68],p,"float32"),Br([68],l,"float32")],1).as2D(1,136).as1D(),i=(p,l)=>{let{width:d,height:h}=n[p];return l(d,h)?Math.abs(d-h)/2:0},o=p=>i(p,(l,d)=>l<d),u=p=>i(p,(l,d)=>d<l);return e.mul(Br([a,136],t,"float32")).sub(Ot(Array.from(Array(a),(p,l)=>s(o(l),u(l))))).div(Ot(Array.from(Array(a),(p,l)=>s(n[l].width,n[l].height))))})}forwardInput(e){return W(()=>{let t=this.runNet(e);return this.postProcess(t,e.inputSize,e.inputDimensions.map(([r,n])=>({height:r,width:n})))})}async forward(e){return this.forwardInput(await $r(e))}async detectLandmarks(e){let t=await $r(e),r=W(()=>Nt(this.forwardInput(t))),n=await Promise.all(r.map(async(a,s)=>{let i=Array.from(a.dataSync()),o=i.filter((p,l)=>zm(l)),u=i.filter((p,l)=>!zm(l));return new NC(Array(68).fill(0).map((p,l)=>new Ke(o[l],u[l])),{height:t.getInputHeight(s),width:t.getInputWidth(s)})}));return r.forEach(a=>a.dispose()),t.isBatchInput?n:n[0]}getClassifierChannelsOut(){return 136}},bue=class extends KC{constructor(e=new VC){super("FaceLandmark68Net",e)}getDefaultModelName(){return"face_landmark_68_model"}getClassifierChannelsIn(){return 256}};function xue(e){let t=[],{extractDenseBlock3Params:r}=WC(e,t),n={dense0:r("dense0",!0),dense1:r("dense1"),dense2:r("dense2")};return ns(e,t),{params:n,paramMappings:t}}function wue(e){let t=[],{extractWeights:r,getRemainingWeights:n}=as(e),{extractDenseBlock3Params:a}=PC(r,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2");if(n().length!==0)throw new Error(`weights remaing after extract: ${n().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o}}}var vue=class extends rs{constructor(){super("TinyFaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyFaceFeatureExtractor - load model before inference");return W(()=>{let r=se(e.toBatchTensor(112,!0),"float32"),n=fd(r,[122.782,117.001,104.298]).div(255),a=Of(n,t.dense0,!0);return a=Of(a,t.dense1),a=Of(a,t.dense2),a=pa(a,[14,14],[2,2],"valid"),a})}async forward(e){return this.forwardInput(await $r(e))}getDefaultModelName(){return"face_feature_extractor_tiny_model"}extractParamsFromWeightMap(e){return xue(e)}extractParams(e){return wue(e)}},kue=class extends KC{constructor(e=new vue){super("FaceLandmark68TinyNet",e)}getDefaultModelName(){return"face_landmark_68_tiny_model"}getClassifierChannelsIn(){return 128}};function Iue(e,t){return J(L(e,t.weights),t.biases)}function Ux(e,t,r,n,a="same"){let{filters:s,bias:i}=t.conv,o=cr(e,s,r,a);return o=J(o,i),o=Iue(o,t.scale),n?et(o):o}function Sue(e,t){return Ux(e,t,[1,1],!0)}function XC(e,t){return Ux(e,t,[1,1],!1)}function ZC(e,t){return Ux(e,t,[2,2],!0,"valid")}function Nue(e,t){function r(o,u,p){let l=e(o),d=l.length/(u*p*p);if(vC(d))throw new Error(`depth has to be an integer: ${d}, weights.length: ${l.length}, numFilters: ${u}, filterSize: ${p}`);return W(()=>Oe(Ma(l,[u,d,p,p]),[2,3,1,0]))}function n(o,u,p,l){let d=r(o,u,p),h=Qe(e(u));return t.push({paramPath:`${l}/filters`},{paramPath:`${l}/bias`}),{filters:d,bias:h}}function a(o,u){let p=Qe(e(o)),l=Qe(e(o));return t.push({paramPath:`${u}/weights`},{paramPath:`${u}/biases`}),{weights:p,biases:l}}function s(o,u,p,l){let d=n(o,u,p,`${l}/conv`),h=a(u,`${l}/scale`);return{conv:d,scale:h}}function i(o,u,p,l,d=!1){let h=s((d?.5:1)*o,u,p,`${l}/conv1`),c=s(o,u,p,`${l}/conv2`);return{conv1:h,conv2:c}}return{extractConvLayerParams:s,extractResidualLayerParams:i}}function Tue(e){let{extractWeights:t,getRemainingWeights:r}=as(e),n=[],{extractConvLayerParams:a,extractResidualLayerParams:s}=Nue(t,n),i=a(4704,32,7,"conv32_down"),o=s(9216,32,3,"conv32_1"),u=s(9216,32,3,"conv32_2"),p=s(9216,32,3,"conv32_3"),l=s(36864,64,3,"conv64_down",!0),d=s(36864,64,3,"conv64_1"),h=s(36864,64,3,"conv64_2"),c=s(36864,64,3,"conv64_3"),f=s(147456,128,3,"conv128_down",!0),m=s(147456,128,3,"conv128_1"),g=s(147456,128,3,"conv128_2"),y=s(589824,256,3,"conv256_down",!0),b=s(589824,256,3,"conv256_1"),x=s(589824,256,3,"conv256_2"),v=s(589824,256,3,"conv256_down_out"),I=W(()=>Oe(Pn(t(256*128),[128,256]),[1,0]));if(n.push({paramPath:"fc"}),r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{params:{conv32_down:i,conv32_1:o,conv32_2:u,conv32_3:p,conv64_down:l,conv64_1:d,conv64_2:h,conv64_3:c,conv128_down:f,conv128_1:m,conv128_2:g,conv256_down:y,conv256_1:b,conv256_2:x,conv256_down_out:v,fc:I},paramMappings:n}}function Cue(e,t){let r=mo(e,t);function n(i){let o=r(`${i}/scale/weights`,1),u=r(`${i}/scale/biases`,1);return{weights:o,biases:u}}function a(i){let o=r(`${i}/conv/filters`,4),u=r(`${i}/conv/bias`,1),p=n(i);return{conv:{filters:o,bias:u},scale:p}}function s(i){return{conv1:a(`${i}/conv1`),conv2:a(`${i}/conv2`)}}return{extractConvLayerParams:a,extractResidualLayerParams:s}}function _ue(e){let t=[],{extractConvLayerParams:r,extractResidualLayerParams:n}=Cue(e,t),a=r("conv32_down"),s=n("conv32_1"),i=n("conv32_2"),o=n("conv32_3"),u=n("conv64_down"),p=n("conv64_1"),l=n("conv64_2"),d=n("conv64_3"),h=n("conv128_down"),c=n("conv128_1"),f=n("conv128_2"),m=n("conv256_down"),g=n("conv256_1"),y=n("conv256_2"),b=n("conv256_down_out"),{fc:x}=e;if(t.push({originalPath:"fc",paramPath:"fc"}),!wC(x))throw new Error(`expected weightMap[fc] to be a Tensor2D, instead have ${x}`);let v={conv32_down:a,conv32_1:s,conv32_2:i,conv32_3:o,conv64_down:u,conv64_1:p,conv64_2:l,conv64_3:d,conv128_down:h,conv128_1:c,conv128_2:f,conv256_down:m,conv256_1:g,conv256_2:y,conv256_down_out:b,fc:x};return ns(e,t),{params:v,paramMappings:t}}function An(e,t){let r=Sue(e,t.conv1);return r=XC(r,t.conv2),r=J(r,e),r=et(r),r}function Hd(e,t){let r=ZC(e,t.conv1);r=XC(r,t.conv2);let n=pa(e,2,2,"valid"),a=wt(n.shape),s=n.shape[3]!==r.shape[3];if(n.shape[1]!==r.shape[1]||n.shape[2]!==r.shape[2]){let i=[...r.shape];i[1]=1;let o=wt(i);r=at([r,o],1);let u=[...r.shape];u[2]=1;let p=wt(u);r=at([r,p],2)}return n=s?at([n,a],3):n,r=J(n,r),r=et(r),r}var Eue=class extends rs{constructor(){super("FaceRecognitionNet")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceRecognitionNet - load model before inference");return W(()=>{let r=se(e.toBatchTensor(150,!0),"float32"),n=fd(r,[122.782,117.001,104.298]).div(255),a=ZC(n,t.conv32_down);a=Wt(a,3,2,"valid"),a=An(a,t.conv32_1),a=An(a,t.conv32_2),a=An(a,t.conv32_3),a=Hd(a,t.conv64_down),a=An(a,t.conv64_1),a=An(a,t.conv64_2),a=An(a,t.conv64_3),a=Hd(a,t.conv128_down),a=An(a,t.conv128_1),a=An(a,t.conv128_2),a=Hd(a,t.conv256_down),a=An(a,t.conv256_1),a=An(a,t.conv256_2),a=Hd(a,t.conv256_down_out);let s=a.mean([1,2]);return Me(s,t.fc)})}async forward(e){return this.forwardInput(await $r(e))}async computeFaceDescriptor(e){var t;if((t=e==null?void 0:e.shape)!=null&&t.some(s=>s<=0))return new Float32Array(128);let r=await $r(e),n=W(()=>Nt(this.forwardInput(r))),a=await Promise.all(n.map(s=>s.data()));return n.forEach(s=>s.dispose()),r.isBatchInput?a:a[0]}getDefaultModelName(){return"face_recognition_model"}extractParamsFromWeightMap(e){return _ue(e)}extractParams(e){return Tue(e)}};function $ue(e,t){function r(u,p){let l=Ma(e(9*u),[3,3,u,1]),d=Qe(e(u)),h=Qe(e(u)),c=Qe(e(u)),f=Qe(e(u));return t.push({paramPath:`${p}/filters`},{paramPath:`${p}/batch_norm_scale`},{paramPath:`${p}/batch_norm_offset`},{paramPath:`${p}/batch_norm_mean`},{paramPath:`${p}/batch_norm_variance`}),{filters:l,batch_norm_scale:d,batch_norm_offset:h,batch_norm_mean:c,batch_norm_variance:f}}function n(u,p,l,d,h){let c=Ma(e(u*p*l*l),[l,l,u,p]),f=Qe(e(p));return t.push({paramPath:`${d}/filters`},{paramPath:`${d}/${h?"batch_norm_offset":"bias"}`}),{filters:c,bias:f}}function a(u,p,l,d){let{filters:h,bias:c}=n(u,p,l,d,!0);return{filters:h,batch_norm_offset:c}}function s(u,p,l){let d=r(u,`${l}/depthwise_conv`),h=a(u,p,1,`${l}/pointwise_conv`);return{depthwise_conv:d,pointwise_conv:h}}function i(){let u=a(3,32,3,"mobilenetv1/conv_0"),p=s(32,64,"mobilenetv1/conv_1"),l=s(64,128,"mobilenetv1/conv_2"),d=s(128,128,"mobilenetv1/conv_3"),h=s(128,256,"mobilenetv1/conv_4"),c=s(256,256,"mobilenetv1/conv_5"),f=s(256,512,"mobilenetv1/conv_6"),m=s(512,512,"mobilenetv1/conv_7"),g=s(512,512,"mobilenetv1/conv_8"),y=s(512,512,"mobilenetv1/conv_9"),b=s(512,512,"mobilenetv1/conv_10"),x=s(512,512,"mobilenetv1/conv_11"),v=s(512,1024,"mobilenetv1/conv_12"),I=s(1024,1024,"mobilenetv1/conv_13");return{conv_0:u,conv_1:p,conv_2:l,conv_3:d,conv_4:h,conv_5:c,conv_6:f,conv_7:m,conv_8:g,conv_9:y,conv_10:b,conv_11:x,conv_12:v,conv_13:I}}function o(){let u=a(1024,256,1,"prediction_layer/conv_0"),p=a(256,512,3,"prediction_layer/conv_1"),l=a(512,128,1,"prediction_layer/conv_2"),d=a(128,256,3,"prediction_layer/conv_3"),h=a(256,128,1,"prediction_layer/conv_4"),c=a(128,256,3,"prediction_layer/conv_5"),f=a(256,64,1,"prediction_layer/conv_6"),m=a(64,128,3,"prediction_layer/conv_7"),g=n(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),y=n(512,9,1,"prediction_layer/box_predictor_0/class_predictor"),b=n(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),x=n(1024,18,1,"prediction_layer/box_predictor_1/class_predictor"),v=n(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),I=n(512,18,1,"prediction_layer/box_predictor_2/class_predictor"),T=n(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),_=n(256,18,1,"prediction_layer/box_predictor_3/class_predictor"),E=n(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),A=n(256,18,1,"prediction_layer/box_predictor_4/class_predictor"),R=n(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),F=n(128,18,1,"prediction_layer/box_predictor_5/class_predictor");return{conv_0:u,conv_1:p,conv_2:l,conv_3:d,conv_4:h,conv_5:c,conv_6:f,conv_7:m,box_predictor_0:{box_encoding_predictor:g,class_predictor:y},box_predictor_1:{box_encoding_predictor:b,class_predictor:x},box_predictor_2:{box_encoding_predictor:v,class_predictor:I},box_predictor_3:{box_encoding_predictor:T,class_predictor:_},box_predictor_4:{box_encoding_predictor:E,class_predictor:A},box_predictor_5:{box_encoding_predictor:R,class_predictor:F}}}return{extractMobilenetV1Params:i,extractPredictionLayerParams:o}}function Aue(e){let t=[],{extractWeights:r,getRemainingWeights:n}=as(e),{extractMobilenetV1Params:a,extractPredictionLayerParams:s}=$ue(r,t),i=a(),o=s(),u={extra_dim:Sc(r(5118*4),[1,5118,4])};if(t.push({paramPath:"output_layer/extra_dim"}),n().length!==0)throw new Error(`weights remaing after extract: ${n().length}`);return{params:{mobilenetv1:i,prediction_layer:o,output_layer:u},paramMappings:t}}function Fue(e,t){let r=mo(e,t);function n(p,l,d){let h=r(`${p}/Conv2d_${l}_pointwise/weights`,4,`${d}/filters`),c=r(`${p}/Conv2d_${l}_pointwise/convolution_bn_offset`,1,`${d}/batch_norm_offset`);return{filters:h,batch_norm_offset:c}}function a(p){let l=`mobilenetv1/conv_${p}`,d=`MobilenetV1/Conv2d_${p}_depthwise`,h=`${l}/depthwise_conv`,c=`${l}/pointwise_conv`,f=r(`${d}/depthwise_weights`,4,`${h}/filters`),m=r(`${d}/BatchNorm/gamma`,1,`${h}/batch_norm_scale`),g=r(`${d}/BatchNorm/beta`,1,`${h}/batch_norm_offset`),y=r(`${d}/BatchNorm/moving_mean`,1,`${h}/batch_norm_mean`),b=r(`${d}/BatchNorm/moving_variance`,1,`${h}/batch_norm_variance`);return{depthwise_conv:{filters:f,batch_norm_scale:m,batch_norm_offset:g,batch_norm_mean:y,batch_norm_variance:b},pointwise_conv:n("MobilenetV1",p,c)}}function s(){return{conv_0:n("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:a(1),conv_2:a(2),conv_3:a(3),conv_4:a(4),conv_5:a(5),conv_6:a(6),conv_7:a(7),conv_8:a(8),conv_9:a(9),conv_10:a(10),conv_11:a(11),conv_12:a(12),conv_13:a(13)}}function i(p,l){let d=r(`${p}/weights`,4,`${l}/filters`),h=r(`${p}/biases`,1,`${l}/bias`);return{filters:d,bias:h}}function o(p){let l=i(`Prediction/BoxPredictor_${p}/BoxEncodingPredictor`,`prediction_layer/box_predictor_${p}/box_encoding_predictor`),d=i(`Prediction/BoxPredictor_${p}/ClassPredictor`,`prediction_layer/box_predictor_${p}/class_predictor`);return{box_encoding_predictor:l,class_predictor:d}}function u(){return{conv_0:n("Prediction",0,"prediction_layer/conv_0"),conv_1:n("Prediction",1,"prediction_layer/conv_1"),conv_2:n("Prediction",2,"prediction_layer/conv_2"),conv_3:n("Prediction",3,"prediction_layer/conv_3"),conv_4:n("Prediction",4,"prediction_layer/conv_4"),conv_5:n("Prediction",5,"prediction_layer/conv_5"),conv_6:n("Prediction",6,"prediction_layer/conv_6"),conv_7:n("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:o(0),box_predictor_1:o(1),box_predictor_2:o(2),box_predictor_3:o(3),box_predictor_4:o(4),box_predictor_5:o(5)}}return{extractMobilenetV1Params:s,extractPredictionLayerParams:u}}function Rue(e){let t=[],{extractMobilenetV1Params:r,extractPredictionLayerParams:n}=Fue(e,t),a=e["Output/extra_dim"];if(t.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!pf(a))throw new Error(`expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have ${a}`);let s={mobilenetv1:r(),prediction_layer:n(),output_layer:{extra_dim:a}};return ns(e,t),{params:s,paramMappings:t}}function Rn(e,t,r){return W(()=>{let n=cr(e,t.filters,r,"same");return n=J(n,t.batch_norm_offset),ir(n,0,6)})}var Due=.0010000000474974513;function Mue(e,t,r){return W(()=>{let n=ao(e,t.filters,r,"same");return n=no(n,t.batch_norm_mean,t.batch_norm_variance,t.batch_norm_offset,t.batch_norm_scale,Due),ir(n,0,6)})}function Oue(e){return[2,4,6,12].some(t=>t===e)?[2,2]:[1,1]}function zue(e,t){return W(()=>{let r,n=Rn(e,t.conv_0,[2,2]);if([t.conv_1,t.conv_2,t.conv_3,t.conv_4,t.conv_5,t.conv_6,t.conv_7,t.conv_8,t.conv_9,t.conv_10,t.conv_11,t.conv_12,t.conv_13].forEach((a,s)=>{let i=s+1,o=Oue(i);n=Mue(n,a.depthwise_conv,o),n=Rn(n,a.pointwise_conv,[1,1]),i===11&&(r=n)}),r===null)throw new Error("mobileNetV1 - output of conv layer 11 is null");return{out:n,conv11:r}})}function Lue(e,t,r){let n=e.arraySync(),a=Math.min(n[t][0],n[t][2]),s=Math.min(n[t][1],n[t][3]),i=Math.max(n[t][0],n[t][2]),o=Math.max(n[t][1],n[t][3]),u=Math.min(n[r][0],n[r][2]),p=Math.min(n[r][1],n[r][3]),l=Math.max(n[r][0],n[r][2]),d=Math.max(n[r][1],n[r][3]),h=(i-a)*(o-s),c=(l-u)*(d-p);if(h<=0||c<=0)return 0;let f=Math.max(a,u),m=Math.max(s,p),g=Math.min(i,l),y=Math.min(o,d),b=Math.max(g-f,0)*Math.max(y-m,0);return b/(h+c-b)}function Pue(e,t,r,n,a){let s=e.shape[0],i=Math.min(r,s),o=t.map((l,d)=>({score:l,boxIndex:d})).filter(l=>l.score>a).sort((l,d)=>d.score-l.score),u=l=>l<=n?1:0,p=[];return o.forEach(l=>{if(p.length>=i)return;let d=l.score;for(let h=p.length-1;h>=0;--h){let c=Lue(e,l.boxIndex,p[h]);if(c!==0&&(l.score*=u(c),l.score<=a))break}d===l.score&&p.push(l.boxIndex)}),p}function Bue(e){let t=Nt(Oe(e,[1,0])),r=[he(t[2],t[0]),he(t[3],t[1])],n=[J(t[0],me(r[0],2)),J(t[1],me(r[1],2))];return{sizes:r,centers:n}}function Wue(e,t){let{sizes:r,centers:n}=Bue(e),a=Nt(Oe(t,[1,0])),s=me(L(fr(me(a[2],5)),r[0]),2),i=J(L(me(a[0],10),r[0]),n[0]),o=me(L(fr(me(a[3],5)),r[1]),2),u=J(L(me(a[1],10),r[1]),n[1]);return Oe(Ot([he(i,s),he(u,o),J(i,s),J(u,o)]),[1,0])}function Vue(e,t,r){return W(()=>{let n=e.shape[0],a=Wue(P(Lr(r.extra_dim,[n,1,1]),[-1,4]),P(e,[-1,4]));a=P(a,[n,a.shape[0]/n,4]);let s=hn(Ve(t,[0,0,1],[-1,-1,-1])),i=Ve(s,[0,0,0],[-1,-1,1]);i=P(i,[n,i.shape[1]]);let o=Nt(a),u=Nt(i);return{boxes:o,scores:u}})}function vo(e,t){return W(()=>{let r=e.shape[0],n=P(ju(e,t.box_encoding_predictor),[r,-1,1,4]),a=P(ju(e,t.class_predictor),[r,-1,3]);return{boxPredictionEncoding:n,classPrediction:a}})}function Uue(e,t,r){return W(()=>{let n=Rn(e,r.conv_0,[1,1]),a=Rn(n,r.conv_1,[2,2]),s=Rn(a,r.conv_2,[1,1]),i=Rn(s,r.conv_3,[2,2]),o=Rn(i,r.conv_4,[1,1]),u=Rn(o,r.conv_5,[2,2]),p=Rn(u,r.conv_6,[1,1]),l=Rn(p,r.conv_7,[2,2]),d=vo(t,r.box_predictor_0),h=vo(e,r.box_predictor_1),c=vo(a,r.box_predictor_2),f=vo(i,r.box_predictor_3),m=vo(u,r.box_predictor_4),g=vo(l,r.box_predictor_5),y=at([d.boxPredictionEncoding,h.boxPredictionEncoding,c.boxPredictionEncoding,f.boxPredictionEncoding,m.boxPredictionEncoding,g.boxPredictionEncoding],1),b=at([d.classPrediction,h.classPrediction,c.classPrediction,f.classPrediction,m.classPrediction,g.classPrediction],1);return{boxPredictions:y,classPredictions:b}})}var Gue=class{constructor({minConfidence:e,maxResults:t}={}){if(this._name="SsdMobilenetv1Options",this._minConfidence=e||.5,this._maxResults=t||100,typeof this._minConfidence!="number"||this._minConfidence<=0||this._minConfidence>=1)throw new Error(`${this._name} - expected minConfidence to be a number between 0 and 1`);if(typeof this._maxResults!="number")throw new Error(`${this._name} - expected maxResults to be a number`)}get minConfidence(){return this._minConfidence}get maxResults(){return this._maxResults}},Hue=class extends rs{constructor(){super("SsdMobilenetv1")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("SsdMobilenetv1 - load model before inference");return W(()=>{let r=se(e.toBatchTensor(512,!1),"float32"),n=he(me(r,127.5),1),a=zue(n,t.mobilenetv1),{boxPredictions:s,classPredictions:i}=Uue(a.out,a.conv11,t.prediction_layer);return Vue(s,i,t.output_layer)})}async forward(e){return this.forwardInput(await $r(e))}async locateFaces(e,t={}){let{maxResults:r,minConfidence:n}=new Gue(t),a=await $r(e),{boxes:s,scores:i}=this.forwardInput(a),o=s[0],u=i[0];for(let y=1;y<s.length;y++)s[y].dispose(),i[y].dispose();let p=Array.from(u.dataSync()),l=Pue(o,p,r,.5,n),d=a.getReshapedInputDimensions(0),h=a.inputSize,c=h/d.width,f=h/d.height,m=o.arraySync(),g=l.map(y=>{let[b,x]=[Math.max(0,m[y][0]),Math.min(1,m[y][2])].map(T=>T*f),[v,I]=[Math.max(0,m[y][1]),Math.min(1,m[y][3])].map(T=>T*c);return new ua(p[y],new SC(v,b,I-v,x-b),{height:a.getInputHeight(0),width:a.getInputWidth(0)})});return o.dispose(),u.dispose(),g}getDefaultModelName(){return"ssd_mobilenetv1_model"}extractParamsFromWeightMap(e){return Rue(e)}extractParams(e){return Aue(e)}},jue=.4,que=[new Ke(.738768,.874946),new Ke(2.42204,2.65704),new Ke(4.30971,7.04493),new Ke(10.246,4.59428),new Ke(12.6868,11.8741)],Kue=[new Ke(1.603231,2.094468),new Ke(6.041143,7.080126),new Ke(2.882459,3.518061),new Ke(4.266906,5.178857),new Ke(9.041765,10.66308)],Xue=[117.001,114.697,97.404],Zue="tiny_yolov2_model",Jue="tiny_yolov2_separable_conv_model",jd=e=>typeof e=="number";function Yue(e){if(!e)throw new Error(`invalid config: ${e}`);if(typeof e.withSeparableConvs!="boolean")throw new Error(`config.withSeparableConvs has to be a boolean, have: ${e.withSeparableConvs}`);if(!jd(e.iouThreshold)||e.iouThreshold<0||e.iouThreshold>1)throw new Error(`config.iouThreshold has to be a number between [0, 1], have: ${e.iouThreshold}`);if(!Array.isArray(e.classes)||!e.classes.length||!e.classes.every(t=>typeof t=="string"))throw new Error(`config.classes has to be an array class names: string[], have: ${JSON.stringify(e.classes)}`);if(!Array.isArray(e.anchors)||!e.anchors.length||!e.anchors.map(t=>t||{}).every(t=>jd(t.x)&&jd(t.y)))throw new Error(`config.anchors has to be an array of { x: number, y: number }, have: ${JSON.stringify(e.anchors)}`);if(e.meanRgb&&(!Array.isArray(e.meanRgb)||e.meanRgb.length!==3||!e.meanRgb.every(jd)))throw new Error(`config.meanRgb has to be an array of shape [number, number, number], have: ${JSON.stringify(e.meanRgb)}`)}function Gx(e){return W(()=>{let t=L(e,ve(.10000000149011612));return J(et(he(e,t)),t)})}function ba(e,t){return W(()=>{let r=_n(e,[[0,0],[1,1],[1,1],[0,0]]);return r=cr(r,t.conv.filters,[1,1],"valid"),r=he(r,t.bn.sub),r=L(r,t.bn.truediv),r=J(r,t.conv.bias),Gx(r)})}function xa(e,t){return W(()=>{let r=_n(e,[[0,0],[1,1],[1,1],[0,0]]);return r=uu(r,t.depthwise_filter,t.pointwise_filter,[1,1],"valid"),r=J(r,t.bias),Gx(r)})}function Que(e,t){let r=Px(e,t);function n(i,o){let u=Qe(e(i)),p=Qe(e(i));return t.push({paramPath:`${o}/sub`},{paramPath:`${o}/truediv`}),{sub:u,truediv:p}}function a(i,o,u){let p=r(i,o,3,`${u}/conv`),l=n(o,`${u}/bn`);return{conv:p,bn:l}}let s=Bx(e,t);return{extractConvParams:r,extractConvWithBatchNormParams:a,extractSeparableConvParams:s}}function epe(e,t,r,n){let{extractWeights:a,getRemainingWeights:s}=as(e),i=[],{extractConvParams:o,extractConvWithBatchNormParams:u,extractSeparableConvParams:p}=Que(a,i),l;if(t.withSeparableConvs){let[d,h,c,f,m,g,y,b,x]=n,v=t.isFirstLayerConv2d?o(d,h,3,"conv0"):p(d,h,"conv0"),I=p(h,c,"conv1"),T=p(c,f,"conv2"),_=p(f,m,"conv3"),E=p(m,g,"conv4"),A=p(g,y,"conv5"),R=b?p(y,b,"conv6"):void 0,F=x?p(b,x,"conv7"):void 0,S=o(x||b||y,5*r,1,"conv8");l={conv0:v,conv1:I,conv2:T,conv3:_,conv4:E,conv5:A,conv6:R,conv7:F,conv8:S}}else{let[d,h,c,f,m,g,y,b,x]=n,v=u(d,h,"conv0"),I=u(h,c,"conv1"),T=u(c,f,"conv2"),_=u(f,m,"conv3"),E=u(m,g,"conv4"),A=u(g,y,"conv5"),R=u(y,b,"conv6"),F=u(b,x,"conv7"),S=o(x,5*r,1,"conv8");l={conv0:v,conv1:I,conv2:T,conv3:_,conv4:E,conv5:A,conv6:R,conv7:F,conv8:S}}if(s().length!==0)throw new Error(`weights remaing after extract: ${s().length}`);return{params:l,paramMappings:i}}function tpe(e,t){let r=mo(e,t);function n(o){let u=r(`${o}/sub`,1),p=r(`${o}/truediv`,1);return{sub:u,truediv:p}}function a(o){let u=r(`${o}/filters`,4),p=r(`${o}/bias`,1);return{filters:u,bias:p}}function s(o){let u=a(`${o}/conv`),p=n(`${o}/bn`);return{conv:u,bn:p}}let i=Wx(r);return{extractConvParams:a,extractConvWithBatchNormParams:s,extractSeparableConvParams:i}}function rpe(e,t){let r=[],{extractConvParams:n,extractConvWithBatchNormParams:a,extractSeparableConvParams:s}=tpe(e,r),i;if(t.withSeparableConvs){let o=t.filterSizes&&t.filterSizes.length||9;i={conv0:t.isFirstLayerConv2d?n("conv0"):s("conv0"),conv1:s("conv1"),conv2:s("conv2"),conv3:s("conv3"),conv4:s("conv4"),conv5:s("conv5"),conv6:o>7?s("conv6"):void 0,conv7:o>8?s("conv7"):void 0,conv8:n("conv8")}}else i={conv0:a("conv0"),conv1:a("conv1"),conv2:a("conv2"),conv3:a("conv3"),conv4:a("conv4"),conv5:a("conv5"),conv6:a("conv6"),conv7:a("conv7"),conv8:n("conv8")};return ns(e,r),{params:i,paramMappings:r}}var JC=class{constructor({inputSize:e,scoreThreshold:t}={}){if(this._name="TinyYolov2Options",this._inputSize=e||416,this._scoreThreshold=t||.5,typeof this._inputSize!="number"||this._inputSize%32!==0)throw new Error(`${this._name} - expected inputSize to be a number divisible by 32`);if(typeof this._scoreThreshold!="number"||this._scoreThreshold<=0||this._scoreThreshold>=1)throw new Error(`${this._name} - expected scoreThreshold to be a number between 0 and 1`)}get inputSize(){return this._inputSize}get scoreThreshold(){return this._scoreThreshold}},YC=class extends rs{constructor(e){super("TinyYolov2"),Yue(e),this._config=e}get config(){return this._config}get withClassScores(){return this.config.withClassScores||this.config.classes.length>1}get boxEncodingSize(){return 5+(this.withClassScores?this.config.classes.length:0)}runTinyYolov2(e,t){let r=ba(e,t.conv0);return r=Wt(r,[2,2],[2,2],"same"),r=ba(r,t.conv1),r=Wt(r,[2,2],[2,2],"same"),r=ba(r,t.conv2),r=Wt(r,[2,2],[2,2],"same"),r=ba(r,t.conv3),r=Wt(r,[2,2],[2,2],"same"),r=ba(r,t.conv4),r=Wt(r,[2,2],[2,2],"same"),r=ba(r,t.conv5),r=Wt(r,[2,2],[1,1],"same"),r=ba(r,t.conv6),r=ba(r,t.conv7),ju(r,t.conv8,"valid",!1)}runMobilenet(e,t){let r=this.config.isFirstLayerConv2d?Gx(ju(e,t.conv0,"valid",!1)):xa(e,t.conv0);return r=Wt(r,[2,2],[2,2],"same"),r=xa(r,t.conv1),r=Wt(r,[2,2],[2,2],"same"),r=xa(r,t.conv2),r=Wt(r,[2,2],[2,2],"same"),r=xa(r,t.conv3),r=Wt(r,[2,2],[2,2],"same"),r=xa(r,t.conv4),r=Wt(r,[2,2],[2,2],"same"),r=xa(r,t.conv5),r=Wt(r,[2,2],[1,1],"same"),r=t.conv6?xa(r,t.conv6):r,r=t.conv7?xa(r,t.conv7):r,ju(r,t.conv8,"valid",!1)}forwardInput(e,t){let{params:r}=this;if(!r)throw new Error("TinyYolov2 - load model before inference");return W(()=>{let n=se(e.toBatchTensor(t,!1),"float32");return n=this.config.meanRgb?fd(n,this.config.meanRgb):n,n=n.div(255),this.config.withSeparableConvs?this.runMobilenet(n,r):this.runTinyYolov2(n,r)})}async forward(e,t){return this.forwardInput(await $r(e),t)}async detect(e,t={}){let{inputSize:r,scoreThreshold:n}=new JC(t),a=await $r(e),s=await this.forwardInput(a,r),i=W(()=>Nt(s)[0].expandDims()),o={width:a.getInputWidth(0),height:a.getInputHeight(0)},u=await this.extractBoxes(i,a.getReshapedInputDimensions(0),n);s.dispose(),i.dispose();let p=u.map(c=>c.box),l=u.map(c=>c.score),d=u.map(c=>c.classScore),h=u.map(c=>this.config.classes[c.label]);return Ble(p.map(c=>c.rescale(r)),l,this.config.iouThreshold,!0).map(c=>new Dx(l[c],d[c],h[c],p[c],o))}getDefaultModelName(){return""}extractParamsFromWeightMap(e){return rpe(e,this.config)}extractParams(e){let t=this.config.filterSizes||YC.DEFAULT_FILTER_SIZES,r=t?t.length:void 0;if(r!==7&&r!==8&&r!==9)throw new Error(`TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found ${r} filterSizes in config`);return epe(e,this.config,this.boxEncodingSize,t)}async extractBoxes(e,t,r){let{width:n,height:a}=t,s=Math.max(n,a),i=s/n,o=s/a,u=e.shape[1],p=this.config.anchors.length,[l,d,h]=W(()=>{let g=e.reshape([u,u,p,this.boxEncodingSize]),y=g.slice([0,0,0,0],[u,u,p,4]),b=g.slice([0,0,0,4],[u,u,p,1]),x=this.withClassScores?Za(g.slice([0,0,0,5],[u,u,p,this.config.classes.length]),3):ve(0);return[y,b,x]}),c=[],f=await d.array(),m=await l.array();for(let g=0;g<u;g++)for(let y=0;y<u;y++)for(let b=0;b<p;b++){let x=Mf(f[g][y][b][0]);if(!r||x>r){let v=(y+Mf(m[g][y][b][0]))/u*i,I=(g+Mf(m[g][y][b][1]))/u*o,T=Math.exp(m[g][y][b][2])*this.config.anchors[b].x/u*i,_=Math.exp(m[g][y][b][3])*this.config.anchors[b].y/u*o,E=v-T/2,A=I-_/2,R={row:g,col:y,anchor:b},{classScore:F,label:S}=this.withClassScores?await this.extractPredictedClass(h,R):{classScore:1,label:0};c.push({box:new IC(E,A,E+T,A+_),score:x,classScore:x*F,label:S,...R})}}return l.dispose(),d.dispose(),h.dispose(),c}async extractPredictedClass(e,t){let{row:r,col:n,anchor:a}=t,s=await e.array();return Array(this.config.classes.length).fill(0).map((i,o)=>s[r][n][a][o]).map((i,o)=>({classScore:i,label:o})).reduce((i,o)=>i.classScore>o.classScore?i:o)}},Hx=YC;Hx.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024];var npe=class extends Hx{constructor(e=!0){let t={withSeparableConvs:e,iouThreshold:jue,classes:["face"],...e?{anchors:Kue,meanRgb:Xue}:{anchors:que,withClassScores:!0}};super(t)}get withSeparableConvs(){return this.config.withSeparableConvs}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map(r=>new ua(r.score,r.relativeBox,{width:r.imageWidth,height:r.imageHeight}))}getDefaultModelName(){return this.withSeparableConvs?Jue:Zue}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},lpe=class extends JC{constructor(){super(...arguments),this._name="TinyFaceDetectorOptions"}},ape=.4,spe=[new Ke(1.603231,2.094468),new Ke(6.041143,7.080126),new Ke(2.882459,3.518061),new Ke(4.266906,5.178857),new Ke(9.041765,10.66308)],ipe=[117.001,114.697,97.404],ope=class extends Hx{constructor(){let e={withSeparableConvs:!0,iouThreshold:ape,classes:["face"],anchors:spe,meanRgb:ipe,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]};super(e)}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map(r=>new ua(r.score,r.relativeBox,{width:r.imageWidth,height:r.imageHeight}))}getDefaultModelName(){return"tiny_face_detector_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},hf={ssdMobilenetv1:new Hue,tinyFaceDetector:new ope,tinyYolov2:new npe,faceLandmark68Net:new bue,faceLandmark68TinyNet:new kue,faceRecognitionNet:new Eue,faceExpressionNet:new nue,ageGenderNet:new yue},upe=(e,t)=>hf.tinyFaceDetector.locateFaces(e,t),ppe=e=>hf.faceLandmark68TinyNet.detectLandmarks(e),dpe=e=>hf.tinyFaceDetector.load(e),hpe=e=>hf.faceLandmark68TinyNet.load(e);export{upe as G,hpe as Q,dpe as Y,ppe as a,IC as m,lpe as p,RC as q,I_ as z};
//# sourceMappingURL=faceapi-B9LXjYUE.js.map
